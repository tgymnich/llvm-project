; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --include-generated-funcs --version 4
; RUN: opt < %s -S -passes="openmp-opt-postlink,ipsccp,simplifycfg" | FileCheck %s

target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

%struct.DeviceMemoryPoolTy = type { ptr, i64 }
%struct.DeviceMemoryPoolTrackingTy = type { i64, i64, i64, i64 }
%struct.DeviceEnvironmentTy = type { i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.ident_t = type { i32, i32, i32, i32, ptr }
%struct.DynamicEnvironmentTy = type { i16 }
%struct.KernelEnvironmentTy = type { %struct.ConfigurationEnvironmentTy, ptr, ptr }
%struct.ConfigurationEnvironmentTy = type { i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.NuclideGridPoint = type { double, double, double, double, double, double }

@__omp_rtl_device_memory_pool = weak protected global %struct.DeviceMemoryPoolTy zeroinitializer, align 8
@__omp_rtl_device_memory_pool_tracker = weak protected global %struct.DeviceMemoryPoolTrackingTy zeroinitializer, align 8
@__omp_rtl_device_environment = weak protected addrspace(4) global %struct.DeviceEnvironmentTy undef, align 8
@anon.c274b8f03cfdd4407cb1d89714014eb3.0 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@anon.c274b8f03cfdd4407cb1d89714014eb3.1 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 22, ptr @anon.c274b8f03cfdd4407cb1d89714014eb3.0 }, align 8
@__omp_offloading_run_event_based_simulation_dynamic_environment = weak_odr protected global %struct.DynamicEnvironmentTy zeroinitializer
@__omp_offloading_run_event_based_simulation_kernel_environment = weak_odr protected local_unnamed_addr constant %struct.KernelEnvironmentTy { %struct.ConfigurationEnvironmentTy { i8 0, i8 0, i8 2, i32 1, i32 128, i32 0, i32 0, i32 0, i32 0, i32 0, ptr null }, ptr @anon.c274b8f03cfdd4407cb1d89714014eb3.1, ptr @__omp_offloading_run_event_based_simulation_dynamic_environment }
@llvm.used = appending global [3 x ptr] [ptr addrspacecast (ptr addrspace(4) @__omp_rtl_device_environment to ptr), ptr @__omp_rtl_device_memory_pool, ptr @__omp_rtl_device_memory_pool_tracker], section "llvm.metadata"

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write)
declare void @llvm.assume(i1 noundef) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.nctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: alwaysinline norecurse nounwind
define weak_odr protected void @__omp_offloading_run_event_based_simulation(ptr noalias noundef %arg, ptr noundef nonnull align 8 dereferenceable(64) %arg1, ptr noundef nonnull align 8 dereferenceable(112) %arg2, ptr noundef %arg3) local_unnamed_addr #3 {
bb:
  %i = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x() #5
  %i4 = getelementptr inbounds i8, ptr %arg1, i64 24
  %i5 = load i32, ptr %i4, align 8, !tbaa !14
  %i6 = add nsw i32 %i5, -1
  %i7 = icmp sgt i32 %i5, 0
  br i1 %i7, label %bb8, label %bb330

bb8:                                              ; preds = %bb
  %i9 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #6, !range !21
  %i10 = tail call i32 @llvm.nvvm.read.ptx.sreg.nctaid.x() #7, !range !22
  %i11 = icmp ult i32 %i9, %i10
  tail call void @llvm.assume(i1 noundef %i11) #8
  %i12 = shl nsw i32 %i9, 7
  %i13 = shl nsw i32 %i10, 7
  %i14 = icmp slt i32 %i12, %i5
  br i1 %i14, label %bb15, label %bb330

bb15:                                             ; preds = %bb8
  %i16 = or disjoint i32 %i12, 127
  %i17 = tail call i32 @llvm.smin.i32(i32 %i16, i32 %i6), !range !23
  %i18 = tail call i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #7
  %i19 = getelementptr inbounds i8, ptr %arg1, i64 8
  %i20 = getelementptr inbounds i8, ptr %arg1, i64 16
  %i21 = getelementptr inbounds i8, ptr %arg2, i64 8
  %i22 = getelementptr inbounds i8, ptr %arg2, i64 24
  %i23 = getelementptr inbounds i8, ptr %arg2, i64 32
  %i24 = getelementptr inbounds i8, ptr %arg2, i64 40
  %i25 = getelementptr inbounds i8, ptr %arg2, i64 16
  %i26 = getelementptr inbounds i8, ptr %arg1, i64 40
  %i27 = getelementptr inbounds i8, ptr %arg1, i64 44
  %i28 = getelementptr inbounds i8, ptr %arg2, i64 76
  br label %bb29

bb29:                                             ; preds = %bb325, %bb15
  %i30 = phi i32 [ %i17, %bb15 ], [ %i328, %bb325 ]
  %i31 = phi i32 [ %i12, %bb15 ], [ %i326, %bb325 ]
  %i32 = zext i32 %i30 to i64
  tail call void @llvm.nvvm.barrier0() #9
  %i33 = load i32, ptr %i4, align 8, !tbaa !14
  %i34 = icmp sgt i32 %i33, 0
  br i1 %i34, label %bb35, label %bb325

bb35:                                             ; preds = %bb29
  %i36 = add nsw i32 %i31, %i
  %i37 = sext i32 %i36 to i64
  %i38 = icmp ugt i64 %i37, %i32
  br i1 %i38, label %bb325, label %bb39

bb39:                                             ; preds = %bb35, %bb302
  %i40 = phi i64 [ %i323, %bb302 ], [ %i37, %bb35 ]
  %i41 = trunc i64 %i40 to i32
  %i42 = shl nsw i32 %i41, 1
  %i43 = sext i32 %i42 to i64
  %i44 = and i64 %i43, 9223372036854775806
  %i45 = icmp eq i64 %i44, 0
  br i1 %i45, label %bb69, label %bb46

bb46:                                             ; preds = %bb39, %bb46
  %i47 = phi i64 [ %i58, %bb46 ], [ 0, %bb39 ]
  %i48 = phi i64 [ %i57, %bb46 ], [ 1, %bb39 ]
  %i49 = phi i64 [ %i60, %bb46 ], [ 1, %bb39 ]
  %i50 = phi i64 [ %i61, %bb46 ], [ 2806196910506780709, %bb39 ]
  %i51 = phi i64 [ %i62, %bb46 ], [ %i44, %bb39 ]
  %i52 = and i64 %i51, 1
  %i53 = icmp eq i64 %i52, 0
  %i54 = mul i64 %i50, %i47
  %i55 = add i64 %i54, %i49
  %i56 = select i1 %i53, i64 1, i64 %i50
  %i57 = mul i64 %i56, %i48
  %i58 = select i1 %i53, i64 %i47, i64 %i55
  %i59 = add i64 %i50, 1
  %i60 = mul i64 %i59, %i49
  %i61 = mul i64 %i50, %i50
  %i62 = lshr i64 %i51, 1
  %i63 = icmp ult i64 %i51, 2
  br i1 %i63, label %bb64, label %bb46

bb64:                                             ; preds = %bb46
  %i67 = mul i64 %i57, 1070
  %i68 = add i64 %i67, %i58
  br label %bb69

bb69:                                             ; preds = %bb64, %bb39
  %i70 = phi i64 [ 1070, %bb39 ], [ %i68, %bb64 ]
  %i71 = mul i64 %i70, 2806196910506780709
  %i72 = add i64 %i71, 1
  %i73 = and i64 %i72, 9223372036854775807
  %i74 = uitofp i64 %i73 to double
  %i75 = fmul double %i74, 0x3C00000000000000
  %i76 = mul i64 %i72, 2806196910506780709
  %i77 = add i64 %i76, 1
  %i78 = and i64 %i77, 9223372036854775807
  %i79 = uitofp i64 %i78 to double
  %i80 = fmul double %i79, 0x3C00000000000000
  %i81 = fcmp uge double %i80, 5.200000e-02
  br i1 %i81, label %bb82, label %bb103

bb82:                                             ; preds = %bb69
  %i83 = fcmp uge double %i80, 3.270000e-01
  br i1 %i83, label %bb84, label %bb103

bb84:                                             ; preds = %bb82
  %i85 = fcmp uge double %i80, 4.610000e-01
  br i1 %i85, label %bb86, label %bb103

bb86:                                             ; preds = %bb84
  %i87 = fcmp uge double %i80, 0x3FE3AE147AE147AF
  br i1 %i87, label %bb88, label %bb103

bb88:                                             ; preds = %bb86
  %i89 = fcmp uge double %i80, 6.790000e-01
  br i1 %i89, label %bb90, label %bb103

bb90:                                             ; preds = %bb88
  %i91 = fcmp uge double %i80, 0x3FE7D70A3D70A3D8
  br i1 %i91, label %bb92, label %bb103

bb92:                                             ; preds = %bb90
  %i93 = fcmp uge double %i80, 8.000000e-01
  br i1 %i93, label %bb94, label %bb103

bb94:                                             ; preds = %bb92
  %i95 = fcmp uge double %i80, 8.080000e-01
  br i1 %i95, label %bb96, label %bb103

bb96:                                             ; preds = %bb94
  %i97 = fcmp uge double %i80, 0x3FEA5604189374BD
  br i1 %i97, label %bb98, label %bb103

bb98:                                             ; preds = %bb96
  %i99 = fcmp uge double %i80, 0x3FEB22D0E560418A
  br i1 %i99, label %bb100, label %bb103

bb100:                                            ; preds = %bb98
  %i101 = fcmp uge double %i80, 0x3FEB8D4FDF3B645B
  br i1 %i101, label %bb102, label %bb103

bb102:                                            ; preds = %bb100
  br label %bb103

bb103:                                            ; preds = %bb102, %bb100, %bb98, %bb96, %bb94, %bb92, %bb90, %bb88, %bb86, %bb84, %bb82, %bb69
  %i104 = phi i32 [ 1, %bb69 ], [ 2, %bb82 ], [ 3, %bb84 ], [ 4, %bb86 ], [ 5, %bb88 ], [ 6, %bb90 ], [ 7, %bb92 ], [ 8, %bb94 ], [ 9, %bb96 ], [ 10, %bb98 ], [ 11, %bb100 ], [ 0, %bb102 ]
  %i105 = load i64, ptr %i19, align 8, !tbaa !24
  %i106 = load i64, ptr %i20, align 8, !tbaa !25
  %i107 = load ptr, ptr %arg2, align 8, !tbaa !26
  %i108 = load ptr, ptr %i21, align 8, !tbaa !28
  %i109 = load ptr, ptr %i22, align 8, !tbaa !29
  %i110 = load ptr, ptr %i23, align 8, !tbaa !30
  %i111 = load ptr, ptr %i24, align 8, !tbaa !31
  %i112 = load ptr, ptr %i25, align 8, !tbaa !32
  %i113 = load i32, ptr %i26, align 8, !tbaa !33
  %i114 = load i32, ptr %i27, align 4, !tbaa !34
  %i115 = load i32, ptr %i28, align 4, !tbaa !35
  switch i32 %i113, label %bb139 [
    i32 0, label %bb116
    i32 2, label %bb134
  ]

bb116:                                            ; preds = %bb103
  %i117 = mul nsw i64 %i106, %i105
  %i118 = icmp sgt i64 %i117, 2
  br i1 %i118, label %bb119, label %bb139

bb119:                                            ; preds = %bb116
  %i120 = add nsw i64 %i117, -1
  br label %bb121

bb121:                                            ; preds = %bb121, %bb119
  %i122 = phi i64 [ %i132, %bb121 ], [ %i120, %bb119 ]
  %i123 = phi i64 [ %i131, %bb121 ], [ 0, %bb119 ]
  %i124 = phi i64 [ %i130, %bb121 ], [ %i120, %bb119 ]
  %i125 = lshr i64 %i122, 1
  %i126 = add nuw nsw i64 %i125, %i123
  %i127 = getelementptr inbounds double, ptr %i109, i64 %i126
  %i128 = load double, ptr %i127, align 8, !tbaa !36
  %i129 = fcmp ogt double %i128, %i75
  %i130 = select i1 %i129, i64 %i126, i64 %i124
  %i131 = select i1 %i129, i64 %i123, i64 %i126
  %i132 = sub nsw i64 %i130, %i131
  %i133 = icmp sgt i64 %i132, 1
  br i1 %i133, label %bb121, label %bb139

bb134:                                            ; preds = %bb103
  tail call void @__ompx_split() #10
  %i135 = sitofp i32 %i114 to double
  %i136 = fdiv double 1.000000e+00, %i135
  %i137 = fdiv double %i75, %i136
  %i138 = fptosi double %i137 to i64
  br label %bb139

bb139:                                            ; preds = %bb121, %bb134, %bb116, %bb103
  %i140 = phi i64 [ %i138, %bb134 ], [ -1, %bb103 ], [ 0, %bb116 ], [ %i131, %bb121 ]
  %i141 = zext nneg i32 %i104 to i64
  %i142 = getelementptr inbounds i32, ptr %i107, i64 %i141
  %i143 = load i32, ptr %i142, align 4, !tbaa !38
  %i144 = icmp sgt i32 %i143, 0
  br i1 %i144, label %bb145, label %bb302

bb145:                                            ; preds = %bb139
  %i146 = mul nsw i32 %i115, %i104
  %i147 = mul nsw i64 %i140, %i105
  %i148 = getelementptr i32, ptr %i110, i64 %i147
  %i149 = add i64 %i106, -1
  %i150 = icmp sgt i64 %i106, 2
  %i151 = add nsw i32 %i114, -1
  %i152 = sext i32 %i151 to i64
  %i153 = icmp eq i64 %i140, %i152
  %i154 = add nsw i64 %i140, 1
  %i155 = mul nsw i64 %i154, %i105
  %i156 = getelementptr i32, ptr %i110, i64 %i155
  %i157 = trunc i64 %i106 to i32
  %i158 = add i32 %i157, -1
  br label %bb159

bb159:                                            ; preds = %bb255, %bb145
  %i160 = phi double [ 0.000000e+00, %bb145 ], [ %i298, %bb255 ]
  %i161 = phi double [ 0.000000e+00, %bb145 ], [ %i297, %bb255 ]
  %i162 = phi double [ 0.000000e+00, %bb145 ], [ %i296, %bb255 ]
  %i163 = phi double [ 0.000000e+00, %bb145 ], [ %i295, %bb255 ]
  %i164 = phi double [ 0.000000e+00, %bb145 ], [ %i294, %bb255 ]
  %i165 = phi i32 [ 0, %bb145 ], [ %i299, %bb255 ]
  %i166 = add nsw i32 %i165, %i146
  %i167 = sext i32 %i166 to i64
  %i168 = getelementptr inbounds i32, ptr %i112, i64 %i167
  %i169 = load i32, ptr %i168, align 4, !tbaa !38
  %i170 = getelementptr inbounds double, ptr %i108, i64 %i167
  %i171 = load double, ptr %i170, align 8, !tbaa !36
  switch i32 %i113, label %bb208 [
    i32 1, label %bb172
    i32 0, label %bb197
  ]

bb172:                                            ; preds = %bb159
  tail call void @__ompx_split() #10
  %i173 = sext i32 %i169 to i64
  %i174 = mul nsw i64 %i106, %i173
  %i175 = getelementptr %struct.NuclideGridPoint, ptr %i111, i64 %i174
  br i1 %i150, label %bb176, label %bb189

bb176:                                            ; preds = %bb172, %bb176
  %i177 = phi i64 [ %i187, %bb176 ], [ %i149, %bb172 ]
  %i178 = phi i64 [ %i186, %bb176 ], [ 0, %bb172 ]
  %i179 = phi i64 [ %i185, %bb176 ], [ %i149, %bb172 ]
  %i180 = lshr i64 %i177, 1
  %i181 = add nuw nsw i64 %i180, %i178
  %i182 = getelementptr inbounds %struct.NuclideGridPoint, ptr %i175, i64 %i181
  %i183 = load double, ptr %i182, align 8, !tbaa !39
  %i184 = fcmp ogt double %i183, %i75
  %i185 = select i1 %i184, i64 %i181, i64 %i179
  %i186 = select i1 %i184, i64 %i178, i64 %i181
  %i187 = sub nsw i64 %i185, %i186
  %i188 = icmp sgt i64 %i187, 1
  br i1 %i188, label %bb176, label %bb189

bb189:                                            ; preds = %bb176, %bb172
  %i190 = phi i64 [ 0, %bb172 ], [ %i186, %bb176 ]
  %i191 = icmp eq i64 %i190, %i149
  br i1 %i191, label %bb192, label %bb195

bb192:                                            ; preds = %bb189
  %i193 = getelementptr %struct.NuclideGridPoint, ptr %i175, i64 %i149
  %i194 = getelementptr i8, ptr %i193, i64 -48
  br label %bb255

bb195:                                            ; preds = %bb189
  %i196 = getelementptr %struct.NuclideGridPoint, ptr %i175, i64 %i190
  br label %bb255

bb197:                                            ; preds = %bb159
  %i198 = sext i32 %i169 to i64
  %i199 = getelementptr i32, ptr %i148, i64 %i198
  %i200 = load i32, ptr %i199, align 4, !tbaa !38
  %i201 = sext i32 %i200 to i64
  %i202 = icmp eq i64 %i149, %i201
  %i203 = mul nsw i64 %i106, %i198
  %i204 = getelementptr %struct.NuclideGridPoint, ptr %i111, i64 %i203
  %i205 = getelementptr %struct.NuclideGridPoint, ptr %i204, i64 %i201
  %i206 = select i1 %i202, i64 -48, i64 0
  %i207 = getelementptr i8, ptr %i205, i64 %i206
  br label %bb255

bb208:                                            ; preds = %bb159
  tail call void @__ompx_split() #10
  %i209 = sext i32 %i169 to i64
  %i210 = getelementptr i32, ptr %i148, i64 %i209
  %i211 = load i32, ptr %i210, align 4, !tbaa !38
  br i1 %i153, label %bb216, label %bb212

bb212:                                            ; preds = %bb208
  %i213 = getelementptr i32, ptr %i156, i64 %i209
  %i214 = load i32, ptr %i213, align 4, !tbaa !38
  %i215 = add nsw i32 %i214, 1
  br label %bb216

bb216:                                            ; preds = %bb212, %bb208
  %i217 = phi i32 [ %i215, %bb212 ], [ %i158, %bb208 ]
  %i218 = mul nsw i64 %i106, %i209
  %i219 = sext i32 %i211 to i64
  %i220 = getelementptr %struct.NuclideGridPoint, ptr %i111, i64 %i218
  %i221 = getelementptr %struct.NuclideGridPoint, ptr %i220, i64 %i219
  %i222 = load double, ptr %i221, align 8, !tbaa !39
  %i223 = sext i32 %i217 to i64
  %i224 = fcmp ult double %i222, %i75
  br i1 %i224, label %bb225, label %bb245

bb225:                                            ; preds = %bb216
  %i226 = getelementptr %struct.NuclideGridPoint, ptr %i220, i64 %i223
  %i227 = load double, ptr %i226, align 8, !tbaa !39
  %i228 = fcmp ugt double %i227, %i75
  br i1 %i228, label %bb229, label %bb245

bb229:                                            ; preds = %bb225
  %i230 = sub nsw i64 %i223, %i219
  %i231 = icmp sgt i64 %i230, 1
  br i1 %i231, label %bb232, label %bb245

bb232:                                            ; preds = %bb229, %bb232
  %i233 = phi i64 [ %i243, %bb232 ], [ %i230, %bb229 ]
  %i234 = phi i64 [ %i242, %bb232 ], [ %i219, %bb229 ]
  %i235 = phi i64 [ %i241, %bb232 ], [ %i223, %bb229 ]
  %i236 = lshr i64 %i233, 1
  %i237 = add nsw i64 %i236, %i234
  %i238 = getelementptr inbounds %struct.NuclideGridPoint, ptr %i220, i64 %i237
  %i239 = load double, ptr %i238, align 8, !tbaa !39
  %i240 = fcmp ogt double %i239, %i75
  %i241 = select i1 %i240, i64 %i237, i64 %i235
  %i242 = select i1 %i240, i64 %i234, i64 %i237
  %i243 = sub nsw i64 %i241, %i242
  %i244 = icmp sgt i64 %i243, 1
  br i1 %i244, label %bb232, label %bb245

bb245:                                            ; preds = %bb232, %bb229, %bb225, %bb216
  %i246 = phi i64 [ 0, %bb216 ], [ %i219, %bb229 ], [ %i149, %bb225 ], [ %i242, %bb232 ]
  %i247 = shl i64 %i246, 32
  %i248 = ashr exact i64 %i247, 32
  %i249 = icmp eq i64 %i248, %i149
  br i1 %i249, label %bb250, label %bb253

bb250:                                            ; preds = %bb245
  %i251 = getelementptr %struct.NuclideGridPoint, ptr %i220, i64 %i149
  %i252 = getelementptr i8, ptr %i251, i64 -48
  br label %bb255

bb253:                                            ; preds = %bb245
  %i254 = getelementptr %struct.NuclideGridPoint, ptr %i220, i64 %i248
  br label %bb255

bb255:                                            ; preds = %bb253, %bb250, %bb197, %bb195, %bb192
  %i256 = phi ptr [ %i194, %bb192 ], [ %i196, %bb195 ], [ %i252, %bb250 ], [ %i254, %bb253 ], [ %i207, %bb197 ]
  %i257 = getelementptr inbounds i8, ptr %i256, i64 48
  %i258 = load double, ptr %i257, align 8, !tbaa !39
  %i259 = fsub double %i258, %i75
  %i260 = load double, ptr %i256, align 8, !tbaa !39
  %i261 = fsub double %i258, %i260
  %i262 = getelementptr inbounds i8, ptr %i256, i64 56
  %i263 = load double, ptr %i262, align 8, !tbaa !41
  %i264 = getelementptr inbounds i8, ptr %i256, i64 8
  %i265 = load double, ptr %i264, align 8, !tbaa !41
  %i266 = fsub double %i263, %i265
  %i267 = fneg double %i259
  %i268 = fdiv double %i267, %i261
  %i269 = tail call double @llvm.fmuladd.f64(double %i268, double %i266, double %i263)
  %i270 = getelementptr inbounds i8, ptr %i256, i64 64
  %i271 = load double, ptr %i270, align 8, !tbaa !42
  %i272 = getelementptr inbounds i8, ptr %i256, i64 16
  %i273 = load double, ptr %i272, align 8, !tbaa !42
  %i274 = fsub double %i271, %i273
  %i275 = tail call double @llvm.fmuladd.f64(double %i268, double %i274, double %i271)
  %i276 = getelementptr inbounds i8, ptr %i256, i64 72
  %i277 = load double, ptr %i276, align 8, !tbaa !43
  %i278 = getelementptr inbounds i8, ptr %i256, i64 24
  %i279 = load double, ptr %i278, align 8, !tbaa !43
  %i280 = fsub double %i277, %i279
  %i281 = tail call double @llvm.fmuladd.f64(double %i268, double %i280, double %i277)
  %i282 = getelementptr inbounds i8, ptr %i256, i64 80
  %i283 = load double, ptr %i282, align 8, !tbaa !44
  %i284 = getelementptr inbounds i8, ptr %i256, i64 32
  %i285 = load double, ptr %i284, align 8, !tbaa !44
  %i286 = fsub double %i283, %i285
  %i287 = tail call double @llvm.fmuladd.f64(double %i268, double %i286, double %i283)
  %i288 = getelementptr inbounds i8, ptr %i256, i64 88
  %i289 = load double, ptr %i288, align 8, !tbaa !45
  %i290 = getelementptr inbounds i8, ptr %i256, i64 40
  %i291 = load double, ptr %i290, align 8, !tbaa !45
  %i292 = fsub double %i289, %i291
  %i293 = tail call double @llvm.fmuladd.f64(double %i268, double %i292, double %i289)
  %i294 = tail call double @llvm.fmuladd.f64(double %i269, double %i171, double %i164)
  %i295 = tail call double @llvm.fmuladd.f64(double %i275, double %i171, double %i163)
  %i296 = tail call double @llvm.fmuladd.f64(double %i281, double %i171, double %i162)
  %i297 = tail call double @llvm.fmuladd.f64(double %i287, double %i171, double %i161)
  %i298 = tail call double @llvm.fmuladd.f64(double %i293, double %i171, double %i160)
  %i299 = add nuw nsw i32 %i165, 1
  %i300 = load i32, ptr %i142, align 4, !tbaa !38
  %i301 = icmp slt i32 %i299, %i300
  br i1 %i301, label %bb159, label %bb302

bb302:                                            ; preds = %bb255, %bb139
  %i303 = phi double [ 0.000000e+00, %bb139 ], [ %i294, %bb255 ]
  %i304 = phi double [ 0.000000e+00, %bb139 ], [ %i295, %bb255 ]
  %i305 = phi double [ 0.000000e+00, %bb139 ], [ %i296, %bb255 ]
  %i306 = phi double [ 0.000000e+00, %bb139 ], [ %i297, %bb255 ]
  %i307 = phi double [ 0.000000e+00, %bb139 ], [ %i298, %bb255 ]
  %i308 = fcmp ogt double %i303, -1.000000e+00
  %i309 = select i1 %i308, double %i303, double -1.000000e+00
  %i310 = fcmp ogt double %i304, %i309
  %i311 = select i1 %i310, double %i304, double %i309
  %i312 = fcmp ogt double %i305, %i311
  %i313 = select i1 %i312, double %i305, double %i311
  %i314 = fcmp ogt double %i306, %i313
  %i315 = select i1 %i314, double %i306, double %i313
  %i316 = select i1 %i310, i64 2, i64 1
  %i317 = fcmp ogt double %i307, %i315
  %i318 = select i1 %i312, i64 3, i64 %i316
  %i319 = select i1 %i314, i64 4, i64 %i318
  %i320 = select i1 %i317, i64 5, i64 %i319
  %i321 = getelementptr inbounds i64, ptr %arg3, i64 %i40
  store i64 %i320, ptr %i321, align 8, !tbaa !46
  %i322 = add nsw i32 %i18, %i41
  %i323 = sext i32 %i322 to i64
  %i324 = icmp ugt i64 %i323, %i32
  br i1 %i324, label %bb325, label %bb39

bb325:                                            ; preds = %bb302, %bb35, %bb29
  tail call void @llvm.nvvm.barrier0() #9
  %i326 = add nsw i32 %i31, %i13
  %i327 = add nsw i32 %i30, %i13
  %i328 = tail call i32 @llvm.smin.i32(i32 %i327, i32 %i6)
  %i329 = icmp slt i32 %i326, %i5
  br i1 %i329, label %bb29, label %bb330

bb330:                                            ; preds = %bb325, %bb8, %bb
  ret void
}

; Function Attrs: convergent
declare void @__ompx_split(...) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: write) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline norecurse nounwind "frame-pointer"="all" "kernel" "no-trapping-math"="true" "omp_target_thread_limit"="128" "stack-protector-buffer-size"="8" "target-cpu"="sm_86" "target-features"="+ptx83,+sm_86" }
attributes #4 = { convergent "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_86" "target-features"="+ptx83,+sm_86" }
attributes #5 = { "llvm.assume"="ompx_no_call_asm" }
attributes #6 = { nofree nosync willreturn "llvm.assume"="ompx_no_call_asm" }
attributes #7 = { nosync "llvm.assume"="ompx_no_call_asm" }
attributes #8 = { memory(write) "llvm.assume"="ompx_no_call_asm" }
attributes #9 = { "llvm.assume"="ompx_no_call_asm,ompx_aligned_barrier" }
attributes #10 = { convergent nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !1, !0, !1, !1, !0, !1, !1, !0, !1, !1, !0, !1, !1, !0, !1, !1}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8, !9}
!nvvmir.version = !{!10, !10, !10, !10, !10, !10, !10, !10, !10, !10, !10, !10}
!nvvm.annotations = !{!11, !12}
!omp_offload.info = !{!13}

!0 = !{!"clang version 19.0.0git (git@github.com:tgymnich/llvm-project.git 3ab6ac657ffe454901ed6f5e78a906e9dba4e1af)"}
!1 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{i32 7, !"openmp", i32 51}
!4 = !{i32 7, !"openmp-device", i32 51}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"frame-pointer", i32 2}
!7 = !{i32 1, !"ThinLTO", i32 0}
!8 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!9 = !{i32 2, !"SDK Version", [2 x i32] [i32 12, i32 3]}
!10 = !{i32 2, i32 0}
!11 = !{ptr @__omp_offloading_run_event_based_simulation, !"maxntidx", i32 128}
!12 = !{ptr @__omp_offloading_run_event_based_simulation, !"kernel", i32 1}
!13 = !{i32 0, i32 64769, i32 2228997, !"run_event_based_simulation", i32 51, i32 0, i32 0}
!14 = !{!15, !16, i64 24}
!15 = !{!"", !16, i64 0, !19, i64 8, !19, i64 16, !16, i64 24, !20, i64 32, !16, i64 40, !16, i64 44, !16, i64 48, !16, i64 52, !16, i64 56, !16, i64 60}
!16 = !{!"int", !17, i64 0}
!17 = !{!"omnipotent char", !18, i64 0}
!18 = !{!"Simple C/C++ TBAA"}
!19 = !{!"long", !17, i64 0}
!20 = !{!"any pointer", !17, i64 0}
!21 = !{i32 0, i32 -1}
!22 = !{i32 1, i32 0}
!23 = !{i32 -2147483648, i32 2147483647}
!24 = !{!15, !19, i64 8}
!25 = !{!15, !19, i64 16}
!26 = !{!27, !20, i64 0}
!27 = !{!"", !20, i64 0, !20, i64 8, !20, i64 16, !20, i64 24, !20, i64 32, !20, i64 40, !16, i64 48, !16, i64 52, !16, i64 56, !16, i64 60, !19, i64 64, !16, i64 72, !16, i64 76, !20, i64 80, !16, i64 88, !20, i64 96, !16, i64 104}
!28 = !{!27, !20, i64 8}
!29 = !{!27, !20, i64 24}
!30 = !{!27, !20, i64 32}
!31 = !{!27, !20, i64 40}
!32 = !{!27, !20, i64 16}
!33 = !{!15, !16, i64 40}
!34 = !{!15, !16, i64 44}
!35 = !{!27, !16, i64 76}
!36 = !{!37, !37, i64 0}
!37 = !{!"double", !17, i64 0}
!38 = !{!16, !16, i64 0}
!39 = !{!40, !37, i64 0}
!40 = !{!"", !37, i64 0, !37, i64 8, !37, i64 16, !37, i64 24, !37, i64 32, !37, i64 40}
!41 = !{!40, !37, i64 8}
!42 = !{!40, !37, i64 16}
!43 = !{!40, !37, i64 24}
!44 = !{!40, !37, i64 32}
!45 = !{!40, !37, i64 40}
!46 = !{!47, !47, i64 0}
!47 = !{!"long long", !17, i64 0}
; CHECK-LABEL: define weak_odr protected void @__omp_offloading_run_event_based_simulation(
; CHECK-SAME: ptr noalias noundef [[ARG:%.*]], ptr noundef nonnull align 8 dereferenceable(64) [[ARG1:%.*]], ptr noundef nonnull align 8 dereferenceable(112) [[ARG2:%.*]], ptr noundef [[ARG3:%.*]]) local_unnamed_addr #[[ATTR3:[0-9]+]] {
; CHECK-NEXT:  ContDispatchBB:
; CHECK-NEXT:    [[I18:%.*]] = tail call i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #[[ATTR5:[0-9]+]]
; CHECK-NEXT:    [[I10:%.*]] = tail call i32 @llvm.nvvm.read.ptx.sreg.nctaid.x() #[[ATTR5]], !range [[RNG17:![0-9]+]]
; CHECK-NEXT:    [[I9:%.*]] = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #[[ATTR6:[0-9]+]], !range [[RNG18:![0-9]+]]
; CHECK-NEXT:    [[I:%.*]] = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x() #[[ATTR7:[0-9]+]]
; CHECK-NEXT:    [[I4:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 24
; CHECK-NEXT:    [[I5:%.*]] = load i32, ptr [[I4]], align 8, !tbaa [[TBAA19:![0-9]+]]
; CHECK-NEXT:    [[I6:%.*]] = add nsw i32 [[I5]], -1
; CHECK-NEXT:    [[I7:%.*]] = icmp sgt i32 [[I5]], 0
; CHECK-NEXT:    br i1 [[I7]], label [[BB8:%.*]], label [[BB330:%.*]]
; CHECK:       bb8:
; CHECK-NEXT:    [[I11:%.*]] = icmp ult i32 [[I9]], [[I10]]
; CHECK-NEXT:    tail call void @llvm.assume(i1 noundef [[I11]]) #[[ATTR8:[0-9]+]]
; CHECK-NEXT:    [[I12:%.*]] = shl nsw i32 [[I9]], 7
; CHECK-NEXT:    [[I13:%.*]] = shl nsw i32 [[I10]], 7
; CHECK-NEXT:    [[I14:%.*]] = icmp slt i32 [[I12]], [[I5]]
; CHECK-NEXT:    br i1 [[I14]], label [[BB15:%.*]], label [[BB330]]
; CHECK:       bb15:
; CHECK-NEXT:    [[I16:%.*]] = or disjoint i32 [[I12]], 127
; CHECK-NEXT:    [[I17:%.*]] = tail call i32 @llvm.smin.i32(i32 [[I16]], i32 [[I6]]), !range [[RNG26:![0-9]+]]
; CHECK-NEXT:    [[I19:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 8
; CHECK-NEXT:    [[I20:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 16
; CHECK-NEXT:    [[I21:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 8
; CHECK-NEXT:    [[I22:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 24
; CHECK-NEXT:    [[I23:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 32
; CHECK-NEXT:    [[I24:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 40
; CHECK-NEXT:    [[I25:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 16
; CHECK-NEXT:    [[I26:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 40
; CHECK-NEXT:    [[I27:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 44
; CHECK-NEXT:    [[I28:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 76
; CHECK-NEXT:    br label [[BB29:%.*]]
; CHECK:       bb29:
; CHECK-NEXT:    [[I28145:%.*]] = phi ptr [ [[I28]], [[BB15]] ], [ [[I28147:%.*]], [[BB325:%.*]] ]
; CHECK-NEXT:    [[I25141:%.*]] = phi ptr [ [[I25]], [[BB15]] ], [ [[I25143:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I24137:%.*]] = phi ptr [ [[I24]], [[BB15]] ], [ [[I24139:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I23133:%.*]] = phi ptr [ [[I23]], [[BB15]] ], [ [[I23135:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I22129:%.*]] = phi ptr [ [[I22]], [[BB15]] ], [ [[I22131:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I21125:%.*]] = phi ptr [ [[I21]], [[BB15]] ], [ [[I21127:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I6124:%.*]] = phi i32 [ [[I6]], [[BB15]] ], [ [[I6122:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I27113:%.*]] = phi ptr [ [[I27]], [[BB15]] ], [ [[I27115:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I26109:%.*]] = phi ptr [ [[I26]], [[BB15]] ], [ [[I26111:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I20105:%.*]] = phi ptr [ [[I20]], [[BB15]] ], [ [[I20107:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I19101:%.*]] = phi ptr [ [[I19]], [[BB15]] ], [ [[I19103:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I4100:%.*]] = phi ptr [ [[I4]], [[BB15]] ], [ [[I498:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I1394:%.*]] = phi i32 [ [[I13]], [[BB15]] ], [ [[I1395:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I1892:%.*]] = phi i32 [ [[I18]], [[BB15]] ], [ [[I1890:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I88:%.*]] = phi i32 [ [[I]], [[BB15]] ], [ [[I84:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I572:%.*]] = phi i32 [ [[I5]], [[BB15]] ], [ [[I570:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I1050:%.*]] = phi i32 [ [[I10]], [[BB15]] ], [ [[I1048:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I30:%.*]] = phi i32 [ [[I17]], [[BB15]] ], [ [[I328:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I31:%.*]] = phi i32 [ [[I12]], [[BB15]] ], [ [[I326:%.*]], [[BB325]] ]
; CHECK-NEXT:    [[I32:%.*]] = zext i32 [[I30]] to i64
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9:[0-9]+]]
; CHECK-NEXT:    [[I33:%.*]] = load i32, ptr [[I4100]], align 8, !tbaa [[TBAA19]]
; CHECK-NEXT:    [[I34:%.*]] = icmp sgt i32 [[I33]], 0
; CHECK-NEXT:    br i1 [[I34]], label [[BB35:%.*]], label [[BB325]]
; CHECK:       bb35:
; CHECK-NEXT:    [[I36:%.*]] = add nsw i32 [[I31]], [[I88]]
; CHECK-NEXT:    [[I37:%.*]] = sext i32 [[I36]] to i64
; CHECK-NEXT:    [[I38:%.*]] = icmp ugt i64 [[I37]], [[I32]]
; CHECK-NEXT:    br i1 [[I38]], label [[BB325]], label [[BB39:%.*]]
; CHECK:       bb39:
; CHECK-NEXT:    [[I28148:%.*]] = phi ptr [ [[I28145]], [[BB35]] ], [ [[I28146468:%.*]], [[BB302:%.*]] ]
; CHECK-NEXT:    [[I25144:%.*]] = phi ptr [ [[I25141]], [[BB35]] ], [ [[I25142465:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I24140:%.*]] = phi ptr [ [[I24137]], [[BB35]] ], [ [[I24138462:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I23136:%.*]] = phi ptr [ [[I23133]], [[BB35]] ], [ [[I23134459:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I22132:%.*]] = phi ptr [ [[I22129]], [[BB35]] ], [ [[I22130456:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I21128:%.*]] = phi ptr [ [[I21125]], [[BB35]] ], [ [[I21126453:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I6123:%.*]] = phi i32 [ [[I6124]], [[BB35]] ], [ [[I6121450:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I32120:%.*]] = phi i64 [ [[I32]], [[BB35]] ], [ [[I32119447:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I27116:%.*]] = phi ptr [ [[I27113]], [[BB35]] ], [ [[I27114439:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I26112:%.*]] = phi ptr [ [[I26109]], [[BB35]] ], [ [[I26110436:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I20108:%.*]] = phi ptr [ [[I20105]], [[BB35]] ], [ [[I20106433:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I19104:%.*]] = phi ptr [ [[I19101]], [[BB35]] ], [ [[I19102430:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I499:%.*]] = phi ptr [ [[I4100]], [[BB35]] ], [ [[I497427:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1396:%.*]] = phi i32 [ [[I1394]], [[BB35]] ], [ [[I1393424:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1891:%.*]] = phi i32 [ [[I1892]], [[BB35]] ], [ [[I1889421:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I86:%.*]] = phi i32 [ [[I88]], [[BB35]] ], [ [[I82418:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I571:%.*]] = phi i32 [ [[I572]], [[BB35]] ], [ [[I569415:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3068:%.*]] = phi i32 [ [[I30]], [[BB35]] ], [ [[I3066412:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3165:%.*]] = phi i32 [ [[I31]], [[BB35]] ], [ [[I3163409:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1049:%.*]] = phi i32 [ [[I1050]], [[BB35]] ], [ [[I1047393:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I40:%.*]] = phi i64 [ [[I37]], [[BB35]] ], [ [[I323:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I41:%.*]] = trunc i64 [[I40]] to i32
; CHECK-NEXT:    [[I42:%.*]] = shl nuw nsw i32 [[I41]], 1
; CHECK-NEXT:    [[I43:%.*]] = sext i32 [[I42]] to i64
; CHECK-NEXT:    [[I44:%.*]] = and i64 [[I43]], 9223372036854775806
; CHECK-NEXT:    [[I45:%.*]] = icmp eq i64 [[I44]], 0
; CHECK-NEXT:    br i1 [[I45]], label [[BB69:%.*]], label [[BB46:%.*]]
; CHECK:       bb46:
; CHECK-NEXT:    [[I47:%.*]] = phi i64 [ 0, [[BB39]] ], [ [[I58:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I48:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I57:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I49:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I60:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I50:%.*]] = phi i64 [ 2806196910506780709, [[BB39]] ], [ [[I61:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I51:%.*]] = phi i64 [ [[I44]], [[BB39]] ], [ [[I62:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I52:%.*]] = and i64 [[I51]], 1
; CHECK-NEXT:    [[I53:%.*]] = icmp eq i64 [[I52]], 0
; CHECK-NEXT:    [[I54:%.*]] = mul i64 [[I50]], [[I47]]
; CHECK-NEXT:    [[I55:%.*]] = add i64 [[I54]], [[I49]]
; CHECK-NEXT:    [[I56:%.*]] = select i1 [[I53]], i64 1, i64 [[I50]]
; CHECK-NEXT:    [[I57]] = mul i64 [[I56]], [[I48]]
; CHECK-NEXT:    [[I58]] = select i1 [[I53]], i64 [[I47]], i64 [[I55]]
; CHECK-NEXT:    [[I59:%.*]] = add i64 [[I50]], 1
; CHECK-NEXT:    [[I60]] = mul i64 [[I59]], [[I49]]
; CHECK-NEXT:    [[I61]] = mul i64 [[I50]], [[I50]]
; CHECK-NEXT:    [[I62]] = lshr i64 [[I51]], 1
; CHECK-NEXT:    [[I63:%.*]] = icmp ult i64 [[I51]], 2
; CHECK-NEXT:    br i1 [[I63]], label [[BB64:%.*]], label [[BB46]]
; CHECK:       bb64:
; CHECK-NEXT:    [[I67:%.*]] = mul i64 [[I57]], 1070
; CHECK-NEXT:    [[I68:%.*]] = add i64 [[I67]], [[I58]]
; CHECK-NEXT:    br label [[BB69]]
; CHECK:       bb69:
; CHECK-NEXT:    [[I70:%.*]] = phi i64 [ [[I68]], [[BB64]] ], [ 1070, [[BB39]] ]
; CHECK-NEXT:    [[I71:%.*]] = mul i64 [[I70]], 2806196910506780709
; CHECK-NEXT:    [[I72:%.*]] = add i64 [[I71]], 1
; CHECK-NEXT:    [[I73:%.*]] = and i64 [[I72]], 9223372036854775807
; CHECK-NEXT:    [[I74:%.*]] = uitofp i64 [[I73]] to double
; CHECK-NEXT:    [[I75:%.*]] = fmul double [[I74]], 0x3C00000000000000
; CHECK-NEXT:    [[I76:%.*]] = mul i64 [[I72]], 2806196910506780709
; CHECK-NEXT:    [[I77:%.*]] = add i64 [[I76]], 1
; CHECK-NEXT:    [[I78:%.*]] = and i64 [[I77]], 9223372036854775807
; CHECK-NEXT:    [[I79:%.*]] = uitofp i64 [[I78]] to double
; CHECK-NEXT:    [[I80:%.*]] = fmul double [[I79]], 0x3C00000000000000
; CHECK-NEXT:    [[I81:%.*]] = fcmp uge double [[I80]], 5.200000e-02
; CHECK-NEXT:    br i1 [[I81]], label [[BB82:%.*]], label [[BB103:%.*]]
; CHECK:       bb82:
; CHECK-NEXT:    [[I83:%.*]] = fcmp uge double [[I80]], 3.270000e-01
; CHECK-NEXT:    br i1 [[I83]], label [[BB84:%.*]], label [[BB103]]
; CHECK:       bb84:
; CHECK-NEXT:    [[I85:%.*]] = fcmp uge double [[I80]], 4.610000e-01
; CHECK-NEXT:    br i1 [[I85]], label [[BB86:%.*]], label [[BB103]]
; CHECK:       bb86:
; CHECK-NEXT:    [[I87:%.*]] = fcmp uge double [[I80]], 0x3FE3AE147AE147AF
; CHECK-NEXT:    br i1 [[I87]], label [[BB88:%.*]], label [[BB103]]
; CHECK:       bb88:
; CHECK-NEXT:    [[I89:%.*]] = fcmp uge double [[I80]], 6.790000e-01
; CHECK-NEXT:    br i1 [[I89]], label [[BB90:%.*]], label [[BB103]]
; CHECK:       bb90:
; CHECK-NEXT:    [[I91:%.*]] = fcmp uge double [[I80]], 0x3FE7D70A3D70A3D8
; CHECK-NEXT:    br i1 [[I91]], label [[BB92:%.*]], label [[BB103]]
; CHECK:       bb92:
; CHECK-NEXT:    [[I93:%.*]] = fcmp uge double [[I80]], 8.000000e-01
; CHECK-NEXT:    br i1 [[I93]], label [[BB94:%.*]], label [[BB103]]
; CHECK:       bb94:
; CHECK-NEXT:    [[I95:%.*]] = fcmp uge double [[I80]], 8.080000e-01
; CHECK-NEXT:    br i1 [[I95]], label [[BB96:%.*]], label [[BB103]]
; CHECK:       bb96:
; CHECK-NEXT:    [[I97:%.*]] = fcmp uge double [[I80]], 0x3FEA5604189374BD
; CHECK-NEXT:    br i1 [[I97]], label [[BB98:%.*]], label [[BB103]]
; CHECK:       bb98:
; CHECK-NEXT:    [[I99:%.*]] = fcmp uge double [[I80]], 0x3FEB22D0E560418A
; CHECK-NEXT:    br i1 [[I99]], label [[BB100:%.*]], label [[BB103]]
; CHECK:       bb100:
; CHECK-NEXT:    [[I101:%.*]] = fcmp uge double [[I80]], 0x3FEB8D4FDF3B645B
; CHECK-NEXT:    br i1 [[I101]], label [[BB103_FROM_BB103_FROM_BB103_FROM_BB102:%.*]], label [[BB103]]
; CHECK:       bb103.from.bb103.from.bb103.from.bb102:
; CHECK-NEXT:    br label [[BB103]]
; CHECK:       bb103:
; CHECK-NEXT:    [[I104:%.*]] = phi i32 [ 0, [[BB103_FROM_BB103_FROM_BB103_FROM_BB102]] ], [ 1, [[BB69]] ], [ 2, [[BB82]] ], [ 3, [[BB84]] ], [ 4, [[BB86]] ], [ 5, [[BB88]] ], [ 6, [[BB90]] ], [ 7, [[BB92]] ], [ 8, [[BB94]] ], [ 9, [[BB96]] ], [ 10, [[BB98]] ], [ 11, [[BB100]] ]
; CHECK-NEXT:    [[I105:%.*]] = load i64, ptr [[I19104]], align 8, !tbaa [[TBAA27:![0-9]+]]
; CHECK-NEXT:    [[I106:%.*]] = load i64, ptr [[I20108]], align 8, !tbaa [[TBAA28:![0-9]+]]
; CHECK-NEXT:    [[I107:%.*]] = load ptr, ptr [[ARG2]], align 8, !tbaa [[TBAA29:![0-9]+]]
; CHECK-NEXT:    [[I108:%.*]] = load ptr, ptr [[I21128]], align 8, !tbaa [[TBAA31:![0-9]+]]
; CHECK-NEXT:    [[I109:%.*]] = load ptr, ptr [[I22132]], align 8, !tbaa [[TBAA32:![0-9]+]]
; CHECK-NEXT:    [[I110:%.*]] = load ptr, ptr [[I23136]], align 8, !tbaa [[TBAA33:![0-9]+]]
; CHECK-NEXT:    [[I111:%.*]] = load ptr, ptr [[I24140]], align 8, !tbaa [[TBAA34:![0-9]+]]
; CHECK-NEXT:    [[I112:%.*]] = load ptr, ptr [[I25144]], align 8, !tbaa [[TBAA35:![0-9]+]]
; CHECK-NEXT:    [[I113:%.*]] = load i32, ptr [[I26112]], align 8, !tbaa [[TBAA36:![0-9]+]]
; CHECK-NEXT:    [[I114:%.*]] = load i32, ptr [[I27116]], align 4, !tbaa [[TBAA37:![0-9]+]]
; CHECK-NEXT:    [[I115:%.*]] = load i32, ptr [[I28148]], align 4, !tbaa [[TBAA38:![0-9]+]]
; CHECK-NEXT:    switch i32 [[I113]], label [[BB139:%.*]] [
; CHECK-NEXT:      i32 0, label [[BB116:%.*]]
; CHECK-NEXT:      i32 2, label [[CACHESTORE0:%.*]]
; CHECK-NEXT:    ]
; CHECK:       bb116:
; CHECK-NEXT:    [[I117:%.*]] = mul nsw i64 [[I106]], [[I105]]
; CHECK-NEXT:    [[I118:%.*]] = icmp sgt i64 [[I117]], 2
; CHECK-NEXT:    br i1 [[I118]], label [[BB119:%.*]], label [[BB139]]
; CHECK:       bb119:
; CHECK-NEXT:    [[I120:%.*]] = add nsw i64 [[I117]], -1
; CHECK-NEXT:    br label [[BB121:%.*]]
; CHECK:       bb121:
; CHECK-NEXT:    [[I122:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I132:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I123:%.*]] = phi i64 [ 0, [[BB119]] ], [ [[I131:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I124:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I130:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I125:%.*]] = lshr i64 [[I122]], 1
; CHECK-NEXT:    [[I126:%.*]] = add nuw nsw i64 [[I125]], [[I123]]
; CHECK-NEXT:    [[I127:%.*]] = getelementptr inbounds double, ptr [[I109]], i64 [[I126]]
; CHECK-NEXT:    [[I128:%.*]] = load double, ptr [[I127]], align 8, !tbaa [[TBAA39:![0-9]+]]
; CHECK-NEXT:    [[I129:%.*]] = fcmp ogt double [[I128]], [[I75]]
; CHECK-NEXT:    [[I130]] = select i1 [[I129]], i64 [[I126]], i64 [[I124]]
; CHECK-NEXT:    [[I131]] = select i1 [[I129]], i64 [[I123]], i64 [[I126]]
; CHECK-NEXT:    [[I132]] = sub nsw i64 [[I130]], [[I131]]
; CHECK-NEXT:    [[I133:%.*]] = icmp sgt i64 [[I132]], 1
; CHECK-NEXT:    br i1 [[I133]], label [[BB121]], label [[BB139]]
; CHECK:       CacheStore0:
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP1:%.*]] = load ptr, ptr [[TMP0]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR:%.*]] = getelementptr inbounds i32, ptr [[TMP1]], i32 0
; CHECK-NEXT:    [[CACHEIDX:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP2:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP3:%.*]] = load ptr, ptr [[TMP2]], align 8
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds ptr, ptr [[TMP3]], i32 0
; CHECK-NEXT:    [[CACHE_OUT_PTR:%.*]] = load ptr, ptr [[TMP4]], align 8
; CHECK-NEXT:    [[CACHECELL:%.*]] = getelementptr inbounds [[CACHE_CELL0:%.*]], ptr [[CACHE_OUT_PTR]], i32 [[CACHEIDX]]
; CHECK-NEXT:    [[I10_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 0
; CHECK-NEXT:    store i32 [[I1049]], ptr [[I10_CACHEIDX]], align 4
; CHECK-NEXT:    [[I70_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 1
; CHECK-NEXT:    store i64 [[I70]], ptr [[I70_CACHEIDX]], align 8
; CHECK-NEXT:    [[I115_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I115]], ptr [[I115_CACHEIDX]], align 4
; CHECK-NEXT:    [[I114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 3
; CHECK-NEXT:    store i32 [[I114]], ptr [[I114_CACHEIDX]], align 4
; CHECK-NEXT:    [[I113_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 4
; CHECK-NEXT:    store i32 2, ptr [[I113_CACHEIDX]], align 4
; CHECK-NEXT:    [[I112_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 5
; CHECK-NEXT:    store ptr [[I112]], ptr [[I112_CACHEIDX]], align 8
; CHECK-NEXT:    [[I111_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 6
; CHECK-NEXT:    store ptr [[I111]], ptr [[I111_CACHEIDX]], align 8
; CHECK-NEXT:    [[I110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 7
; CHECK-NEXT:    store ptr [[I110]], ptr [[I110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I108_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I108]], ptr [[I108_CACHEIDX]], align 8
; CHECK-NEXT:    [[I107_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 9
; CHECK-NEXT:    store ptr [[I107]], ptr [[I107_CACHEIDX]], align 8
; CHECK-NEXT:    [[I106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 10
; CHECK-NEXT:    store i64 [[I106]], ptr [[I106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I105_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 11
; CHECK-NEXT:    store i64 [[I105]], ptr [[I105_CACHEIDX]], align 8
; CHECK-NEXT:    [[I104_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 12
; CHECK-NEXT:    store i32 [[I104]], ptr [[I104_CACHEIDX]], align 4
; CHECK-NEXT:    [[I40_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 13
; CHECK-NEXT:    store i64 [[I40]], ptr [[I40_CACHEIDX]], align 8
; CHECK-NEXT:    [[I31_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I3165]], ptr [[I31_CACHEIDX]], align 4
; CHECK-NEXT:    [[I30_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 15
; CHECK-NEXT:    store i32 [[I3068]], ptr [[I30_CACHEIDX]], align 4
; CHECK-NEXT:    [[I5_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 16
; CHECK-NEXT:    store i32 [[I571]], ptr [[I5_CACHEIDX]], align 4
; CHECK-NEXT:    [[I_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 17
; CHECK-NEXT:    store i32 [[I86]], ptr [[I_CACHEIDX]], align 4
; CHECK-NEXT:    [[I18_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 18
; CHECK-NEXT:    store i32 [[I1891]], ptr [[I18_CACHEIDX]], align 4
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb139:
; CHECK-NEXT:    [[I28146:%.*]] = phi ptr [ [[I28148]], [[BB103]] ], [ [[I28148]], [[BB116]] ], [ [[I28148]], [[BB121]] ]
; CHECK-NEXT:    [[I25142:%.*]] = phi ptr [ [[I25144]], [[BB103]] ], [ [[I25144]], [[BB116]] ], [ [[I25144]], [[BB121]] ]
; CHECK-NEXT:    [[I24138:%.*]] = phi ptr [ [[I24140]], [[BB103]] ], [ [[I24140]], [[BB116]] ], [ [[I24140]], [[BB121]] ]
; CHECK-NEXT:    [[I23134:%.*]] = phi ptr [ [[I23136]], [[BB103]] ], [ [[I23136]], [[BB116]] ], [ [[I23136]], [[BB121]] ]
; CHECK-NEXT:    [[I22130:%.*]] = phi ptr [ [[I22132]], [[BB103]] ], [ [[I22132]], [[BB116]] ], [ [[I22132]], [[BB121]] ]
; CHECK-NEXT:    [[I21126:%.*]] = phi ptr [ [[I21128]], [[BB103]] ], [ [[I21128]], [[BB116]] ], [ [[I21128]], [[BB121]] ]
; CHECK-NEXT:    [[I6121:%.*]] = phi i32 [ [[I6123]], [[BB103]] ], [ [[I6123]], [[BB116]] ], [ [[I6123]], [[BB121]] ]
; CHECK-NEXT:    [[I32119:%.*]] = phi i64 [ [[I32120]], [[BB103]] ], [ [[I32120]], [[BB116]] ], [ [[I32120]], [[BB121]] ]
; CHECK-NEXT:    [[I41118:%.*]] = phi i32 [ [[I41]], [[BB103]] ], [ [[I41]], [[BB116]] ], [ [[I41]], [[BB121]] ]
; CHECK-NEXT:    [[I75117:%.*]] = phi double [ [[I75]], [[BB103]] ], [ [[I75]], [[BB116]] ], [ [[I75]], [[BB121]] ]
; CHECK-NEXT:    [[I27114:%.*]] = phi ptr [ [[I27116]], [[BB103]] ], [ [[I27116]], [[BB116]] ], [ [[I27116]], [[BB121]] ]
; CHECK-NEXT:    [[I26110:%.*]] = phi ptr [ [[I26112]], [[BB103]] ], [ [[I26112]], [[BB116]] ], [ [[I26112]], [[BB121]] ]
; CHECK-NEXT:    [[I20106:%.*]] = phi ptr [ [[I20108]], [[BB103]] ], [ [[I20108]], [[BB116]] ], [ [[I20108]], [[BB121]] ]
; CHECK-NEXT:    [[I19102:%.*]] = phi ptr [ [[I19104]], [[BB103]] ], [ [[I19104]], [[BB116]] ], [ [[I19104]], [[BB121]] ]
; CHECK-NEXT:    [[I497:%.*]] = phi ptr [ [[I499]], [[BB103]] ], [ [[I499]], [[BB116]] ], [ [[I499]], [[BB121]] ]
; CHECK-NEXT:    [[I1393:%.*]] = phi i32 [ [[I1396]], [[BB103]] ], [ [[I1396]], [[BB116]] ], [ [[I1396]], [[BB121]] ]
; CHECK-NEXT:    [[I1889:%.*]] = phi i32 [ [[I1891]], [[BB103]] ], [ [[I1891]], [[BB116]] ], [ [[I1891]], [[BB121]] ]
; CHECK-NEXT:    [[I82:%.*]] = phi i32 [ [[I86]], [[BB103]] ], [ [[I86]], [[BB116]] ], [ [[I86]], [[BB121]] ]
; CHECK-NEXT:    [[I569:%.*]] = phi i32 [ [[I571]], [[BB103]] ], [ [[I571]], [[BB116]] ], [ [[I571]], [[BB121]] ]
; CHECK-NEXT:    [[I3066:%.*]] = phi i32 [ [[I3068]], [[BB103]] ], [ [[I3068]], [[BB116]] ], [ [[I3068]], [[BB121]] ]
; CHECK-NEXT:    [[I3163:%.*]] = phi i32 [ [[I3165]], [[BB103]] ], [ [[I3165]], [[BB116]] ], [ [[I3165]], [[BB121]] ]
; CHECK-NEXT:    [[I4062:%.*]] = phi i64 [ [[I40]], [[BB103]] ], [ [[I40]], [[BB116]] ], [ [[I40]], [[BB121]] ]
; CHECK-NEXT:    [[I10461:%.*]] = phi i32 [ [[I104]], [[BB103]] ], [ [[I104]], [[BB116]] ], [ [[I104]], [[BB121]] ]
; CHECK-NEXT:    [[I10560:%.*]] = phi i64 [ [[I105]], [[BB103]] ], [ [[I105]], [[BB116]] ], [ [[I105]], [[BB121]] ]
; CHECK-NEXT:    [[I10659:%.*]] = phi i64 [ [[I106]], [[BB103]] ], [ [[I106]], [[BB116]] ], [ [[I106]], [[BB121]] ]
; CHECK-NEXT:    [[I10758:%.*]] = phi ptr [ [[I107]], [[BB103]] ], [ [[I107]], [[BB116]] ], [ [[I107]], [[BB121]] ]
; CHECK-NEXT:    [[I10857:%.*]] = phi ptr [ [[I108]], [[BB103]] ], [ [[I108]], [[BB116]] ], [ [[I108]], [[BB121]] ]
; CHECK-NEXT:    [[I11056:%.*]] = phi ptr [ [[I110]], [[BB103]] ], [ [[I110]], [[BB116]] ], [ [[I110]], [[BB121]] ]
; CHECK-NEXT:    [[I11155:%.*]] = phi ptr [ [[I111]], [[BB103]] ], [ [[I111]], [[BB116]] ], [ [[I111]], [[BB121]] ]
; CHECK-NEXT:    [[I11254:%.*]] = phi ptr [ [[I112]], [[BB103]] ], [ [[I112]], [[BB116]] ], [ [[I112]], [[BB121]] ]
; CHECK-NEXT:    [[I11353:%.*]] = phi i32 [ [[I113]], [[BB103]] ], [ 0, [[BB116]] ], [ 0, [[BB121]] ]
; CHECK-NEXT:    [[I11452:%.*]] = phi i32 [ [[I114]], [[BB103]] ], [ [[I114]], [[BB116]] ], [ [[I114]], [[BB121]] ]
; CHECK-NEXT:    [[I11551:%.*]] = phi i32 [ [[I115]], [[BB103]] ], [ [[I115]], [[BB116]] ], [ [[I115]], [[BB121]] ]
; CHECK-NEXT:    [[I1047:%.*]] = phi i32 [ [[I1049]], [[BB103]] ], [ [[I1049]], [[BB116]] ], [ [[I1049]], [[BB121]] ]
; CHECK-NEXT:    [[I140:%.*]] = phi i64 [ -1, [[BB103]] ], [ 0, [[BB116]] ], [ [[I131]], [[BB121]] ]
; CHECK-NEXT:    [[I141:%.*]] = zext nneg i32 [[I10461]] to i64
; CHECK-NEXT:    [[I142:%.*]] = getelementptr inbounds i32, ptr [[I10758]], i64 [[I141]]
; CHECK-NEXT:    [[I143:%.*]] = load i32, ptr [[I142]], align 4, !tbaa [[TBAA41:![0-9]+]]
; CHECK-NEXT:    [[I144:%.*]] = icmp sgt i32 [[I143]], 0
; CHECK-NEXT:    br i1 [[I144]], label [[BB145:%.*]], label [[BB302]]
; CHECK:       bb145:
; CHECK-NEXT:    [[I146:%.*]] = mul nsw i32 [[I11551]], [[I10461]]
; CHECK-NEXT:    [[I147:%.*]] = mul nsw i64 [[I140]], [[I10560]]
; CHECK-NEXT:    [[I148:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I147]]
; CHECK-NEXT:    [[I149:%.*]] = add i64 [[I10659]], -1
; CHECK-NEXT:    [[I150:%.*]] = icmp sgt i64 [[I10659]], 2
; CHECK-NEXT:    [[I151:%.*]] = add nsw i32 [[I11452]], -1
; CHECK-NEXT:    [[I152:%.*]] = sext i32 [[I151]] to i64
; CHECK-NEXT:    [[I153:%.*]] = icmp eq i64 [[I140]], [[I152]]
; CHECK-NEXT:    [[I154:%.*]] = add nsw i64 [[I140]], 1
; CHECK-NEXT:    [[I155:%.*]] = mul nsw i64 [[I154]], [[I10560]]
; CHECK-NEXT:    [[I156:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I155]]
; CHECK-NEXT:    [[I157:%.*]] = trunc i64 [[I10659]] to i32
; CHECK-NEXT:    [[I158:%.*]] = add i32 [[I157]], -1
; CHECK-NEXT:    br label [[BB159:%.*]]
; CHECK:       bb159:
; CHECK-NEXT:    [[I158473:%.*]] = phi i32 [ [[I158]], [[BB145]] ], [ [[I158473]], [[BB197:%.*]] ]
; CHECK-NEXT:    [[I149471:%.*]] = phi i64 [ [[I149]], [[BB145]] ], [ [[I149471]], [[BB197]] ]
; CHECK-NEXT:    [[I28146469:%.*]] = phi ptr [ [[I28146]], [[BB145]] ], [ [[I28146469]], [[BB197]] ]
; CHECK-NEXT:    [[I25142466:%.*]] = phi ptr [ [[I25142]], [[BB145]] ], [ [[I25142466]], [[BB197]] ]
; CHECK-NEXT:    [[I24138463:%.*]] = phi ptr [ [[I24138]], [[BB145]] ], [ [[I24138463]], [[BB197]] ]
; CHECK-NEXT:    [[I23134460:%.*]] = phi ptr [ [[I23134]], [[BB145]] ], [ [[I23134460]], [[BB197]] ]
; CHECK-NEXT:    [[I22130457:%.*]] = phi ptr [ [[I22130]], [[BB145]] ], [ [[I22130457]], [[BB197]] ]
; CHECK-NEXT:    [[I21126454:%.*]] = phi ptr [ [[I21126]], [[BB145]] ], [ [[I21126454]], [[BB197]] ]
; CHECK-NEXT:    [[I6121451:%.*]] = phi i32 [ [[I6121]], [[BB145]] ], [ [[I6121451]], [[BB197]] ]
; CHECK-NEXT:    [[I32119448:%.*]] = phi i64 [ [[I32119]], [[BB145]] ], [ [[I32119448]], [[BB197]] ]
; CHECK-NEXT:    [[I41118445:%.*]] = phi i32 [ [[I41118]], [[BB145]] ], [ [[I41118445]], [[BB197]] ]
; CHECK-NEXT:    [[I75117442:%.*]] = phi double [ [[I75117]], [[BB145]] ], [ [[I75117442]], [[BB197]] ]
; CHECK-NEXT:    [[I27114440:%.*]] = phi ptr [ [[I27114]], [[BB145]] ], [ [[I27114440]], [[BB197]] ]
; CHECK-NEXT:    [[I26110437:%.*]] = phi ptr [ [[I26110]], [[BB145]] ], [ [[I26110437]], [[BB197]] ]
; CHECK-NEXT:    [[I20106434:%.*]] = phi ptr [ [[I20106]], [[BB145]] ], [ [[I20106434]], [[BB197]] ]
; CHECK-NEXT:    [[I19102431:%.*]] = phi ptr [ [[I19102]], [[BB145]] ], [ [[I19102431]], [[BB197]] ]
; CHECK-NEXT:    [[I497428:%.*]] = phi ptr [ [[I497]], [[BB145]] ], [ [[I497428]], [[BB197]] ]
; CHECK-NEXT:    [[I1393425:%.*]] = phi i32 [ [[I1393]], [[BB145]] ], [ [[I1393425]], [[BB197]] ]
; CHECK-NEXT:    [[I1889422:%.*]] = phi i32 [ [[I1889]], [[BB145]] ], [ [[I1889422]], [[BB197]] ]
; CHECK-NEXT:    [[I82419:%.*]] = phi i32 [ [[I82]], [[BB145]] ], [ [[I82419]], [[BB197]] ]
; CHECK-NEXT:    [[I569416:%.*]] = phi i32 [ [[I569]], [[BB145]] ], [ [[I569416]], [[BB197]] ]
; CHECK-NEXT:    [[I3066413:%.*]] = phi i32 [ [[I3066]], [[BB145]] ], [ [[I3066413]], [[BB197]] ]
; CHECK-NEXT:    [[I3163410:%.*]] = phi i32 [ [[I3163]], [[BB145]] ], [ [[I3163410]], [[BB197]] ]
; CHECK-NEXT:    [[I4062407:%.*]] = phi i64 [ [[I4062]], [[BB145]] ], [ [[I4062407]], [[BB197]] ]
; CHECK-NEXT:    [[I10659404:%.*]] = phi i64 [ [[I10659]], [[BB145]] ], [ [[I10659404]], [[BB197]] ]
; CHECK-NEXT:    [[I10857402:%.*]] = phi ptr [ [[I10857]], [[BB145]] ], [ [[I10857402]], [[BB197]] ]
; CHECK-NEXT:    [[I11155400:%.*]] = phi ptr [ [[I11155]], [[BB145]] ], [ [[I11155400]], [[BB197]] ]
; CHECK-NEXT:    [[I11254398:%.*]] = phi ptr [ [[I11254]], [[BB145]] ], [ [[I11254398]], [[BB197]] ]
; CHECK-NEXT:    [[I11353396:%.*]] = phi i32 [ [[I11353]], [[BB145]] ], [ 0, [[BB197]] ]
; CHECK-NEXT:    [[I1047394:%.*]] = phi i32 [ [[I1047]], [[BB145]] ], [ [[I1047394]], [[BB197]] ]
; CHECK-NEXT:    [[I156384:%.*]] = phi ptr [ [[I156]], [[BB145]] ], [ [[I156384]], [[BB197]] ]
; CHECK-NEXT:    [[I148382:%.*]] = phi ptr [ [[I148]], [[BB145]] ], [ [[I148382]], [[BB197]] ]
; CHECK-NEXT:    [[I153380:%.*]] = phi i1 [ [[I153]], [[BB145]] ], [ [[I153380]], [[BB197]] ]
; CHECK-NEXT:    [[I146378:%.*]] = phi i32 [ [[I146]], [[BB145]] ], [ [[I146378]], [[BB197]] ]
; CHECK-NEXT:    [[I142376:%.*]] = phi ptr [ [[I142]], [[BB145]] ], [ [[I142376]], [[BB197]] ]
; CHECK-NEXT:    [[I160:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I298:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I161:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I297:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I162:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I296:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I163:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I295:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I164:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I294:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I165:%.*]] = phi i32 [ 0, [[BB145]] ], [ [[I299:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I166:%.*]] = add nsw i32 [[I165]], [[I146378]]
; CHECK-NEXT:    [[I167:%.*]] = sext i32 [[I166]] to i64
; CHECK-NEXT:    [[I168:%.*]] = getelementptr inbounds i32, ptr [[I11254398]], i64 [[I167]]
; CHECK-NEXT:    [[I169:%.*]] = load i32, ptr [[I168]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I170:%.*]] = getelementptr inbounds double, ptr [[I10857402]], i64 [[I167]]
; CHECK-NEXT:    [[I171:%.*]] = load double, ptr [[I170]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    switch i32 [[I11353396]], label [[CACHESTORE2:%.*]] [
; CHECK-NEXT:      i32 1, label [[CACHESTORE1:%.*]]
; CHECK-NEXT:      i32 0, label [[BB197]]
; CHECK-NEXT:    ]
; CHECK:       CacheStore1:
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP6:%.*]] = load ptr, ptr [[TMP5]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR324:%.*]] = getelementptr inbounds i32, ptr [[TMP6]], i32 1
; CHECK-NEXT:    [[CACHEIDX325:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR324]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP7:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP8:%.*]] = load ptr, ptr [[TMP7]], align 8
; CHECK-NEXT:    [[TMP9:%.*]] = getelementptr inbounds ptr, ptr [[TMP8]], i32 1
; CHECK-NEXT:    [[CACHE_OUT_PTR326:%.*]] = load ptr, ptr [[TMP9]], align 8
; CHECK-NEXT:    [[CACHECELL327:%.*]] = getelementptr inbounds [[CACHE_CELL1:%.*]], ptr [[CACHE_OUT_PTR326]], i32 [[CACHEIDX325]]
; CHECK-NEXT:    [[I142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 0
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 2
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 3
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 4
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156_CACHEIDX]], align 8
; CHECK-NEXT:    [[I171_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 5
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 6
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 7
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 8
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 9
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 10
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 11
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 12
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 14
; CHECK-NEXT:    store i32 1, ptr [[I11353_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146_CACHEIDX]], align 8
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb197:
; CHECK-NEXT:    [[I198:%.*]] = sext i32 [[I169]] to i64
; CHECK-NEXT:    [[I199:%.*]] = getelementptr i32, ptr [[I148382]], i64 [[I198]]
; CHECK-NEXT:    [[I200:%.*]] = load i32, ptr [[I199]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I201:%.*]] = sext i32 [[I200]] to i64
; CHECK-NEXT:    [[I202:%.*]] = icmp eq i64 [[I149471]], [[I201]]
; CHECK-NEXT:    [[I203:%.*]] = mul nsw i64 [[I10659404]], [[I198]]
; CHECK-NEXT:    [[I204:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT:%.*]], ptr [[I11155400]], i64 [[I203]]
; CHECK-NEXT:    [[I205:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I204]], i64 [[I201]]
; CHECK-NEXT:    [[I206:%.*]] = select i1 [[I202]], i64 -48, i64 0
; CHECK-NEXT:    [[I207:%.*]] = getelementptr i8, ptr [[I205]], i64 [[I206]]
; CHECK-NEXT:    [[I257:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 48
; CHECK-NEXT:    [[I258:%.*]] = load double, ptr [[I257]], align 8, !tbaa [[TBAA42:![0-9]+]]
; CHECK-NEXT:    [[I259:%.*]] = fsub double [[I258]], [[I75117442]]
; CHECK-NEXT:    [[I260:%.*]] = load double, ptr [[I207]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I261:%.*]] = fsub double [[I258]], [[I260]]
; CHECK-NEXT:    [[I262:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 56
; CHECK-NEXT:    [[I263:%.*]] = load double, ptr [[I262]], align 8, !tbaa [[TBAA44:![0-9]+]]
; CHECK-NEXT:    [[I264:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 8
; CHECK-NEXT:    [[I265:%.*]] = load double, ptr [[I264]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I266:%.*]] = fsub double [[I263]], [[I265]]
; CHECK-NEXT:    [[I267:%.*]] = fneg double [[I259]]
; CHECK-NEXT:    [[I268:%.*]] = fdiv double [[I267]], [[I261]]
; CHECK-NEXT:    [[I269:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I266]], double [[I263]])
; CHECK-NEXT:    [[I270:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 64
; CHECK-NEXT:    [[I271:%.*]] = load double, ptr [[I270]], align 8, !tbaa [[TBAA45:![0-9]+]]
; CHECK-NEXT:    [[I272:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 16
; CHECK-NEXT:    [[I273:%.*]] = load double, ptr [[I272]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I274:%.*]] = fsub double [[I271]], [[I273]]
; CHECK-NEXT:    [[I275:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I274]], double [[I271]])
; CHECK-NEXT:    [[I276:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 72
; CHECK-NEXT:    [[I277:%.*]] = load double, ptr [[I276]], align 8, !tbaa [[TBAA46:![0-9]+]]
; CHECK-NEXT:    [[I278:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 24
; CHECK-NEXT:    [[I279:%.*]] = load double, ptr [[I278]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I280:%.*]] = fsub double [[I277]], [[I279]]
; CHECK-NEXT:    [[I281:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I280]], double [[I277]])
; CHECK-NEXT:    [[I282:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 80
; CHECK-NEXT:    [[I283:%.*]] = load double, ptr [[I282]], align 8, !tbaa [[TBAA47:![0-9]+]]
; CHECK-NEXT:    [[I284:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 32
; CHECK-NEXT:    [[I285:%.*]] = load double, ptr [[I284]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I286:%.*]] = fsub double [[I283]], [[I285]]
; CHECK-NEXT:    [[I287:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I286]], double [[I283]])
; CHECK-NEXT:    [[I288:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 88
; CHECK-NEXT:    [[I289:%.*]] = load double, ptr [[I288]], align 8, !tbaa [[TBAA48:![0-9]+]]
; CHECK-NEXT:    [[I290:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 40
; CHECK-NEXT:    [[I291:%.*]] = load double, ptr [[I290]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I292:%.*]] = fsub double [[I289]], [[I291]]
; CHECK-NEXT:    [[I293:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I292]], double [[I289]])
; CHECK-NEXT:    [[I294]] = tail call double @llvm.fmuladd.f64(double [[I269]], double [[I171]], double [[I164]])
; CHECK-NEXT:    [[I295]] = tail call double @llvm.fmuladd.f64(double [[I275]], double [[I171]], double [[I163]])
; CHECK-NEXT:    [[I296]] = tail call double @llvm.fmuladd.f64(double [[I281]], double [[I171]], double [[I162]])
; CHECK-NEXT:    [[I297]] = tail call double @llvm.fmuladd.f64(double [[I287]], double [[I171]], double [[I161]])
; CHECK-NEXT:    [[I298]] = tail call double @llvm.fmuladd.f64(double [[I293]], double [[I171]], double [[I160]])
; CHECK-NEXT:    [[I299]] = add nuw nsw i32 [[I165]], 1
; CHECK-NEXT:    [[I300:%.*]] = load i32, ptr [[I142376]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I301:%.*]] = icmp slt i32 [[I299]], [[I300]]
; CHECK-NEXT:    br i1 [[I301]], label [[BB159]], label [[BB302]]
; CHECK:       CacheStore2:
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP11:%.*]] = load ptr, ptr [[TMP10]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR913:%.*]] = getelementptr inbounds i32, ptr [[TMP11]], i32 2
; CHECK-NEXT:    [[CACHEIDX914:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR913]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP12:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP13:%.*]] = load ptr, ptr [[TMP12]], align 8
; CHECK-NEXT:    [[TMP14:%.*]] = getelementptr inbounds ptr, ptr [[TMP13]], i32 2
; CHECK-NEXT:    [[CACHE_OUT_PTR915:%.*]] = load ptr, ptr [[TMP14]], align 8
; CHECK-NEXT:    [[CACHECELL916:%.*]] = getelementptr inbounds [[CACHE_CELL2:%.*]], ptr [[CACHE_OUT_PTR915]], i32 [[CACHEIDX914]]
; CHECK-NEXT:    [[I171_CACHEIDX917:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 0
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX917]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX918:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX918]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX919:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX919]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX920:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 3
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX920]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX921:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 4
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX921]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX922:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 5
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX922]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX923:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 6
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX923]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX924:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 7
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX924]], align 8
; CHECK-NEXT:    [[I142376_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142376_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146378_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 9
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146378_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153380_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 10
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153380_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148382_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 11
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148382_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156384_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 12
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156384_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047394_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047394_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353396_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I11353396]], ptr [[I11353396_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254398_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254398_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155400_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155400_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857402_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857402_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659404_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659404_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062407_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062407_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163410_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163410_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066413_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066413_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569416_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569416_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82419_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82419_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889422_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889422_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393425_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393425_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497428_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497428_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102431_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102431_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106434_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106434_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110437_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110437_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114440_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114440_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117442_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117442_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118445_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118445_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119448_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119448_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121451_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121451_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126454_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126454_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130457_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130457_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134460_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134460_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138463_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138463_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142466_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142466_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146469_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146469_CACHEIDX]], align 8
; CHECK-NEXT:    [[I149471_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 41
; CHECK-NEXT:    store i64 [[I149471]], ptr [[I149471_CACHEIDX]], align 8
; CHECK-NEXT:    [[I158473_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 42
; CHECK-NEXT:    store i32 [[I158473]], ptr [[I158473_CACHEIDX]], align 4
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb302:
; CHECK-NEXT:    [[I28146468]] = phi ptr [ [[I28146]], [[BB139]] ], [ [[I28146469]], [[BB197]] ]
; CHECK-NEXT:    [[I25142465]] = phi ptr [ [[I25142]], [[BB139]] ], [ [[I25142466]], [[BB197]] ]
; CHECK-NEXT:    [[I24138462]] = phi ptr [ [[I24138]], [[BB139]] ], [ [[I24138463]], [[BB197]] ]
; CHECK-NEXT:    [[I23134459]] = phi ptr [ [[I23134]], [[BB139]] ], [ [[I23134460]], [[BB197]] ]
; CHECK-NEXT:    [[I22130456]] = phi ptr [ [[I22130]], [[BB139]] ], [ [[I22130457]], [[BB197]] ]
; CHECK-NEXT:    [[I21126453]] = phi ptr [ [[I21126]], [[BB139]] ], [ [[I21126454]], [[BB197]] ]
; CHECK-NEXT:    [[I6121450]] = phi i32 [ [[I6121]], [[BB139]] ], [ [[I6121451]], [[BB197]] ]
; CHECK-NEXT:    [[I32119447]] = phi i64 [ [[I32119]], [[BB139]] ], [ [[I32119448]], [[BB197]] ]
; CHECK-NEXT:    [[I41118444:%.*]] = phi i32 [ [[I41118]], [[BB139]] ], [ [[I41118445]], [[BB197]] ]
; CHECK-NEXT:    [[I27114439]] = phi ptr [ [[I27114]], [[BB139]] ], [ [[I27114440]], [[BB197]] ]
; CHECK-NEXT:    [[I26110436]] = phi ptr [ [[I26110]], [[BB139]] ], [ [[I26110437]], [[BB197]] ]
; CHECK-NEXT:    [[I20106433]] = phi ptr [ [[I20106]], [[BB139]] ], [ [[I20106434]], [[BB197]] ]
; CHECK-NEXT:    [[I19102430]] = phi ptr [ [[I19102]], [[BB139]] ], [ [[I19102431]], [[BB197]] ]
; CHECK-NEXT:    [[I497427]] = phi ptr [ [[I497]], [[BB139]] ], [ [[I497428]], [[BB197]] ]
; CHECK-NEXT:    [[I1393424]] = phi i32 [ [[I1393]], [[BB139]] ], [ [[I1393425]], [[BB197]] ]
; CHECK-NEXT:    [[I1889421]] = phi i32 [ [[I1889]], [[BB139]] ], [ [[I1889422]], [[BB197]] ]
; CHECK-NEXT:    [[I82418]] = phi i32 [ [[I82]], [[BB139]] ], [ [[I82419]], [[BB197]] ]
; CHECK-NEXT:    [[I569415]] = phi i32 [ [[I569]], [[BB139]] ], [ [[I569416]], [[BB197]] ]
; CHECK-NEXT:    [[I3066412]] = phi i32 [ [[I3066]], [[BB139]] ], [ [[I3066413]], [[BB197]] ]
; CHECK-NEXT:    [[I3163409]] = phi i32 [ [[I3163]], [[BB139]] ], [ [[I3163410]], [[BB197]] ]
; CHECK-NEXT:    [[I4062406:%.*]] = phi i64 [ [[I4062]], [[BB139]] ], [ [[I4062407]], [[BB197]] ]
; CHECK-NEXT:    [[I1047393]] = phi i32 [ [[I1047]], [[BB139]] ], [ [[I1047394]], [[BB197]] ]
; CHECK-NEXT:    [[I303:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I294]], [[BB197]] ]
; CHECK-NEXT:    [[I304:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I295]], [[BB197]] ]
; CHECK-NEXT:    [[I305:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I296]], [[BB197]] ]
; CHECK-NEXT:    [[I306:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I297]], [[BB197]] ]
; CHECK-NEXT:    [[I307:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I298]], [[BB197]] ]
; CHECK-NEXT:    [[I308:%.*]] = fcmp ogt double [[I303]], -1.000000e+00
; CHECK-NEXT:    [[I309:%.*]] = select i1 [[I308]], double [[I303]], double -1.000000e+00
; CHECK-NEXT:    [[I310:%.*]] = fcmp ogt double [[I304]], [[I309]]
; CHECK-NEXT:    [[I311:%.*]] = select i1 [[I310]], double [[I304]], double [[I309]]
; CHECK-NEXT:    [[I312:%.*]] = fcmp ogt double [[I305]], [[I311]]
; CHECK-NEXT:    [[I313:%.*]] = select i1 [[I312]], double [[I305]], double [[I311]]
; CHECK-NEXT:    [[I314:%.*]] = fcmp ogt double [[I306]], [[I313]]
; CHECK-NEXT:    [[I315:%.*]] = select i1 [[I314]], double [[I306]], double [[I313]]
; CHECK-NEXT:    [[I316:%.*]] = select i1 [[I310]], i64 2, i64 1
; CHECK-NEXT:    [[I317:%.*]] = fcmp ogt double [[I307]], [[I315]]
; CHECK-NEXT:    [[I318:%.*]] = select i1 [[I312]], i64 3, i64 [[I316]]
; CHECK-NEXT:    [[I319:%.*]] = select i1 [[I314]], i64 4, i64 [[I318]]
; CHECK-NEXT:    [[I320:%.*]] = select i1 [[I317]], i64 5, i64 [[I319]]
; CHECK-NEXT:    [[I321:%.*]] = getelementptr inbounds i64, ptr [[ARG3]], i64 [[I4062406]]
; CHECK-NEXT:    store i64 [[I320]], ptr [[I321]], align 8, !tbaa [[TBAA49:![0-9]+]]
; CHECK-NEXT:    [[I322:%.*]] = add nsw i32 [[I1889421]], [[I41118444]]
; CHECK-NEXT:    [[I323]] = sext i32 [[I322]] to i64
; CHECK-NEXT:    [[I324:%.*]] = icmp ugt i64 [[I323]], [[I32119447]]
; CHECK-NEXT:    br i1 [[I324]], label [[BB325]], label [[BB39]]
; CHECK:       bb325:
; CHECK-NEXT:    [[I28147]] = phi ptr [ [[I28145]], [[BB29]] ], [ [[I28145]], [[BB35]] ], [ [[I28146468]], [[BB302]] ]
; CHECK-NEXT:    [[I25143]] = phi ptr [ [[I25141]], [[BB29]] ], [ [[I25141]], [[BB35]] ], [ [[I25142465]], [[BB302]] ]
; CHECK-NEXT:    [[I24139]] = phi ptr [ [[I24137]], [[BB29]] ], [ [[I24137]], [[BB35]] ], [ [[I24138462]], [[BB302]] ]
; CHECK-NEXT:    [[I23135]] = phi ptr [ [[I23133]], [[BB29]] ], [ [[I23133]], [[BB35]] ], [ [[I23134459]], [[BB302]] ]
; CHECK-NEXT:    [[I22131]] = phi ptr [ [[I22129]], [[BB29]] ], [ [[I22129]], [[BB35]] ], [ [[I22130456]], [[BB302]] ]
; CHECK-NEXT:    [[I21127]] = phi ptr [ [[I21125]], [[BB29]] ], [ [[I21125]], [[BB35]] ], [ [[I21126453]], [[BB302]] ]
; CHECK-NEXT:    [[I6122]] = phi i32 [ [[I6124]], [[BB29]] ], [ [[I6124]], [[BB35]] ], [ [[I6121450]], [[BB302]] ]
; CHECK-NEXT:    [[I27115]] = phi ptr [ [[I27113]], [[BB29]] ], [ [[I27113]], [[BB35]] ], [ [[I27114439]], [[BB302]] ]
; CHECK-NEXT:    [[I26111]] = phi ptr [ [[I26109]], [[BB29]] ], [ [[I26109]], [[BB35]] ], [ [[I26110436]], [[BB302]] ]
; CHECK-NEXT:    [[I20107]] = phi ptr [ [[I20105]], [[BB29]] ], [ [[I20105]], [[BB35]] ], [ [[I20106433]], [[BB302]] ]
; CHECK-NEXT:    [[I19103]] = phi ptr [ [[I19101]], [[BB29]] ], [ [[I19101]], [[BB35]] ], [ [[I19102430]], [[BB302]] ]
; CHECK-NEXT:    [[I498]] = phi ptr [ [[I4100]], [[BB29]] ], [ [[I4100]], [[BB35]] ], [ [[I497427]], [[BB302]] ]
; CHECK-NEXT:    [[I1395]] = phi i32 [ [[I1394]], [[BB29]] ], [ [[I1394]], [[BB35]] ], [ [[I1393424]], [[BB302]] ]
; CHECK-NEXT:    [[I1890]] = phi i32 [ [[I1892]], [[BB29]] ], [ [[I1892]], [[BB35]] ], [ [[I1889421]], [[BB302]] ]
; CHECK-NEXT:    [[I84]] = phi i32 [ [[I88]], [[BB29]] ], [ [[I88]], [[BB35]] ], [ [[I82418]], [[BB302]] ]
; CHECK-NEXT:    [[I570]] = phi i32 [ [[I572]], [[BB29]] ], [ [[I572]], [[BB35]] ], [ [[I569415]], [[BB302]] ]
; CHECK-NEXT:    [[I3067:%.*]] = phi i32 [ [[I30]], [[BB29]] ], [ [[I30]], [[BB35]] ], [ [[I3066412]], [[BB302]] ]
; CHECK-NEXT:    [[I3164:%.*]] = phi i32 [ [[I31]], [[BB29]] ], [ [[I31]], [[BB35]] ], [ [[I3163409]], [[BB302]] ]
; CHECK-NEXT:    [[I1048]] = phi i32 [ [[I1050]], [[BB29]] ], [ [[I1050]], [[BB35]] ], [ [[I1047393]], [[BB302]] ]
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I326]] = add nsw i32 [[I3164]], [[I1395]]
; CHECK-NEXT:    [[I327:%.*]] = add nsw i32 [[I3067]], [[I1395]]
; CHECK-NEXT:    [[I328]] = tail call i32 @llvm.smin.i32(i32 [[I327]], i32 [[I6122]])
; CHECK-NEXT:    [[I329:%.*]] = icmp slt i32 [[I326]], [[I570]]
; CHECK-NEXT:    br i1 [[I329]], label [[BB29]], label [[BB330]]
; CHECK:       bb330:
; CHECK-NEXT:    ret void
;
;
; CHECK-LABEL: define weak_odr protected void @__omp_offloading_run_event_based_simulation_contd_0(
; CHECK-SAME: ptr noalias noundef [[ARG:%.*]], ptr noundef nonnull align 8 dereferenceable(64) [[ARG1:%.*]], ptr noundef nonnull align 8 dereferenceable(112) [[ARG2:%.*]], ptr noundef [[ARG3:%.*]]) local_unnamed_addr #[[ATTR3]] {
; CHECK-NEXT:  ContDispatchBB:
; CHECK-NEXT:    [[TMP0:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
; CHECK-NEXT:    [[TMP1:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
; CHECK-NEXT:    [[TMP2:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
; CHECK-NEXT:    [[TMP3:%.*]] = mul i32 [[TMP1]], [[TMP2]]
; CHECK-NEXT:    [[GTID:%.*]] = add i32 [[TMP0]], [[TMP3]]
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP5:%.*]] = load ptr, ptr [[TMP4]], align 8
; CHECK-NEXT:    [[CONTCOUNT_IN_PTR:%.*]] = getelementptr inbounds i32, ptr [[TMP5]], i32 3
; CHECK-NEXT:    [[CONTCOUNT_IN:%.*]] = load i32, ptr [[CONTCOUNT_IN_PTR]], align 4
; CHECK-NEXT:    [[MASKTHREAD:%.*]] = icmp ult i32 [[GTID]], [[CONTCOUNT_IN]]
; CHECK-NEXT:    br i1 [[MASKTHREAD]], label [[CACHEREMAT0:%.*]], label [[THREADEXIT:%.*]]
; CHECK:       bb35:
; CHECK-NEXT:    [[I36:%.*]] = add nsw i32 [[I326_BB29492:%.*]], [[I84_BB29488:%.*]]
; CHECK-NEXT:    [[I37:%.*]] = sext i32 [[I36]] to i64
; CHECK-NEXT:    [[I38:%.*]] = icmp ugt i64 [[I37]], [[I32:%.*]]
; CHECK-NEXT:    br i1 [[I38]], label [[BB325:%.*]], label [[BB39:%.*]]
; CHECK:       bb39:
; CHECK-NEXT:    [[I28148:%.*]] = phi ptr [ [[I28147_BB29474:%.*]], [[BB35:%.*]] ], [ [[I28146468:%.*]], [[BB302:%.*]] ]
; CHECK-NEXT:    [[I25144:%.*]] = phi ptr [ [[I25143_BB29475:%.*]], [[BB35]] ], [ [[I25142465:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I24140:%.*]] = phi ptr [ [[I24139_BB29476:%.*]], [[BB35]] ], [ [[I24138462:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I23136:%.*]] = phi ptr [ [[I23135_BB29477:%.*]], [[BB35]] ], [ [[I23134459:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I22132:%.*]] = phi ptr [ [[I22131_BB29478:%.*]], [[BB35]] ], [ [[I22130456:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I21128:%.*]] = phi ptr [ [[I21127_BB29479:%.*]], [[BB35]] ], [ [[I21126453:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I6123:%.*]] = phi i32 [ [[I6122_BB29480:%.*]], [[BB35]] ], [ [[I6121450:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I32120:%.*]] = phi i64 [ [[I32]], [[BB35]] ], [ [[I32119447:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I27116:%.*]] = phi ptr [ [[I27115_BB29481:%.*]], [[BB35]] ], [ [[I27114439:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I26112:%.*]] = phi ptr [ [[I26111_BB29482:%.*]], [[BB35]] ], [ [[I26110436:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I20108:%.*]] = phi ptr [ [[I20107_BB29483:%.*]], [[BB35]] ], [ [[I20106433:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I19104:%.*]] = phi ptr [ [[I19103_BB29484:%.*]], [[BB35]] ], [ [[I19102430:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I499:%.*]] = phi ptr [ [[I498_BB29485:%.*]], [[BB35]] ], [ [[I497427:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1396:%.*]] = phi i32 [ [[I1395_BB29486:%.*]], [[BB35]] ], [ [[I1393424:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1891:%.*]] = phi i32 [ [[I1890_BB29487:%.*]], [[BB35]] ], [ [[I1889421:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I86:%.*]] = phi i32 [ [[I84_BB29488]], [[BB35]] ], [ [[I82418:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I571:%.*]] = phi i32 [ [[I570_BB29489:%.*]], [[BB35]] ], [ [[I569415:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3068:%.*]] = phi i32 [ [[I328_BB29491:%.*]], [[BB35]] ], [ [[I3066412:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3165:%.*]] = phi i32 [ [[I326_BB29492]], [[BB35]] ], [ [[I3163409:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1049:%.*]] = phi i32 [ [[I1048_BB29490:%.*]], [[BB35]] ], [ [[I1047393:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I40:%.*]] = phi i64 [ [[I37]], [[BB35]] ], [ [[I323:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I41:%.*]] = trunc i64 [[I40]] to i32
; CHECK-NEXT:    [[I42:%.*]] = shl nuw nsw i32 [[I41]], 1
; CHECK-NEXT:    [[I43:%.*]] = sext i32 [[I42]] to i64
; CHECK-NEXT:    [[I44:%.*]] = and i64 [[I43]], 9223372036854775806
; CHECK-NEXT:    [[I45:%.*]] = icmp eq i64 [[I44]], 0
; CHECK-NEXT:    br i1 [[I45]], label [[BB69:%.*]], label [[BB46:%.*]]
; CHECK:       bb46:
; CHECK-NEXT:    [[I47:%.*]] = phi i64 [ 0, [[BB39]] ], [ [[I58:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I48:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I57:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I49:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I60:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I50:%.*]] = phi i64 [ 2806196910506780709, [[BB39]] ], [ [[I61:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I51:%.*]] = phi i64 [ [[I44]], [[BB39]] ], [ [[I62:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I52:%.*]] = and i64 [[I51]], 1
; CHECK-NEXT:    [[I53:%.*]] = icmp eq i64 [[I52]], 0
; CHECK-NEXT:    [[I54:%.*]] = mul i64 [[I50]], [[I47]]
; CHECK-NEXT:    [[I55:%.*]] = add i64 [[I54]], [[I49]]
; CHECK-NEXT:    [[I56:%.*]] = select i1 [[I53]], i64 1, i64 [[I50]]
; CHECK-NEXT:    [[I57]] = mul i64 [[I56]], [[I48]]
; CHECK-NEXT:    [[I58]] = select i1 [[I53]], i64 [[I47]], i64 [[I55]]
; CHECK-NEXT:    [[I59:%.*]] = add i64 [[I50]], 1
; CHECK-NEXT:    [[I60]] = mul i64 [[I59]], [[I49]]
; CHECK-NEXT:    [[I61]] = mul i64 [[I50]], [[I50]]
; CHECK-NEXT:    [[I62]] = lshr i64 [[I51]], 1
; CHECK-NEXT:    [[I63:%.*]] = icmp ult i64 [[I51]], 2
; CHECK-NEXT:    br i1 [[I63]], label [[BB64:%.*]], label [[BB46]]
; CHECK:       bb64:
; CHECK-NEXT:    [[I67:%.*]] = mul i64 [[I57]], 1070
; CHECK-NEXT:    [[I68:%.*]] = add i64 [[I67]], [[I58]]
; CHECK-NEXT:    br label [[BB69]]
; CHECK:       bb69:
; CHECK-NEXT:    [[I70:%.*]] = phi i64 [ [[I68]], [[BB64]] ], [ 1070, [[BB39]] ]
; CHECK-NEXT:    [[I71:%.*]] = mul i64 [[I70]], 2806196910506780709
; CHECK-NEXT:    [[I72:%.*]] = add i64 [[I71]], 1
; CHECK-NEXT:    [[I73:%.*]] = and i64 [[I72]], 9223372036854775807
; CHECK-NEXT:    [[I74:%.*]] = uitofp i64 [[I73]] to double
; CHECK-NEXT:    [[I75:%.*]] = fmul double [[I74]], 0x3C00000000000000
; CHECK-NEXT:    [[I76:%.*]] = mul i64 [[I72]], 2806196910506780709
; CHECK-NEXT:    [[I77:%.*]] = add i64 [[I76]], 1
; CHECK-NEXT:    [[I78:%.*]] = and i64 [[I77]], 9223372036854775807
; CHECK-NEXT:    [[I79:%.*]] = uitofp i64 [[I78]] to double
; CHECK-NEXT:    [[I80:%.*]] = fmul double [[I79]], 0x3C00000000000000
; CHECK-NEXT:    [[I81:%.*]] = fcmp uge double [[I80]], 5.200000e-02
; CHECK-NEXT:    br i1 [[I81]], label [[BB82:%.*]], label [[BB103:%.*]]
; CHECK:       bb82:
; CHECK-NEXT:    [[I83:%.*]] = fcmp uge double [[I80]], 3.270000e-01
; CHECK-NEXT:    br i1 [[I83]], label [[BB84:%.*]], label [[BB103]]
; CHECK:       bb84:
; CHECK-NEXT:    [[I85:%.*]] = fcmp uge double [[I80]], 4.610000e-01
; CHECK-NEXT:    br i1 [[I85]], label [[BB86:%.*]], label [[BB103]]
; CHECK:       bb86:
; CHECK-NEXT:    [[I87:%.*]] = fcmp uge double [[I80]], 0x3FE3AE147AE147AF
; CHECK-NEXT:    br i1 [[I87]], label [[BB88:%.*]], label [[BB103]]
; CHECK:       bb88:
; CHECK-NEXT:    [[I89:%.*]] = fcmp uge double [[I80]], 6.790000e-01
; CHECK-NEXT:    br i1 [[I89]], label [[BB90:%.*]], label [[BB103]]
; CHECK:       bb90:
; CHECK-NEXT:    [[I91:%.*]] = fcmp uge double [[I80]], 0x3FE7D70A3D70A3D8
; CHECK-NEXT:    br i1 [[I91]], label [[BB92:%.*]], label [[BB103]]
; CHECK:       bb92:
; CHECK-NEXT:    [[I93:%.*]] = fcmp uge double [[I80]], 8.000000e-01
; CHECK-NEXT:    br i1 [[I93]], label [[BB94:%.*]], label [[BB103]]
; CHECK:       bb94:
; CHECK-NEXT:    [[I95:%.*]] = fcmp uge double [[I80]], 8.080000e-01
; CHECK-NEXT:    br i1 [[I95]], label [[BB96:%.*]], label [[BB103]]
; CHECK:       bb96:
; CHECK-NEXT:    [[I97:%.*]] = fcmp uge double [[I80]], 0x3FEA5604189374BD
; CHECK-NEXT:    br i1 [[I97]], label [[BB98:%.*]], label [[BB103]]
; CHECK:       bb98:
; CHECK-NEXT:    [[I99:%.*]] = fcmp uge double [[I80]], 0x3FEB22D0E560418A
; CHECK-NEXT:    br i1 [[I99]], label [[BB100:%.*]], label [[BB103]]
; CHECK:       bb100:
; CHECK-NEXT:    [[I101:%.*]] = fcmp uge double [[I80]], 0x3FEB8D4FDF3B645B
; CHECK-NEXT:    br i1 [[I101]], label [[BB103_FROM_BB103_FROM_BB103_FROM_BB102:%.*]], label [[BB103]]
; CHECK:       bb103.from.bb103.from.bb103.from.bb102:
; CHECK-NEXT:    br label [[BB103]]
; CHECK:       bb103:
; CHECK-NEXT:    [[I104:%.*]] = phi i32 [ 0, [[BB103_FROM_BB103_FROM_BB103_FROM_BB102]] ], [ 1, [[BB69]] ], [ 2, [[BB82]] ], [ 3, [[BB84]] ], [ 4, [[BB86]] ], [ 5, [[BB88]] ], [ 6, [[BB90]] ], [ 7, [[BB92]] ], [ 8, [[BB94]] ], [ 9, [[BB96]] ], [ 10, [[BB98]] ], [ 11, [[BB100]] ]
; CHECK-NEXT:    [[I105:%.*]] = load i64, ptr [[I19104]], align 8, !tbaa [[TBAA27]]
; CHECK-NEXT:    [[I106:%.*]] = load i64, ptr [[I20108]], align 8, !tbaa [[TBAA28]]
; CHECK-NEXT:    [[I107:%.*]] = load ptr, ptr [[ARG2]], align 8, !tbaa [[TBAA29]]
; CHECK-NEXT:    [[I108:%.*]] = load ptr, ptr [[I21128]], align 8, !tbaa [[TBAA31]]
; CHECK-NEXT:    [[I109:%.*]] = load ptr, ptr [[I22132]], align 8, !tbaa [[TBAA32]]
; CHECK-NEXT:    [[I110:%.*]] = load ptr, ptr [[I23136]], align 8, !tbaa [[TBAA33]]
; CHECK-NEXT:    [[I111:%.*]] = load ptr, ptr [[I24140]], align 8, !tbaa [[TBAA34]]
; CHECK-NEXT:    [[I112:%.*]] = load ptr, ptr [[I25144]], align 8, !tbaa [[TBAA35]]
; CHECK-NEXT:    [[I113:%.*]] = load i32, ptr [[I26112]], align 8, !tbaa [[TBAA36]]
; CHECK-NEXT:    [[I114:%.*]] = load i32, ptr [[I27116]], align 4, !tbaa [[TBAA37]]
; CHECK-NEXT:    [[I115:%.*]] = load i32, ptr [[I28148]], align 4, !tbaa [[TBAA38]]
; CHECK-NEXT:    switch i32 [[I113]], label [[BB139:%.*]] [
; CHECK-NEXT:      i32 0, label [[BB116:%.*]]
; CHECK-NEXT:      i32 2, label [[CACHESTORE0:%.*]]
; CHECK-NEXT:    ]
; CHECK:       bb116:
; CHECK-NEXT:    [[I117:%.*]] = mul nsw i64 [[I106]], [[I105]]
; CHECK-NEXT:    [[I118:%.*]] = icmp sgt i64 [[I117]], 2
; CHECK-NEXT:    br i1 [[I118]], label [[BB119:%.*]], label [[BB139]]
; CHECK:       bb119:
; CHECK-NEXT:    [[I120:%.*]] = add nsw i64 [[I117]], -1
; CHECK-NEXT:    br label [[BB121:%.*]]
; CHECK:       bb121:
; CHECK-NEXT:    [[I122:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I132:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I123:%.*]] = phi i64 [ 0, [[BB119]] ], [ [[I131:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I124:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I130:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I125:%.*]] = lshr i64 [[I122]], 1
; CHECK-NEXT:    [[I126:%.*]] = add nuw nsw i64 [[I125]], [[I123]]
; CHECK-NEXT:    [[I127:%.*]] = getelementptr inbounds double, ptr [[I109]], i64 [[I126]]
; CHECK-NEXT:    [[I128:%.*]] = load double, ptr [[I127]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    [[I129:%.*]] = fcmp ogt double [[I128]], [[I75]]
; CHECK-NEXT:    [[I130]] = select i1 [[I129]], i64 [[I126]], i64 [[I124]]
; CHECK-NEXT:    [[I131]] = select i1 [[I129]], i64 [[I123]], i64 [[I126]]
; CHECK-NEXT:    [[I132]] = sub nsw i64 [[I130]], [[I131]]
; CHECK-NEXT:    [[I133:%.*]] = icmp sgt i64 [[I132]], 1
; CHECK-NEXT:    br i1 [[I133]], label [[BB121]], label [[BB139]]
; CHECK:       CacheStore0:
; CHECK-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP7:%.*]] = load ptr, ptr [[TMP6]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR:%.*]] = getelementptr inbounds i32, ptr [[TMP7]], i32 0
; CHECK-NEXT:    [[CACHEIDX:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP8:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP9:%.*]] = load ptr, ptr [[TMP8]], align 8
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds ptr, ptr [[TMP9]], i32 0
; CHECK-NEXT:    [[CACHE_OUT_PTR:%.*]] = load ptr, ptr [[TMP10]], align 8
; CHECK-NEXT:    [[CACHECELL:%.*]] = getelementptr inbounds [[CACHE_CELL0:%.*]], ptr [[CACHE_OUT_PTR]], i32 [[CACHEIDX]]
; CHECK-NEXT:    [[I10_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 0
; CHECK-NEXT:    store i32 [[I1049]], ptr [[I10_CACHEIDX]], align 4
; CHECK-NEXT:    [[I70_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 1
; CHECK-NEXT:    store i64 [[I70]], ptr [[I70_CACHEIDX]], align 8
; CHECK-NEXT:    [[I115_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I115]], ptr [[I115_CACHEIDX]], align 4
; CHECK-NEXT:    [[I114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 3
; CHECK-NEXT:    store i32 [[I114]], ptr [[I114_CACHEIDX]], align 4
; CHECK-NEXT:    [[I113_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 4
; CHECK-NEXT:    store i32 2, ptr [[I113_CACHEIDX]], align 4
; CHECK-NEXT:    [[I112_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 5
; CHECK-NEXT:    store ptr [[I112]], ptr [[I112_CACHEIDX]], align 8
; CHECK-NEXT:    [[I111_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 6
; CHECK-NEXT:    store ptr [[I111]], ptr [[I111_CACHEIDX]], align 8
; CHECK-NEXT:    [[I110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 7
; CHECK-NEXT:    store ptr [[I110]], ptr [[I110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I108_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I108]], ptr [[I108_CACHEIDX]], align 8
; CHECK-NEXT:    [[I107_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 9
; CHECK-NEXT:    store ptr [[I107]], ptr [[I107_CACHEIDX]], align 8
; CHECK-NEXT:    [[I106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 10
; CHECK-NEXT:    store i64 [[I106]], ptr [[I106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I105_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 11
; CHECK-NEXT:    store i64 [[I105]], ptr [[I105_CACHEIDX]], align 8
; CHECK-NEXT:    [[I104_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 12
; CHECK-NEXT:    store i32 [[I104]], ptr [[I104_CACHEIDX]], align 4
; CHECK-NEXT:    [[I40_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 13
; CHECK-NEXT:    store i64 [[I40]], ptr [[I40_CACHEIDX]], align 8
; CHECK-NEXT:    [[I31_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I3165]], ptr [[I31_CACHEIDX]], align 4
; CHECK-NEXT:    [[I30_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 15
; CHECK-NEXT:    store i32 [[I3068]], ptr [[I30_CACHEIDX]], align 4
; CHECK-NEXT:    [[I5_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 16
; CHECK-NEXT:    store i32 [[I571]], ptr [[I5_CACHEIDX]], align 4
; CHECK-NEXT:    [[I_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 17
; CHECK-NEXT:    store i32 [[I86]], ptr [[I_CACHEIDX]], align 4
; CHECK-NEXT:    [[I18_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 18
; CHECK-NEXT:    store i32 [[I1891]], ptr [[I18_CACHEIDX]], align 4
; CHECK-NEXT:    br label [[THREADEXIT]]
; CHECK:       CacheRemat0:
; CHECK-NEXT:    [[TMP11:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP12:%.*]] = load ptr, ptr [[TMP11]], align 8
; CHECK-NEXT:    [[TMP13:%.*]] = getelementptr inbounds ptr, ptr [[TMP12]], i32 3
; CHECK-NEXT:    [[CACHE_IN_PTR:%.*]] = load ptr, ptr [[TMP13]], align 8
; CHECK-NEXT:    [[CACHECELL27:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHE_IN_PTR]], i32 [[GTID]]
; CHECK-NEXT:    [[I10_CACHEIDX28:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 0
; CHECK-NEXT:    [[I10_CACHE:%.*]] = load i32, ptr [[I10_CACHEIDX28]], align 4
; CHECK-NEXT:    [[I70_CACHEIDX29:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 1
; CHECK-NEXT:    [[I70_CACHE:%.*]] = load i64, ptr [[I70_CACHEIDX29]], align 8
; CHECK-NEXT:    [[I115_CACHEIDX30:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 2
; CHECK-NEXT:    [[I115_CACHE:%.*]] = load i32, ptr [[I115_CACHEIDX30]], align 4
; CHECK-NEXT:    [[I114_CACHEIDX31:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 3
; CHECK-NEXT:    [[I114_CACHE:%.*]] = load i32, ptr [[I114_CACHEIDX31]], align 4
; CHECK-NEXT:    [[I113_CACHEIDX32:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 4
; CHECK-NEXT:    [[I113_CACHE:%.*]] = load i32, ptr [[I113_CACHEIDX32]], align 4
; CHECK-NEXT:    [[I112_CACHEIDX33:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 5
; CHECK-NEXT:    [[I112_CACHE:%.*]] = load ptr, ptr [[I112_CACHEIDX33]], align 8
; CHECK-NEXT:    [[I111_CACHEIDX34:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 6
; CHECK-NEXT:    [[I111_CACHE:%.*]] = load ptr, ptr [[I111_CACHEIDX34]], align 8
; CHECK-NEXT:    [[I110_CACHEIDX35:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 7
; CHECK-NEXT:    [[I110_CACHE:%.*]] = load ptr, ptr [[I110_CACHEIDX35]], align 8
; CHECK-NEXT:    [[I108_CACHEIDX36:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 8
; CHECK-NEXT:    [[I108_CACHE:%.*]] = load ptr, ptr [[I108_CACHEIDX36]], align 8
; CHECK-NEXT:    [[I107_CACHEIDX37:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 9
; CHECK-NEXT:    [[I107_CACHE:%.*]] = load ptr, ptr [[I107_CACHEIDX37]], align 8
; CHECK-NEXT:    [[I106_CACHEIDX38:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 10
; CHECK-NEXT:    [[I106_CACHE:%.*]] = load i64, ptr [[I106_CACHEIDX38]], align 8
; CHECK-NEXT:    [[I105_CACHEIDX39:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 11
; CHECK-NEXT:    [[I105_CACHE:%.*]] = load i64, ptr [[I105_CACHEIDX39]], align 8
; CHECK-NEXT:    [[I104_CACHEIDX40:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 12
; CHECK-NEXT:    [[I104_CACHE:%.*]] = load i32, ptr [[I104_CACHEIDX40]], align 4
; CHECK-NEXT:    [[I40_CACHEIDX41:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 13
; CHECK-NEXT:    [[I40_CACHE:%.*]] = load i64, ptr [[I40_CACHEIDX41]], align 8
; CHECK-NEXT:    [[I31_CACHEIDX42:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 14
; CHECK-NEXT:    [[I31_CACHE:%.*]] = load i32, ptr [[I31_CACHEIDX42]], align 4
; CHECK-NEXT:    [[I30_CACHEIDX43:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 15
; CHECK-NEXT:    [[I30_CACHE:%.*]] = load i32, ptr [[I30_CACHEIDX43]], align 4
; CHECK-NEXT:    [[I5_CACHEIDX44:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 16
; CHECK-NEXT:    [[I5_CACHE:%.*]] = load i32, ptr [[I5_CACHEIDX44]], align 4
; CHECK-NEXT:    [[I_CACHEIDX45:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 17
; CHECK-NEXT:    [[I_CACHE:%.*]] = load i32, ptr [[I_CACHEIDX45]], align 4
; CHECK-NEXT:    [[I18_CACHEIDX46:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL27]], i32 0, i32 18
; CHECK-NEXT:    [[I18_CACHE:%.*]] = load i32, ptr [[I18_CACHEIDX46]], align 4
; CHECK-NEXT:    [[I13_RECOMPUTE:%.*]] = shl nsw i32 [[I10_CACHE]], 7
; CHECK-NEXT:    [[I4_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 24
; CHECK-NEXT:    [[I19_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 8
; CHECK-NEXT:    [[I20_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 16
; CHECK-NEXT:    [[I26_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 40
; CHECK-NEXT:    [[I27_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG1]], i64 44
; CHECK-NEXT:    [[I71_RECOMPUTE:%.*]] = mul i64 [[I70_CACHE]], 2806196910506780709
; CHECK-NEXT:    [[I72_RECOMPUTE:%.*]] = add i64 [[I71_RECOMPUTE]], 1
; CHECK-NEXT:    [[I73_RECOMPUTE:%.*]] = and i64 [[I72_RECOMPUTE]], 9223372036854775807
; CHECK-NEXT:    [[I74_RECOMPUTE:%.*]] = uitofp i64 [[I73_RECOMPUTE]] to double
; CHECK-NEXT:    [[I75_RECOMPUTE:%.*]] = fmul double [[I74_RECOMPUTE]], 0x3C00000000000000
; CHECK-NEXT:    [[I41_RECOMPUTE:%.*]] = trunc i64 [[I40_CACHE]] to i32
; CHECK-NEXT:    [[I32_RECOMPUTE:%.*]] = zext i32 [[I30_CACHE]] to i64
; CHECK-NEXT:    [[I6_RECOMPUTE:%.*]] = add nsw i32 [[I5_CACHE]], -1
; CHECK-NEXT:    [[I21_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 8
; CHECK-NEXT:    [[I22_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 24
; CHECK-NEXT:    [[I23_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 32
; CHECK-NEXT:    [[I24_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 40
; CHECK-NEXT:    [[I25_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 16
; CHECK-NEXT:    [[I28_RECOMPUTE:%.*]] = getelementptr inbounds i8, ptr [[ARG2]], i64 76
; CHECK-NEXT:    [[I135:%.*]] = sitofp i32 [[I114_CACHE]] to double
; CHECK-NEXT:    [[I136:%.*]] = fdiv double 1.000000e+00, [[I135]]
; CHECK-NEXT:    [[I137:%.*]] = fdiv double [[I75_RECOMPUTE]], [[I136]]
; CHECK-NEXT:    [[I138:%.*]] = fptosi double [[I137]] to i64
; CHECK-NEXT:    br label [[BB139]]
; CHECK:       bb139:
; CHECK-NEXT:    [[I28146:%.*]] = phi ptr [ [[I28_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I28148]], [[BB103]] ], [ [[I28148]], [[BB116]] ], [ [[I28148]], [[BB121]] ]
; CHECK-NEXT:    [[I25142:%.*]] = phi ptr [ [[I25_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I25144]], [[BB103]] ], [ [[I25144]], [[BB116]] ], [ [[I25144]], [[BB121]] ]
; CHECK-NEXT:    [[I24138:%.*]] = phi ptr [ [[I24_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I24140]], [[BB103]] ], [ [[I24140]], [[BB116]] ], [ [[I24140]], [[BB121]] ]
; CHECK-NEXT:    [[I23134:%.*]] = phi ptr [ [[I23_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I23136]], [[BB103]] ], [ [[I23136]], [[BB116]] ], [ [[I23136]], [[BB121]] ]
; CHECK-NEXT:    [[I22130:%.*]] = phi ptr [ [[I22_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I22132]], [[BB103]] ], [ [[I22132]], [[BB116]] ], [ [[I22132]], [[BB121]] ]
; CHECK-NEXT:    [[I21126:%.*]] = phi ptr [ [[I21_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I21128]], [[BB103]] ], [ [[I21128]], [[BB116]] ], [ [[I21128]], [[BB121]] ]
; CHECK-NEXT:    [[I6121:%.*]] = phi i32 [ [[I6_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I6123]], [[BB103]] ], [ [[I6123]], [[BB116]] ], [ [[I6123]], [[BB121]] ]
; CHECK-NEXT:    [[I32119:%.*]] = phi i64 [ [[I32_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I32120]], [[BB103]] ], [ [[I32120]], [[BB116]] ], [ [[I32120]], [[BB121]] ]
; CHECK-NEXT:    [[I41118:%.*]] = phi i32 [ [[I41_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I41]], [[BB103]] ], [ [[I41]], [[BB116]] ], [ [[I41]], [[BB121]] ]
; CHECK-NEXT:    [[I75117:%.*]] = phi double [ [[I75_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I75]], [[BB103]] ], [ [[I75]], [[BB116]] ], [ [[I75]], [[BB121]] ]
; CHECK-NEXT:    [[I27114:%.*]] = phi ptr [ [[I27_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I27116]], [[BB103]] ], [ [[I27116]], [[BB116]] ], [ [[I27116]], [[BB121]] ]
; CHECK-NEXT:    [[I26110:%.*]] = phi ptr [ [[I26_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I26112]], [[BB103]] ], [ [[I26112]], [[BB116]] ], [ [[I26112]], [[BB121]] ]
; CHECK-NEXT:    [[I20106:%.*]] = phi ptr [ [[I20_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I20108]], [[BB103]] ], [ [[I20108]], [[BB116]] ], [ [[I20108]], [[BB121]] ]
; CHECK-NEXT:    [[I19102:%.*]] = phi ptr [ [[I19_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I19104]], [[BB103]] ], [ [[I19104]], [[BB116]] ], [ [[I19104]], [[BB121]] ]
; CHECK-NEXT:    [[I497:%.*]] = phi ptr [ [[I4_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I499]], [[BB103]] ], [ [[I499]], [[BB116]] ], [ [[I499]], [[BB121]] ]
; CHECK-NEXT:    [[I1393:%.*]] = phi i32 [ [[I13_RECOMPUTE]], [[CACHEREMAT0]] ], [ [[I1396]], [[BB103]] ], [ [[I1396]], [[BB116]] ], [ [[I1396]], [[BB121]] ]
; CHECK-NEXT:    [[I1889:%.*]] = phi i32 [ [[I18_CACHE]], [[CACHEREMAT0]] ], [ [[I1891]], [[BB103]] ], [ [[I1891]], [[BB116]] ], [ [[I1891]], [[BB121]] ]
; CHECK-NEXT:    [[I82:%.*]] = phi i32 [ [[I_CACHE]], [[CACHEREMAT0]] ], [ [[I86]], [[BB103]] ], [ [[I86]], [[BB116]] ], [ [[I86]], [[BB121]] ]
; CHECK-NEXT:    [[I569:%.*]] = phi i32 [ [[I5_CACHE]], [[CACHEREMAT0]] ], [ [[I571]], [[BB103]] ], [ [[I571]], [[BB116]] ], [ [[I571]], [[BB121]] ]
; CHECK-NEXT:    [[I3066:%.*]] = phi i32 [ [[I30_CACHE]], [[CACHEREMAT0]] ], [ [[I3068]], [[BB103]] ], [ [[I3068]], [[BB116]] ], [ [[I3068]], [[BB121]] ]
; CHECK-NEXT:    [[I3163:%.*]] = phi i32 [ [[I31_CACHE]], [[CACHEREMAT0]] ], [ [[I3165]], [[BB103]] ], [ [[I3165]], [[BB116]] ], [ [[I3165]], [[BB121]] ]
; CHECK-NEXT:    [[I4062:%.*]] = phi i64 [ [[I40_CACHE]], [[CACHEREMAT0]] ], [ [[I40]], [[BB103]] ], [ [[I40]], [[BB116]] ], [ [[I40]], [[BB121]] ]
; CHECK-NEXT:    [[I10461:%.*]] = phi i32 [ [[I104_CACHE]], [[CACHEREMAT0]] ], [ [[I104]], [[BB103]] ], [ [[I104]], [[BB116]] ], [ [[I104]], [[BB121]] ]
; CHECK-NEXT:    [[I10560:%.*]] = phi i64 [ [[I105_CACHE]], [[CACHEREMAT0]] ], [ [[I105]], [[BB103]] ], [ [[I105]], [[BB116]] ], [ [[I105]], [[BB121]] ]
; CHECK-NEXT:    [[I10659:%.*]] = phi i64 [ [[I106_CACHE]], [[CACHEREMAT0]] ], [ [[I106]], [[BB103]] ], [ [[I106]], [[BB116]] ], [ [[I106]], [[BB121]] ]
; CHECK-NEXT:    [[I10758:%.*]] = phi ptr [ [[I107_CACHE]], [[CACHEREMAT0]] ], [ [[I107]], [[BB103]] ], [ [[I107]], [[BB116]] ], [ [[I107]], [[BB121]] ]
; CHECK-NEXT:    [[I10857:%.*]] = phi ptr [ [[I108_CACHE]], [[CACHEREMAT0]] ], [ [[I108]], [[BB103]] ], [ [[I108]], [[BB116]] ], [ [[I108]], [[BB121]] ]
; CHECK-NEXT:    [[I11056:%.*]] = phi ptr [ [[I110_CACHE]], [[CACHEREMAT0]] ], [ [[I110]], [[BB103]] ], [ [[I110]], [[BB116]] ], [ [[I110]], [[BB121]] ]
; CHECK-NEXT:    [[I11155:%.*]] = phi ptr [ [[I111_CACHE]], [[CACHEREMAT0]] ], [ [[I111]], [[BB103]] ], [ [[I111]], [[BB116]] ], [ [[I111]], [[BB121]] ]
; CHECK-NEXT:    [[I11254:%.*]] = phi ptr [ [[I112_CACHE]], [[CACHEREMAT0]] ], [ [[I112]], [[BB103]] ], [ [[I112]], [[BB116]] ], [ [[I112]], [[BB121]] ]
; CHECK-NEXT:    [[I11353:%.*]] = phi i32 [ [[I113_CACHE]], [[CACHEREMAT0]] ], [ [[I113]], [[BB103]] ], [ 0, [[BB116]] ], [ 0, [[BB121]] ]
; CHECK-NEXT:    [[I11452:%.*]] = phi i32 [ [[I114_CACHE]], [[CACHEREMAT0]] ], [ [[I114]], [[BB103]] ], [ [[I114]], [[BB116]] ], [ [[I114]], [[BB121]] ]
; CHECK-NEXT:    [[I11551:%.*]] = phi i32 [ [[I115_CACHE]], [[CACHEREMAT0]] ], [ [[I115]], [[BB103]] ], [ [[I115]], [[BB116]] ], [ [[I115]], [[BB121]] ]
; CHECK-NEXT:    [[I1047:%.*]] = phi i32 [ [[I10_CACHE]], [[CACHEREMAT0]] ], [ [[I1049]], [[BB103]] ], [ [[I1049]], [[BB116]] ], [ [[I1049]], [[BB121]] ]
; CHECK-NEXT:    [[I140:%.*]] = phi i64 [ [[I138]], [[CACHEREMAT0]] ], [ -1, [[BB103]] ], [ 0, [[BB116]] ], [ [[I131]], [[BB121]] ]
; CHECK-NEXT:    [[I141:%.*]] = zext nneg i32 [[I10461]] to i64
; CHECK-NEXT:    [[I142:%.*]] = getelementptr inbounds i32, ptr [[I10758]], i64 [[I141]]
; CHECK-NEXT:    [[I143:%.*]] = load i32, ptr [[I142]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I144:%.*]] = icmp sgt i32 [[I143]], 0
; CHECK-NEXT:    br i1 [[I144]], label [[BB145:%.*]], label [[BB302]]
; CHECK:       bb145:
; CHECK-NEXT:    [[I146:%.*]] = mul nsw i32 [[I11551]], [[I10461]]
; CHECK-NEXT:    [[I147:%.*]] = mul nsw i64 [[I140]], [[I10560]]
; CHECK-NEXT:    [[I148:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I147]]
; CHECK-NEXT:    [[I149:%.*]] = add i64 [[I10659]], -1
; CHECK-NEXT:    [[I150:%.*]] = icmp sgt i64 [[I10659]], 2
; CHECK-NEXT:    [[I151:%.*]] = add nsw i32 [[I11452]], -1
; CHECK-NEXT:    [[I152:%.*]] = sext i32 [[I151]] to i64
; CHECK-NEXT:    [[I153:%.*]] = icmp eq i64 [[I140]], [[I152]]
; CHECK-NEXT:    [[I154:%.*]] = add nsw i64 [[I140]], 1
; CHECK-NEXT:    [[I155:%.*]] = mul nsw i64 [[I154]], [[I10560]]
; CHECK-NEXT:    [[I156:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I155]]
; CHECK-NEXT:    [[I157:%.*]] = trunc i64 [[I10659]] to i32
; CHECK-NEXT:    [[I158:%.*]] = add i32 [[I157]], -1
; CHECK-NEXT:    br label [[BB159:%.*]]
; CHECK:       bb159:
; CHECK-NEXT:    [[I158473:%.*]] = phi i32 [ [[I158]], [[BB145]] ], [ [[I158473]], [[BB197:%.*]] ]
; CHECK-NEXT:    [[I149471:%.*]] = phi i64 [ [[I149]], [[BB145]] ], [ [[I149471]], [[BB197]] ]
; CHECK-NEXT:    [[I28146469:%.*]] = phi ptr [ [[I28146]], [[BB145]] ], [ [[I28146469]], [[BB197]] ]
; CHECK-NEXT:    [[I25142466:%.*]] = phi ptr [ [[I25142]], [[BB145]] ], [ [[I25142466]], [[BB197]] ]
; CHECK-NEXT:    [[I24138463:%.*]] = phi ptr [ [[I24138]], [[BB145]] ], [ [[I24138463]], [[BB197]] ]
; CHECK-NEXT:    [[I23134460:%.*]] = phi ptr [ [[I23134]], [[BB145]] ], [ [[I23134460]], [[BB197]] ]
; CHECK-NEXT:    [[I22130457:%.*]] = phi ptr [ [[I22130]], [[BB145]] ], [ [[I22130457]], [[BB197]] ]
; CHECK-NEXT:    [[I21126454:%.*]] = phi ptr [ [[I21126]], [[BB145]] ], [ [[I21126454]], [[BB197]] ]
; CHECK-NEXT:    [[I6121451:%.*]] = phi i32 [ [[I6121]], [[BB145]] ], [ [[I6121451]], [[BB197]] ]
; CHECK-NEXT:    [[I32119448:%.*]] = phi i64 [ [[I32119]], [[BB145]] ], [ [[I32119448]], [[BB197]] ]
; CHECK-NEXT:    [[I41118445:%.*]] = phi i32 [ [[I41118]], [[BB145]] ], [ [[I41118445]], [[BB197]] ]
; CHECK-NEXT:    [[I75117442:%.*]] = phi double [ [[I75117]], [[BB145]] ], [ [[I75117442]], [[BB197]] ]
; CHECK-NEXT:    [[I27114440:%.*]] = phi ptr [ [[I27114]], [[BB145]] ], [ [[I27114440]], [[BB197]] ]
; CHECK-NEXT:    [[I26110437:%.*]] = phi ptr [ [[I26110]], [[BB145]] ], [ [[I26110437]], [[BB197]] ]
; CHECK-NEXT:    [[I20106434:%.*]] = phi ptr [ [[I20106]], [[BB145]] ], [ [[I20106434]], [[BB197]] ]
; CHECK-NEXT:    [[I19102431:%.*]] = phi ptr [ [[I19102]], [[BB145]] ], [ [[I19102431]], [[BB197]] ]
; CHECK-NEXT:    [[I497428:%.*]] = phi ptr [ [[I497]], [[BB145]] ], [ [[I497428]], [[BB197]] ]
; CHECK-NEXT:    [[I1393425:%.*]] = phi i32 [ [[I1393]], [[BB145]] ], [ [[I1393425]], [[BB197]] ]
; CHECK-NEXT:    [[I1889422:%.*]] = phi i32 [ [[I1889]], [[BB145]] ], [ [[I1889422]], [[BB197]] ]
; CHECK-NEXT:    [[I82419:%.*]] = phi i32 [ [[I82]], [[BB145]] ], [ [[I82419]], [[BB197]] ]
; CHECK-NEXT:    [[I569416:%.*]] = phi i32 [ [[I569]], [[BB145]] ], [ [[I569416]], [[BB197]] ]
; CHECK-NEXT:    [[I3066413:%.*]] = phi i32 [ [[I3066]], [[BB145]] ], [ [[I3066413]], [[BB197]] ]
; CHECK-NEXT:    [[I3163410:%.*]] = phi i32 [ [[I3163]], [[BB145]] ], [ [[I3163410]], [[BB197]] ]
; CHECK-NEXT:    [[I4062407:%.*]] = phi i64 [ [[I4062]], [[BB145]] ], [ [[I4062407]], [[BB197]] ]
; CHECK-NEXT:    [[I10659404:%.*]] = phi i64 [ [[I10659]], [[BB145]] ], [ [[I10659404]], [[BB197]] ]
; CHECK-NEXT:    [[I10857402:%.*]] = phi ptr [ [[I10857]], [[BB145]] ], [ [[I10857402]], [[BB197]] ]
; CHECK-NEXT:    [[I11155400:%.*]] = phi ptr [ [[I11155]], [[BB145]] ], [ [[I11155400]], [[BB197]] ]
; CHECK-NEXT:    [[I11254398:%.*]] = phi ptr [ [[I11254]], [[BB145]] ], [ [[I11254398]], [[BB197]] ]
; CHECK-NEXT:    [[I11353396:%.*]] = phi i32 [ [[I11353]], [[BB145]] ], [ 0, [[BB197]] ]
; CHECK-NEXT:    [[I1047394:%.*]] = phi i32 [ [[I1047]], [[BB145]] ], [ [[I1047394]], [[BB197]] ]
; CHECK-NEXT:    [[I156384:%.*]] = phi ptr [ [[I156]], [[BB145]] ], [ [[I156384]], [[BB197]] ]
; CHECK-NEXT:    [[I148382:%.*]] = phi ptr [ [[I148]], [[BB145]] ], [ [[I148382]], [[BB197]] ]
; CHECK-NEXT:    [[I153380:%.*]] = phi i1 [ [[I153]], [[BB145]] ], [ [[I153380]], [[BB197]] ]
; CHECK-NEXT:    [[I146378:%.*]] = phi i32 [ [[I146]], [[BB145]] ], [ [[I146378]], [[BB197]] ]
; CHECK-NEXT:    [[I142376:%.*]] = phi ptr [ [[I142]], [[BB145]] ], [ [[I142376]], [[BB197]] ]
; CHECK-NEXT:    [[I160:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I298:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I161:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I297:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I162:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I296:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I163:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I295:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I164:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I294:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I165:%.*]] = phi i32 [ 0, [[BB145]] ], [ [[I299:%.*]], [[BB197]] ]
; CHECK-NEXT:    [[I166:%.*]] = add nsw i32 [[I165]], [[I146378]]
; CHECK-NEXT:    [[I167:%.*]] = sext i32 [[I166]] to i64
; CHECK-NEXT:    [[I168:%.*]] = getelementptr inbounds i32, ptr [[I11254398]], i64 [[I167]]
; CHECK-NEXT:    [[I169:%.*]] = load i32, ptr [[I168]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I170:%.*]] = getelementptr inbounds double, ptr [[I10857402]], i64 [[I167]]
; CHECK-NEXT:    [[I171:%.*]] = load double, ptr [[I170]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    switch i32 [[I11353396]], label [[CACHESTORE2:%.*]] [
; CHECK-NEXT:      i32 1, label [[CACHESTORE1:%.*]]
; CHECK-NEXT:      i32 0, label [[BB197]]
; CHECK-NEXT:    ]
; CHECK:       CacheStore1:
; CHECK-NEXT:    [[TMP14:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP15:%.*]] = load ptr, ptr [[TMP14]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR324:%.*]] = getelementptr inbounds i32, ptr [[TMP15]], i32 1
; CHECK-NEXT:    [[CACHEIDX325:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR324]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP17:%.*]] = load ptr, ptr [[TMP16]], align 8
; CHECK-NEXT:    [[TMP18:%.*]] = getelementptr inbounds ptr, ptr [[TMP17]], i32 1
; CHECK-NEXT:    [[CACHE_OUT_PTR326:%.*]] = load ptr, ptr [[TMP18]], align 8
; CHECK-NEXT:    [[CACHECELL327:%.*]] = getelementptr inbounds [[CACHE_CELL1:%.*]], ptr [[CACHE_OUT_PTR326]], i32 [[CACHEIDX325]]
; CHECK-NEXT:    [[I142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 0
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 2
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 3
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 4
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156_CACHEIDX]], align 8
; CHECK-NEXT:    [[I171_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 5
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 6
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 7
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 8
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 9
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 10
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 11
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 12
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 14
; CHECK-NEXT:    store i32 1, ptr [[I11353_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146_CACHEIDX]], align 8
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb197:
; CHECK-NEXT:    [[I198:%.*]] = sext i32 [[I169]] to i64
; CHECK-NEXT:    [[I199:%.*]] = getelementptr i32, ptr [[I148382]], i64 [[I198]]
; CHECK-NEXT:    [[I200:%.*]] = load i32, ptr [[I199]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I201:%.*]] = sext i32 [[I200]] to i64
; CHECK-NEXT:    [[I202:%.*]] = icmp eq i64 [[I149471]], [[I201]]
; CHECK-NEXT:    [[I203:%.*]] = mul nsw i64 [[I10659404]], [[I198]]
; CHECK-NEXT:    [[I204:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT:%.*]], ptr [[I11155400]], i64 [[I203]]
; CHECK-NEXT:    [[I205:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I204]], i64 [[I201]]
; CHECK-NEXT:    [[I206:%.*]] = select i1 [[I202]], i64 -48, i64 0
; CHECK-NEXT:    [[I207:%.*]] = getelementptr i8, ptr [[I205]], i64 [[I206]]
; CHECK-NEXT:    [[I257:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 48
; CHECK-NEXT:    [[I258:%.*]] = load double, ptr [[I257]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I259:%.*]] = fsub double [[I258]], [[I75117442]]
; CHECK-NEXT:    [[I260:%.*]] = load double, ptr [[I207]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I261:%.*]] = fsub double [[I258]], [[I260]]
; CHECK-NEXT:    [[I262:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 56
; CHECK-NEXT:    [[I263:%.*]] = load double, ptr [[I262]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I264:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 8
; CHECK-NEXT:    [[I265:%.*]] = load double, ptr [[I264]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I266:%.*]] = fsub double [[I263]], [[I265]]
; CHECK-NEXT:    [[I267:%.*]] = fneg double [[I259]]
; CHECK-NEXT:    [[I268:%.*]] = fdiv double [[I267]], [[I261]]
; CHECK-NEXT:    [[I269:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I266]], double [[I263]])
; CHECK-NEXT:    [[I270:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 64
; CHECK-NEXT:    [[I271:%.*]] = load double, ptr [[I270]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I272:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 16
; CHECK-NEXT:    [[I273:%.*]] = load double, ptr [[I272]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I274:%.*]] = fsub double [[I271]], [[I273]]
; CHECK-NEXT:    [[I275:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I274]], double [[I271]])
; CHECK-NEXT:    [[I276:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 72
; CHECK-NEXT:    [[I277:%.*]] = load double, ptr [[I276]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I278:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 24
; CHECK-NEXT:    [[I279:%.*]] = load double, ptr [[I278]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I280:%.*]] = fsub double [[I277]], [[I279]]
; CHECK-NEXT:    [[I281:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I280]], double [[I277]])
; CHECK-NEXT:    [[I282:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 80
; CHECK-NEXT:    [[I283:%.*]] = load double, ptr [[I282]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I284:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 32
; CHECK-NEXT:    [[I285:%.*]] = load double, ptr [[I284]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I286:%.*]] = fsub double [[I283]], [[I285]]
; CHECK-NEXT:    [[I287:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I286]], double [[I283]])
; CHECK-NEXT:    [[I288:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 88
; CHECK-NEXT:    [[I289:%.*]] = load double, ptr [[I288]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I290:%.*]] = getelementptr inbounds i8, ptr [[I207]], i64 40
; CHECK-NEXT:    [[I291:%.*]] = load double, ptr [[I290]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I292:%.*]] = fsub double [[I289]], [[I291]]
; CHECK-NEXT:    [[I293:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I292]], double [[I289]])
; CHECK-NEXT:    [[I294]] = tail call double @llvm.fmuladd.f64(double [[I269]], double [[I171]], double [[I164]])
; CHECK-NEXT:    [[I295]] = tail call double @llvm.fmuladd.f64(double [[I275]], double [[I171]], double [[I163]])
; CHECK-NEXT:    [[I296]] = tail call double @llvm.fmuladd.f64(double [[I281]], double [[I171]], double [[I162]])
; CHECK-NEXT:    [[I297]] = tail call double @llvm.fmuladd.f64(double [[I287]], double [[I171]], double [[I161]])
; CHECK-NEXT:    [[I298]] = tail call double @llvm.fmuladd.f64(double [[I293]], double [[I171]], double [[I160]])
; CHECK-NEXT:    [[I299]] = add nuw nsw i32 [[I165]], 1
; CHECK-NEXT:    [[I300:%.*]] = load i32, ptr [[I142376]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I301:%.*]] = icmp slt i32 [[I299]], [[I300]]
; CHECK-NEXT:    br i1 [[I301]], label [[BB159]], label [[BB302]]
; CHECK:       CacheStore2:
; CHECK-NEXT:    [[TMP19:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP20:%.*]] = load ptr, ptr [[TMP19]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR913:%.*]] = getelementptr inbounds i32, ptr [[TMP20]], i32 2
; CHECK-NEXT:    [[CACHEIDX914:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR913]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP21:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP22:%.*]] = load ptr, ptr [[TMP21]], align 8
; CHECK-NEXT:    [[TMP23:%.*]] = getelementptr inbounds ptr, ptr [[TMP22]], i32 2
; CHECK-NEXT:    [[CACHE_OUT_PTR915:%.*]] = load ptr, ptr [[TMP23]], align 8
; CHECK-NEXT:    [[CACHECELL916:%.*]] = getelementptr inbounds [[CACHE_CELL2:%.*]], ptr [[CACHE_OUT_PTR915]], i32 [[CACHEIDX914]]
; CHECK-NEXT:    [[I171_CACHEIDX917:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 0
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX917]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX918:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX918]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX919:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX919]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX920:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 3
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX920]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX921:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 4
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX921]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX922:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 5
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX922]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX923:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 6
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX923]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX924:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 7
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX924]], align 8
; CHECK-NEXT:    [[I142376_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142376_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146378_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 9
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146378_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153380_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 10
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153380_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148382_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 11
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148382_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156384_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 12
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156384_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047394_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047394_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353396_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I11353396]], ptr [[I11353396_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254398_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254398_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155400_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155400_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857402_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857402_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659404_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659404_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062407_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062407_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163410_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163410_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066413_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066413_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569416_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569416_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82419_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82419_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889422_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889422_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393425_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393425_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497428_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497428_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102431_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102431_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106434_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106434_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110437_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110437_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114440_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114440_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117442_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117442_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118445_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118445_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119448_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119448_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121451_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121451_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126454_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126454_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130457_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130457_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134460_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134460_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138463_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138463_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142466_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142466_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146469_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146469_CACHEIDX]], align 8
; CHECK-NEXT:    [[I149471_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 41
; CHECK-NEXT:    store i64 [[I149471]], ptr [[I149471_CACHEIDX]], align 8
; CHECK-NEXT:    [[I158473_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 42
; CHECK-NEXT:    store i32 [[I158473]], ptr [[I158473_CACHEIDX]], align 4
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb302:
; CHECK-NEXT:    [[I28146468]] = phi ptr [ [[I28146]], [[BB139]] ], [ [[I28146469]], [[BB197]] ]
; CHECK-NEXT:    [[I25142465]] = phi ptr [ [[I25142]], [[BB139]] ], [ [[I25142466]], [[BB197]] ]
; CHECK-NEXT:    [[I24138462]] = phi ptr [ [[I24138]], [[BB139]] ], [ [[I24138463]], [[BB197]] ]
; CHECK-NEXT:    [[I23134459]] = phi ptr [ [[I23134]], [[BB139]] ], [ [[I23134460]], [[BB197]] ]
; CHECK-NEXT:    [[I22130456]] = phi ptr [ [[I22130]], [[BB139]] ], [ [[I22130457]], [[BB197]] ]
; CHECK-NEXT:    [[I21126453]] = phi ptr [ [[I21126]], [[BB139]] ], [ [[I21126454]], [[BB197]] ]
; CHECK-NEXT:    [[I6121450]] = phi i32 [ [[I6121]], [[BB139]] ], [ [[I6121451]], [[BB197]] ]
; CHECK-NEXT:    [[I32119447]] = phi i64 [ [[I32119]], [[BB139]] ], [ [[I32119448]], [[BB197]] ]
; CHECK-NEXT:    [[I41118444:%.*]] = phi i32 [ [[I41118]], [[BB139]] ], [ [[I41118445]], [[BB197]] ]
; CHECK-NEXT:    [[I27114439]] = phi ptr [ [[I27114]], [[BB139]] ], [ [[I27114440]], [[BB197]] ]
; CHECK-NEXT:    [[I26110436]] = phi ptr [ [[I26110]], [[BB139]] ], [ [[I26110437]], [[BB197]] ]
; CHECK-NEXT:    [[I20106433]] = phi ptr [ [[I20106]], [[BB139]] ], [ [[I20106434]], [[BB197]] ]
; CHECK-NEXT:    [[I19102430]] = phi ptr [ [[I19102]], [[BB139]] ], [ [[I19102431]], [[BB197]] ]
; CHECK-NEXT:    [[I497427]] = phi ptr [ [[I497]], [[BB139]] ], [ [[I497428]], [[BB197]] ]
; CHECK-NEXT:    [[I1393424]] = phi i32 [ [[I1393]], [[BB139]] ], [ [[I1393425]], [[BB197]] ]
; CHECK-NEXT:    [[I1889421]] = phi i32 [ [[I1889]], [[BB139]] ], [ [[I1889422]], [[BB197]] ]
; CHECK-NEXT:    [[I82418]] = phi i32 [ [[I82]], [[BB139]] ], [ [[I82419]], [[BB197]] ]
; CHECK-NEXT:    [[I569415]] = phi i32 [ [[I569]], [[BB139]] ], [ [[I569416]], [[BB197]] ]
; CHECK-NEXT:    [[I3066412]] = phi i32 [ [[I3066]], [[BB139]] ], [ [[I3066413]], [[BB197]] ]
; CHECK-NEXT:    [[I3163409]] = phi i32 [ [[I3163]], [[BB139]] ], [ [[I3163410]], [[BB197]] ]
; CHECK-NEXT:    [[I4062406:%.*]] = phi i64 [ [[I4062]], [[BB139]] ], [ [[I4062407]], [[BB197]] ]
; CHECK-NEXT:    [[I1047393]] = phi i32 [ [[I1047]], [[BB139]] ], [ [[I1047394]], [[BB197]] ]
; CHECK-NEXT:    [[I303:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I294]], [[BB197]] ]
; CHECK-NEXT:    [[I304:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I295]], [[BB197]] ]
; CHECK-NEXT:    [[I305:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I296]], [[BB197]] ]
; CHECK-NEXT:    [[I306:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I297]], [[BB197]] ]
; CHECK-NEXT:    [[I307:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I298]], [[BB197]] ]
; CHECK-NEXT:    [[I308:%.*]] = fcmp ogt double [[I303]], -1.000000e+00
; CHECK-NEXT:    [[I309:%.*]] = select i1 [[I308]], double [[I303]], double -1.000000e+00
; CHECK-NEXT:    [[I310:%.*]] = fcmp ogt double [[I304]], [[I309]]
; CHECK-NEXT:    [[I311:%.*]] = select i1 [[I310]], double [[I304]], double [[I309]]
; CHECK-NEXT:    [[I312:%.*]] = fcmp ogt double [[I305]], [[I311]]
; CHECK-NEXT:    [[I313:%.*]] = select i1 [[I312]], double [[I305]], double [[I311]]
; CHECK-NEXT:    [[I314:%.*]] = fcmp ogt double [[I306]], [[I313]]
; CHECK-NEXT:    [[I315:%.*]] = select i1 [[I314]], double [[I306]], double [[I313]]
; CHECK-NEXT:    [[I316:%.*]] = select i1 [[I310]], i64 2, i64 1
; CHECK-NEXT:    [[I317:%.*]] = fcmp ogt double [[I307]], [[I315]]
; CHECK-NEXT:    [[I318:%.*]] = select i1 [[I312]], i64 3, i64 [[I316]]
; CHECK-NEXT:    [[I319:%.*]] = select i1 [[I314]], i64 4, i64 [[I318]]
; CHECK-NEXT:    [[I320:%.*]] = select i1 [[I317]], i64 5, i64 [[I319]]
; CHECK-NEXT:    [[I321:%.*]] = getelementptr inbounds i64, ptr [[ARG3]], i64 [[I4062406]]
; CHECK-NEXT:    store i64 [[I320]], ptr [[I321]], align 8, !tbaa [[TBAA49]]
; CHECK-NEXT:    [[I322:%.*]] = add nsw i32 [[I1889421]], [[I41118444]]
; CHECK-NEXT:    [[I323]] = sext i32 [[I322]] to i64
; CHECK-NEXT:    [[I324:%.*]] = icmp ugt i64 [[I323]], [[I32119447]]
; CHECK-NEXT:    br i1 [[I324]], label [[BB325]], label [[BB39]]
; CHECK:       bb325:
; CHECK-NEXT:    [[I28147:%.*]] = phi ptr [ [[I28147_BB29474]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325:%.*]] ], [ [[I28147_BB29474]], [[BB35]] ], [ [[I28146468]], [[BB302]] ]
; CHECK-NEXT:    [[I25143:%.*]] = phi ptr [ [[I25143_BB29475]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I25143_BB29475]], [[BB35]] ], [ [[I25142465]], [[BB302]] ]
; CHECK-NEXT:    [[I24139:%.*]] = phi ptr [ [[I24139_BB29476]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I24139_BB29476]], [[BB35]] ], [ [[I24138462]], [[BB302]] ]
; CHECK-NEXT:    [[I23135:%.*]] = phi ptr [ [[I23135_BB29477]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I23135_BB29477]], [[BB35]] ], [ [[I23134459]], [[BB302]] ]
; CHECK-NEXT:    [[I22131:%.*]] = phi ptr [ [[I22131_BB29478]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I22131_BB29478]], [[BB35]] ], [ [[I22130456]], [[BB302]] ]
; CHECK-NEXT:    [[I21127:%.*]] = phi ptr [ [[I21127_BB29479]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I21127_BB29479]], [[BB35]] ], [ [[I21126453]], [[BB302]] ]
; CHECK-NEXT:    [[I6122:%.*]] = phi i32 [ [[I6122_BB29480]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I6122_BB29480]], [[BB35]] ], [ [[I6121450]], [[BB302]] ]
; CHECK-NEXT:    [[I27115:%.*]] = phi ptr [ [[I27115_BB29481]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I27115_BB29481]], [[BB35]] ], [ [[I27114439]], [[BB302]] ]
; CHECK-NEXT:    [[I26111:%.*]] = phi ptr [ [[I26111_BB29482]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I26111_BB29482]], [[BB35]] ], [ [[I26110436]], [[BB302]] ]
; CHECK-NEXT:    [[I20107:%.*]] = phi ptr [ [[I20107_BB29483]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I20107_BB29483]], [[BB35]] ], [ [[I20106433]], [[BB302]] ]
; CHECK-NEXT:    [[I19103:%.*]] = phi ptr [ [[I19103_BB29484]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I19103_BB29484]], [[BB35]] ], [ [[I19102430]], [[BB302]] ]
; CHECK-NEXT:    [[I498:%.*]] = phi ptr [ [[I498_BB29485]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I498_BB29485]], [[BB35]] ], [ [[I497427]], [[BB302]] ]
; CHECK-NEXT:    [[I1395:%.*]] = phi i32 [ [[I1395_BB29486]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1395_BB29486]], [[BB35]] ], [ [[I1393424]], [[BB302]] ]
; CHECK-NEXT:    [[I1890:%.*]] = phi i32 [ [[I1890_BB29487]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1890_BB29487]], [[BB35]] ], [ [[I1889421]], [[BB302]] ]
; CHECK-NEXT:    [[I84:%.*]] = phi i32 [ [[I84_BB29488]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I84_BB29488]], [[BB35]] ], [ [[I82418]], [[BB302]] ]
; CHECK-NEXT:    [[I570:%.*]] = phi i32 [ [[I570_BB29489]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I570_BB29489]], [[BB35]] ], [ [[I569415]], [[BB302]] ]
; CHECK-NEXT:    [[I3067:%.*]] = phi i32 [ [[I328_BB29491]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I328_BB29491]], [[BB35]] ], [ [[I3066412]], [[BB302]] ]
; CHECK-NEXT:    [[I3164:%.*]] = phi i32 [ [[I326_BB29492]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I326_BB29492]], [[BB35]] ], [ [[I3163409]], [[BB302]] ]
; CHECK-NEXT:    [[I1048:%.*]] = phi i32 [ [[I1048_BB29490]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1048_BB29490]], [[BB35]] ], [ [[I1047393]], [[BB302]] ]
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I326:%.*]] = add nsw i32 [[I3164]], [[I1395]]
; CHECK-NEXT:    [[I327:%.*]] = add nsw i32 [[I3067]], [[I1395]]
; CHECK-NEXT:    [[I328:%.*]] = tail call i32 @llvm.smin.i32(i32 [[I327]], i32 [[I6122]])
; CHECK-NEXT:    [[I329:%.*]] = icmp slt i32 [[I326]], [[I570]]
; CHECK-NEXT:    br i1 [[I329]], label [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]], label [[BB330:%.*]]
; CHECK:       bb29.from.bb29.from.bb29.from.bb325:
; CHECK-NEXT:    [[I326_BB29492]] = phi i32 [ [[I326]], [[BB325]] ]
; CHECK-NEXT:    [[I328_BB29491]] = phi i32 [ [[I328]], [[BB325]] ]
; CHECK-NEXT:    [[I1048_BB29490]] = phi i32 [ [[I1048]], [[BB325]] ]
; CHECK-NEXT:    [[I570_BB29489]] = phi i32 [ [[I570]], [[BB325]] ]
; CHECK-NEXT:    [[I84_BB29488]] = phi i32 [ [[I84]], [[BB325]] ]
; CHECK-NEXT:    [[I1890_BB29487]] = phi i32 [ [[I1890]], [[BB325]] ]
; CHECK-NEXT:    [[I1395_BB29486]] = phi i32 [ [[I1395]], [[BB325]] ]
; CHECK-NEXT:    [[I498_BB29485]] = phi ptr [ [[I498]], [[BB325]] ]
; CHECK-NEXT:    [[I19103_BB29484]] = phi ptr [ [[I19103]], [[BB325]] ]
; CHECK-NEXT:    [[I20107_BB29483]] = phi ptr [ [[I20107]], [[BB325]] ]
; CHECK-NEXT:    [[I26111_BB29482]] = phi ptr [ [[I26111]], [[BB325]] ]
; CHECK-NEXT:    [[I27115_BB29481]] = phi ptr [ [[I27115]], [[BB325]] ]
; CHECK-NEXT:    [[I6122_BB29480]] = phi i32 [ [[I6122]], [[BB325]] ]
; CHECK-NEXT:    [[I21127_BB29479]] = phi ptr [ [[I21127]], [[BB325]] ]
; CHECK-NEXT:    [[I22131_BB29478]] = phi ptr [ [[I22131]], [[BB325]] ]
; CHECK-NEXT:    [[I23135_BB29477]] = phi ptr [ [[I23135]], [[BB325]] ]
; CHECK-NEXT:    [[I24139_BB29476]] = phi ptr [ [[I24139]], [[BB325]] ]
; CHECK-NEXT:    [[I25143_BB29475]] = phi ptr [ [[I25143]], [[BB325]] ]
; CHECK-NEXT:    [[I28147_BB29474]] = phi ptr [ [[I28147]], [[BB325]] ]
; CHECK-NEXT:    [[I32]] = zext i32 [[I328_BB29491]] to i64
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I33:%.*]] = load i32, ptr [[I498_BB29485]], align 8, !tbaa [[TBAA19]]
; CHECK-NEXT:    [[I34:%.*]] = icmp sgt i32 [[I33]], 0
; CHECK-NEXT:    br i1 [[I34]], label [[BB35]], label [[BB325]]
; CHECK:       bb330:
; CHECK-NEXT:    ret void
; CHECK:       ThreadExit:
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
;
;
; CHECK-LABEL: define weak_odr protected void @__omp_offloading_run_event_based_simulation_contd_1(
; CHECK-SAME: ptr noalias noundef [[ARG:%.*]], ptr noundef nonnull align 8 dereferenceable(64) [[ARG1:%.*]], ptr noundef nonnull align 8 dereferenceable(112) [[ARG2:%.*]], ptr noundef [[ARG3:%.*]]) local_unnamed_addr #[[ATTR3]] {
; CHECK-NEXT:  ContDispatchBB:
; CHECK-NEXT:    [[TMP0:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
; CHECK-NEXT:    [[TMP1:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
; CHECK-NEXT:    [[TMP2:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
; CHECK-NEXT:    [[TMP3:%.*]] = mul i32 [[TMP1]], [[TMP2]]
; CHECK-NEXT:    [[GTID328:%.*]] = add i32 [[TMP0]], [[TMP3]]
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP5:%.*]] = load ptr, ptr [[TMP4]], align 8
; CHECK-NEXT:    [[CONTCOUNT_IN_PTR329:%.*]] = getelementptr inbounds i32, ptr [[TMP5]], i32 3
; CHECK-NEXT:    [[CONTCOUNT_IN330:%.*]] = load i32, ptr [[CONTCOUNT_IN_PTR329]], align 4
; CHECK-NEXT:    [[MASKTHREAD331:%.*]] = icmp ult i32 [[GTID328]], [[CONTCOUNT_IN330]]
; CHECK-NEXT:    br i1 [[MASKTHREAD331]], label [[CACHEREMAT1:%.*]], label [[THREADEXIT323:%.*]]
; CHECK:       bb35:
; CHECK-NEXT:    [[I36:%.*]] = add nsw i32 [[I326_BB29492:%.*]], [[I84_BB29488:%.*]]
; CHECK-NEXT:    [[I37:%.*]] = sext i32 [[I36]] to i64
; CHECK-NEXT:    [[I38:%.*]] = icmp ugt i64 [[I37]], [[I32:%.*]]
; CHECK-NEXT:    br i1 [[I38]], label [[BB325:%.*]], label [[BB39:%.*]]
; CHECK:       bb39:
; CHECK-NEXT:    [[I28148:%.*]] = phi ptr [ [[I28147_BB29474:%.*]], [[BB35:%.*]] ], [ [[I28146468:%.*]], [[BB302:%.*]] ]
; CHECK-NEXT:    [[I25144:%.*]] = phi ptr [ [[I25143_BB29475:%.*]], [[BB35]] ], [ [[I25142465:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I24140:%.*]] = phi ptr [ [[I24139_BB29476:%.*]], [[BB35]] ], [ [[I24138462:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I23136:%.*]] = phi ptr [ [[I23135_BB29477:%.*]], [[BB35]] ], [ [[I23134459:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I22132:%.*]] = phi ptr [ [[I22131_BB29478:%.*]], [[BB35]] ], [ [[I22130456:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I21128:%.*]] = phi ptr [ [[I21127_BB29479:%.*]], [[BB35]] ], [ [[I21126453:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I6123:%.*]] = phi i32 [ [[I6122_BB29480:%.*]], [[BB35]] ], [ [[I6121450:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I32120:%.*]] = phi i64 [ [[I32]], [[BB35]] ], [ [[I32119447:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I27116:%.*]] = phi ptr [ [[I27115_BB29481:%.*]], [[BB35]] ], [ [[I27114439:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I26112:%.*]] = phi ptr [ [[I26111_BB29482:%.*]], [[BB35]] ], [ [[I26110436:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I20108:%.*]] = phi ptr [ [[I20107_BB29483:%.*]], [[BB35]] ], [ [[I20106433:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I19104:%.*]] = phi ptr [ [[I19103_BB29484:%.*]], [[BB35]] ], [ [[I19102430:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I499:%.*]] = phi ptr [ [[I498_BB29485:%.*]], [[BB35]] ], [ [[I497427:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1396:%.*]] = phi i32 [ [[I1395_BB29486:%.*]], [[BB35]] ], [ [[I1393424:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1891:%.*]] = phi i32 [ [[I1890_BB29487:%.*]], [[BB35]] ], [ [[I1889421:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I86:%.*]] = phi i32 [ [[I84_BB29488]], [[BB35]] ], [ [[I82418:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I571:%.*]] = phi i32 [ [[I570_BB29489:%.*]], [[BB35]] ], [ [[I569415:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3068:%.*]] = phi i32 [ [[I328_BB29491:%.*]], [[BB35]] ], [ [[I3066412:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3165:%.*]] = phi i32 [ [[I326_BB29492]], [[BB35]] ], [ [[I3163409:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1049:%.*]] = phi i32 [ [[I1048_BB29490:%.*]], [[BB35]] ], [ [[I1047393:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I40:%.*]] = phi i64 [ [[I37]], [[BB35]] ], [ [[I323:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I41:%.*]] = trunc i64 [[I40]] to i32
; CHECK-NEXT:    [[I42:%.*]] = shl nsw i32 [[I41]], 1
; CHECK-NEXT:    [[I43:%.*]] = sext i32 [[I42]] to i64
; CHECK-NEXT:    [[I44:%.*]] = and i64 [[I43]], 9223372036854775806
; CHECK-NEXT:    [[I45:%.*]] = icmp eq i64 [[I44]], 0
; CHECK-NEXT:    br i1 [[I45]], label [[BB69:%.*]], label [[BB46:%.*]]
; CHECK:       bb46:
; CHECK-NEXT:    [[I47:%.*]] = phi i64 [ 0, [[BB39]] ], [ [[I58:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I48:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I57:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I49:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I60:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I50:%.*]] = phi i64 [ 2806196910506780709, [[BB39]] ], [ [[I61:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I51:%.*]] = phi i64 [ [[I44]], [[BB39]] ], [ [[I62:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I52:%.*]] = and i64 [[I51]], 1
; CHECK-NEXT:    [[I53:%.*]] = icmp eq i64 [[I52]], 0
; CHECK-NEXT:    [[I54:%.*]] = mul i64 [[I50]], [[I47]]
; CHECK-NEXT:    [[I55:%.*]] = add i64 [[I54]], [[I49]]
; CHECK-NEXT:    [[I56:%.*]] = select i1 [[I53]], i64 1, i64 [[I50]]
; CHECK-NEXT:    [[I57]] = mul i64 [[I56]], [[I48]]
; CHECK-NEXT:    [[I58]] = select i1 [[I53]], i64 [[I47]], i64 [[I55]]
; CHECK-NEXT:    [[I59:%.*]] = add i64 [[I50]], 1
; CHECK-NEXT:    [[I60]] = mul i64 [[I59]], [[I49]]
; CHECK-NEXT:    [[I61]] = mul i64 [[I50]], [[I50]]
; CHECK-NEXT:    [[I62]] = lshr i64 [[I51]], 1
; CHECK-NEXT:    [[I63:%.*]] = icmp ult i64 [[I51]], 2
; CHECK-NEXT:    br i1 [[I63]], label [[BB64:%.*]], label [[BB46]]
; CHECK:       bb64:
; CHECK-NEXT:    [[I67:%.*]] = mul i64 [[I57]], 1070
; CHECK-NEXT:    [[I68:%.*]] = add i64 [[I67]], [[I58]]
; CHECK-NEXT:    br label [[BB69]]
; CHECK:       bb69:
; CHECK-NEXT:    [[I70:%.*]] = phi i64 [ [[I68]], [[BB64]] ], [ 1070, [[BB39]] ]
; CHECK-NEXT:    [[I71:%.*]] = mul i64 [[I70]], 2806196910506780709
; CHECK-NEXT:    [[I72:%.*]] = add i64 [[I71]], 1
; CHECK-NEXT:    [[I73:%.*]] = and i64 [[I72]], 9223372036854775807
; CHECK-NEXT:    [[I74:%.*]] = uitofp i64 [[I73]] to double
; CHECK-NEXT:    [[I75:%.*]] = fmul double [[I74]], 0x3C00000000000000
; CHECK-NEXT:    [[I76:%.*]] = mul i64 [[I72]], 2806196910506780709
; CHECK-NEXT:    [[I77:%.*]] = add i64 [[I76]], 1
; CHECK-NEXT:    [[I78:%.*]] = and i64 [[I77]], 9223372036854775807
; CHECK-NEXT:    [[I79:%.*]] = uitofp i64 [[I78]] to double
; CHECK-NEXT:    [[I80:%.*]] = fmul double [[I79]], 0x3C00000000000000
; CHECK-NEXT:    [[I81:%.*]] = fcmp uge double [[I80]], 5.200000e-02
; CHECK-NEXT:    br i1 [[I81]], label [[BB82:%.*]], label [[BB103:%.*]]
; CHECK:       bb82:
; CHECK-NEXT:    [[I83:%.*]] = fcmp uge double [[I80]], 3.270000e-01
; CHECK-NEXT:    br i1 [[I83]], label [[BB84:%.*]], label [[BB103]]
; CHECK:       bb84:
; CHECK-NEXT:    [[I85:%.*]] = fcmp uge double [[I80]], 4.610000e-01
; CHECK-NEXT:    br i1 [[I85]], label [[BB86:%.*]], label [[BB103]]
; CHECK:       bb86:
; CHECK-NEXT:    [[I87:%.*]] = fcmp uge double [[I80]], 0x3FE3AE147AE147AF
; CHECK-NEXT:    br i1 [[I87]], label [[BB88:%.*]], label [[BB103]]
; CHECK:       bb88:
; CHECK-NEXT:    [[I89:%.*]] = fcmp uge double [[I80]], 6.790000e-01
; CHECK-NEXT:    br i1 [[I89]], label [[BB90:%.*]], label [[BB103]]
; CHECK:       bb90:
; CHECK-NEXT:    [[I91:%.*]] = fcmp uge double [[I80]], 0x3FE7D70A3D70A3D8
; CHECK-NEXT:    br i1 [[I91]], label [[BB92:%.*]], label [[BB103]]
; CHECK:       bb92:
; CHECK-NEXT:    [[I93:%.*]] = fcmp uge double [[I80]], 8.000000e-01
; CHECK-NEXT:    br i1 [[I93]], label [[BB94:%.*]], label [[BB103]]
; CHECK:       bb94:
; CHECK-NEXT:    [[I95:%.*]] = fcmp uge double [[I80]], 8.080000e-01
; CHECK-NEXT:    br i1 [[I95]], label [[BB96:%.*]], label [[BB103]]
; CHECK:       bb96:
; CHECK-NEXT:    [[I97:%.*]] = fcmp uge double [[I80]], 0x3FEA5604189374BD
; CHECK-NEXT:    br i1 [[I97]], label [[BB98:%.*]], label [[BB103]]
; CHECK:       bb98:
; CHECK-NEXT:    [[I99:%.*]] = fcmp uge double [[I80]], 0x3FEB22D0E560418A
; CHECK-NEXT:    br i1 [[I99]], label [[BB100:%.*]], label [[BB103]]
; CHECK:       bb100:
; CHECK-NEXT:    [[I101:%.*]] = fcmp uge double [[I80]], 0x3FEB8D4FDF3B645B
; CHECK-NEXT:    br i1 [[I101]], label [[BB103_FROM_BB103_FROM_BB103_FROM_BB102:%.*]], label [[BB103]]
; CHECK:       bb103.from.bb103.from.bb103.from.bb102:
; CHECK-NEXT:    br label [[BB103]]
; CHECK:       bb103:
; CHECK-NEXT:    [[I104:%.*]] = phi i32 [ 0, [[BB103_FROM_BB103_FROM_BB103_FROM_BB102]] ], [ 1, [[BB69]] ], [ 2, [[BB82]] ], [ 3, [[BB84]] ], [ 4, [[BB86]] ], [ 5, [[BB88]] ], [ 6, [[BB90]] ], [ 7, [[BB92]] ], [ 8, [[BB94]] ], [ 9, [[BB96]] ], [ 10, [[BB98]] ], [ 11, [[BB100]] ]
; CHECK-NEXT:    [[I105:%.*]] = load i64, ptr [[I19104]], align 8, !tbaa [[TBAA27]]
; CHECK-NEXT:    [[I106:%.*]] = load i64, ptr [[I20108]], align 8, !tbaa [[TBAA28]]
; CHECK-NEXT:    [[I107:%.*]] = load ptr, ptr [[ARG2]], align 8, !tbaa [[TBAA29]]
; CHECK-NEXT:    [[I108:%.*]] = load ptr, ptr [[I21128]], align 8, !tbaa [[TBAA31]]
; CHECK-NEXT:    [[I109:%.*]] = load ptr, ptr [[I22132]], align 8, !tbaa [[TBAA32]]
; CHECK-NEXT:    [[I110:%.*]] = load ptr, ptr [[I23136]], align 8, !tbaa [[TBAA33]]
; CHECK-NEXT:    [[I111:%.*]] = load ptr, ptr [[I24140]], align 8, !tbaa [[TBAA34]]
; CHECK-NEXT:    [[I112:%.*]] = load ptr, ptr [[I25144]], align 8, !tbaa [[TBAA35]]
; CHECK-NEXT:    [[I113:%.*]] = load i32, ptr [[I26112]], align 8, !tbaa [[TBAA36]]
; CHECK-NEXT:    [[I114:%.*]] = load i32, ptr [[I27116]], align 4, !tbaa [[TBAA37]]
; CHECK-NEXT:    [[I115:%.*]] = load i32, ptr [[I28148]], align 4, !tbaa [[TBAA38]]
; CHECK-NEXT:    switch i32 [[I113]], label [[BB139:%.*]] [
; CHECK-NEXT:      i32 0, label [[BB116:%.*]]
; CHECK-NEXT:      i32 2, label [[CACHESTORE0:%.*]]
; CHECK-NEXT:    ]
; CHECK:       bb116:
; CHECK-NEXT:    [[I117:%.*]] = mul nsw i64 [[I106]], [[I105]]
; CHECK-NEXT:    [[I118:%.*]] = icmp sgt i64 [[I117]], 2
; CHECK-NEXT:    br i1 [[I118]], label [[BB119:%.*]], label [[BB139]]
; CHECK:       bb119:
; CHECK-NEXT:    [[I120:%.*]] = add nsw i64 [[I117]], -1
; CHECK-NEXT:    br label [[BB121:%.*]]
; CHECK:       bb121:
; CHECK-NEXT:    [[I122:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I132:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I123:%.*]] = phi i64 [ 0, [[BB119]] ], [ [[I131:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I124:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I130:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I125:%.*]] = lshr i64 [[I122]], 1
; CHECK-NEXT:    [[I126:%.*]] = add nuw nsw i64 [[I125]], [[I123]]
; CHECK-NEXT:    [[I127:%.*]] = getelementptr inbounds double, ptr [[I109]], i64 [[I126]]
; CHECK-NEXT:    [[I128:%.*]] = load double, ptr [[I127]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    [[I129:%.*]] = fcmp ogt double [[I128]], [[I75]]
; CHECK-NEXT:    [[I130]] = select i1 [[I129]], i64 [[I126]], i64 [[I124]]
; CHECK-NEXT:    [[I131]] = select i1 [[I129]], i64 [[I123]], i64 [[I126]]
; CHECK-NEXT:    [[I132]] = sub nsw i64 [[I130]], [[I131]]
; CHECK-NEXT:    [[I133:%.*]] = icmp sgt i64 [[I132]], 1
; CHECK-NEXT:    br i1 [[I133]], label [[BB121]], label [[BB139]]
; CHECK:       CacheStore0:
; CHECK-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP7:%.*]] = load ptr, ptr [[TMP6]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR:%.*]] = getelementptr inbounds i32, ptr [[TMP7]], i32 0
; CHECK-NEXT:    [[CACHEIDX:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP8:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP9:%.*]] = load ptr, ptr [[TMP8]], align 8
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds ptr, ptr [[TMP9]], i32 0
; CHECK-NEXT:    [[CACHE_OUT_PTR:%.*]] = load ptr, ptr [[TMP10]], align 8
; CHECK-NEXT:    [[CACHECELL:%.*]] = getelementptr inbounds [[CACHE_CELL0:%.*]], ptr [[CACHE_OUT_PTR]], i32 [[CACHEIDX]]
; CHECK-NEXT:    [[I10_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 0
; CHECK-NEXT:    store i32 [[I1049]], ptr [[I10_CACHEIDX]], align 4
; CHECK-NEXT:    [[I70_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 1
; CHECK-NEXT:    store i64 [[I70]], ptr [[I70_CACHEIDX]], align 8
; CHECK-NEXT:    [[I115_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I115]], ptr [[I115_CACHEIDX]], align 4
; CHECK-NEXT:    [[I114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 3
; CHECK-NEXT:    store i32 [[I114]], ptr [[I114_CACHEIDX]], align 4
; CHECK-NEXT:    [[I113_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 4
; CHECK-NEXT:    store i32 2, ptr [[I113_CACHEIDX]], align 4
; CHECK-NEXT:    [[I112_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 5
; CHECK-NEXT:    store ptr [[I112]], ptr [[I112_CACHEIDX]], align 8
; CHECK-NEXT:    [[I111_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 6
; CHECK-NEXT:    store ptr [[I111]], ptr [[I111_CACHEIDX]], align 8
; CHECK-NEXT:    [[I110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 7
; CHECK-NEXT:    store ptr [[I110]], ptr [[I110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I108_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I108]], ptr [[I108_CACHEIDX]], align 8
; CHECK-NEXT:    [[I107_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 9
; CHECK-NEXT:    store ptr [[I107]], ptr [[I107_CACHEIDX]], align 8
; CHECK-NEXT:    [[I106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 10
; CHECK-NEXT:    store i64 [[I106]], ptr [[I106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I105_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 11
; CHECK-NEXT:    store i64 [[I105]], ptr [[I105_CACHEIDX]], align 8
; CHECK-NEXT:    [[I104_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 12
; CHECK-NEXT:    store i32 [[I104]], ptr [[I104_CACHEIDX]], align 4
; CHECK-NEXT:    [[I40_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 13
; CHECK-NEXT:    store i64 [[I40]], ptr [[I40_CACHEIDX]], align 8
; CHECK-NEXT:    [[I31_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I3165]], ptr [[I31_CACHEIDX]], align 4
; CHECK-NEXT:    [[I30_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 15
; CHECK-NEXT:    store i32 [[I3068]], ptr [[I30_CACHEIDX]], align 4
; CHECK-NEXT:    [[I5_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 16
; CHECK-NEXT:    store i32 [[I571]], ptr [[I5_CACHEIDX]], align 4
; CHECK-NEXT:    [[I_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 17
; CHECK-NEXT:    store i32 [[I86]], ptr [[I_CACHEIDX]], align 4
; CHECK-NEXT:    [[I18_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 18
; CHECK-NEXT:    store i32 [[I1891]], ptr [[I18_CACHEIDX]], align 4
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb139:
; CHECK-NEXT:    [[I28146:%.*]] = phi ptr [ [[I28148]], [[BB103]] ], [ [[I28148]], [[BB116]] ], [ [[I28148]], [[BB121]] ]
; CHECK-NEXT:    [[I25142:%.*]] = phi ptr [ [[I25144]], [[BB103]] ], [ [[I25144]], [[BB116]] ], [ [[I25144]], [[BB121]] ]
; CHECK-NEXT:    [[I24138:%.*]] = phi ptr [ [[I24140]], [[BB103]] ], [ [[I24140]], [[BB116]] ], [ [[I24140]], [[BB121]] ]
; CHECK-NEXT:    [[I23134:%.*]] = phi ptr [ [[I23136]], [[BB103]] ], [ [[I23136]], [[BB116]] ], [ [[I23136]], [[BB121]] ]
; CHECK-NEXT:    [[I22130:%.*]] = phi ptr [ [[I22132]], [[BB103]] ], [ [[I22132]], [[BB116]] ], [ [[I22132]], [[BB121]] ]
; CHECK-NEXT:    [[I21126:%.*]] = phi ptr [ [[I21128]], [[BB103]] ], [ [[I21128]], [[BB116]] ], [ [[I21128]], [[BB121]] ]
; CHECK-NEXT:    [[I6121:%.*]] = phi i32 [ [[I6123]], [[BB103]] ], [ [[I6123]], [[BB116]] ], [ [[I6123]], [[BB121]] ]
; CHECK-NEXT:    [[I32119:%.*]] = phi i64 [ [[I32120]], [[BB103]] ], [ [[I32120]], [[BB116]] ], [ [[I32120]], [[BB121]] ]
; CHECK-NEXT:    [[I41118:%.*]] = phi i32 [ [[I41]], [[BB103]] ], [ [[I41]], [[BB116]] ], [ [[I41]], [[BB121]] ]
; CHECK-NEXT:    [[I75117:%.*]] = phi double [ [[I75]], [[BB103]] ], [ [[I75]], [[BB116]] ], [ [[I75]], [[BB121]] ]
; CHECK-NEXT:    [[I27114:%.*]] = phi ptr [ [[I27116]], [[BB103]] ], [ [[I27116]], [[BB116]] ], [ [[I27116]], [[BB121]] ]
; CHECK-NEXT:    [[I26110:%.*]] = phi ptr [ [[I26112]], [[BB103]] ], [ [[I26112]], [[BB116]] ], [ [[I26112]], [[BB121]] ]
; CHECK-NEXT:    [[I20106:%.*]] = phi ptr [ [[I20108]], [[BB103]] ], [ [[I20108]], [[BB116]] ], [ [[I20108]], [[BB121]] ]
; CHECK-NEXT:    [[I19102:%.*]] = phi ptr [ [[I19104]], [[BB103]] ], [ [[I19104]], [[BB116]] ], [ [[I19104]], [[BB121]] ]
; CHECK-NEXT:    [[I497:%.*]] = phi ptr [ [[I499]], [[BB103]] ], [ [[I499]], [[BB116]] ], [ [[I499]], [[BB121]] ]
; CHECK-NEXT:    [[I1393:%.*]] = phi i32 [ [[I1396]], [[BB103]] ], [ [[I1396]], [[BB116]] ], [ [[I1396]], [[BB121]] ]
; CHECK-NEXT:    [[I1889:%.*]] = phi i32 [ [[I1891]], [[BB103]] ], [ [[I1891]], [[BB116]] ], [ [[I1891]], [[BB121]] ]
; CHECK-NEXT:    [[I82:%.*]] = phi i32 [ [[I86]], [[BB103]] ], [ [[I86]], [[BB116]] ], [ [[I86]], [[BB121]] ]
; CHECK-NEXT:    [[I569:%.*]] = phi i32 [ [[I571]], [[BB103]] ], [ [[I571]], [[BB116]] ], [ [[I571]], [[BB121]] ]
; CHECK-NEXT:    [[I3066:%.*]] = phi i32 [ [[I3068]], [[BB103]] ], [ [[I3068]], [[BB116]] ], [ [[I3068]], [[BB121]] ]
; CHECK-NEXT:    [[I3163:%.*]] = phi i32 [ [[I3165]], [[BB103]] ], [ [[I3165]], [[BB116]] ], [ [[I3165]], [[BB121]] ]
; CHECK-NEXT:    [[I4062:%.*]] = phi i64 [ [[I40]], [[BB103]] ], [ [[I40]], [[BB116]] ], [ [[I40]], [[BB121]] ]
; CHECK-NEXT:    [[I10461:%.*]] = phi i32 [ [[I104]], [[BB103]] ], [ [[I104]], [[BB116]] ], [ [[I104]], [[BB121]] ]
; CHECK-NEXT:    [[I10560:%.*]] = phi i64 [ [[I105]], [[BB103]] ], [ [[I105]], [[BB116]] ], [ [[I105]], [[BB121]] ]
; CHECK-NEXT:    [[I10659:%.*]] = phi i64 [ [[I106]], [[BB103]] ], [ [[I106]], [[BB116]] ], [ [[I106]], [[BB121]] ]
; CHECK-NEXT:    [[I10758:%.*]] = phi ptr [ [[I107]], [[BB103]] ], [ [[I107]], [[BB116]] ], [ [[I107]], [[BB121]] ]
; CHECK-NEXT:    [[I10857:%.*]] = phi ptr [ [[I108]], [[BB103]] ], [ [[I108]], [[BB116]] ], [ [[I108]], [[BB121]] ]
; CHECK-NEXT:    [[I11056:%.*]] = phi ptr [ [[I110]], [[BB103]] ], [ [[I110]], [[BB116]] ], [ [[I110]], [[BB121]] ]
; CHECK-NEXT:    [[I11155:%.*]] = phi ptr [ [[I111]], [[BB103]] ], [ [[I111]], [[BB116]] ], [ [[I111]], [[BB121]] ]
; CHECK-NEXT:    [[I11254:%.*]] = phi ptr [ [[I112]], [[BB103]] ], [ [[I112]], [[BB116]] ], [ [[I112]], [[BB121]] ]
; CHECK-NEXT:    [[I11353:%.*]] = phi i32 [ [[I113]], [[BB103]] ], [ 0, [[BB116]] ], [ 0, [[BB121]] ]
; CHECK-NEXT:    [[I11452:%.*]] = phi i32 [ [[I114]], [[BB103]] ], [ [[I114]], [[BB116]] ], [ [[I114]], [[BB121]] ]
; CHECK-NEXT:    [[I11551:%.*]] = phi i32 [ [[I115]], [[BB103]] ], [ [[I115]], [[BB116]] ], [ [[I115]], [[BB121]] ]
; CHECK-NEXT:    [[I1047:%.*]] = phi i32 [ [[I1049]], [[BB103]] ], [ [[I1049]], [[BB116]] ], [ [[I1049]], [[BB121]] ]
; CHECK-NEXT:    [[I140:%.*]] = phi i64 [ -1, [[BB103]] ], [ 0, [[BB116]] ], [ [[I131]], [[BB121]] ]
; CHECK-NEXT:    [[I141:%.*]] = zext nneg i32 [[I10461]] to i64
; CHECK-NEXT:    [[I142:%.*]] = getelementptr inbounds i32, ptr [[I10758]], i64 [[I141]]
; CHECK-NEXT:    [[I143:%.*]] = load i32, ptr [[I142]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I144:%.*]] = icmp sgt i32 [[I143]], 0
; CHECK-NEXT:    br i1 [[I144]], label [[BB145:%.*]], label [[BB302]]
; CHECK:       bb145:
; CHECK-NEXT:    [[I146:%.*]] = mul nsw i32 [[I11551]], [[I10461]]
; CHECK-NEXT:    [[I147:%.*]] = mul nsw i64 [[I140]], [[I10560]]
; CHECK-NEXT:    [[I148:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I147]]
; CHECK-NEXT:    [[I149:%.*]] = add i64 [[I10659]], -1
; CHECK-NEXT:    [[I150:%.*]] = icmp sgt i64 [[I10659]], 2
; CHECK-NEXT:    [[I151:%.*]] = add nsw i32 [[I11452]], -1
; CHECK-NEXT:    [[I152:%.*]] = sext i32 [[I151]] to i64
; CHECK-NEXT:    [[I153:%.*]] = icmp eq i64 [[I140]], [[I152]]
; CHECK-NEXT:    [[I154:%.*]] = add nsw i64 [[I140]], 1
; CHECK-NEXT:    [[I155:%.*]] = mul nsw i64 [[I154]], [[I10560]]
; CHECK-NEXT:    [[I156:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I155]]
; CHECK-NEXT:    [[I157:%.*]] = trunc i64 [[I10659]] to i32
; CHECK-NEXT:    [[I158:%.*]] = add i32 [[I157]], -1
; CHECK-NEXT:    br label [[BB159:%.*]]
; CHECK:       bb159:
; CHECK-NEXT:    [[I158473:%.*]] = phi i32 [ [[I158]], [[BB145]] ], [ [[I158472:%.*]], [[BB255:%.*]] ]
; CHECK-NEXT:    [[I149471:%.*]] = phi i64 [ [[I149]], [[BB145]] ], [ [[I149470:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I28146469:%.*]] = phi ptr [ [[I28146]], [[BB145]] ], [ [[I28146467:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I25142466:%.*]] = phi ptr [ [[I25142]], [[BB145]] ], [ [[I25142464:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I24138463:%.*]] = phi ptr [ [[I24138]], [[BB145]] ], [ [[I24138461:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I23134460:%.*]] = phi ptr [ [[I23134]], [[BB145]] ], [ [[I23134458:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I22130457:%.*]] = phi ptr [ [[I22130]], [[BB145]] ], [ [[I22130455:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I21126454:%.*]] = phi ptr [ [[I21126]], [[BB145]] ], [ [[I21126452:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I6121451:%.*]] = phi i32 [ [[I6121]], [[BB145]] ], [ [[I6121449:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I32119448:%.*]] = phi i64 [ [[I32119]], [[BB145]] ], [ [[I32119446:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I41118445:%.*]] = phi i32 [ [[I41118]], [[BB145]] ], [ [[I41118443:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I75117442:%.*]] = phi double [ [[I75117]], [[BB145]] ], [ [[I75117441:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I27114440:%.*]] = phi ptr [ [[I27114]], [[BB145]] ], [ [[I27114438:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I26110437:%.*]] = phi ptr [ [[I26110]], [[BB145]] ], [ [[I26110435:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I20106434:%.*]] = phi ptr [ [[I20106]], [[BB145]] ], [ [[I20106432:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I19102431:%.*]] = phi ptr [ [[I19102]], [[BB145]] ], [ [[I19102429:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I497428:%.*]] = phi ptr [ [[I497]], [[BB145]] ], [ [[I497426:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I1393425:%.*]] = phi i32 [ [[I1393]], [[BB145]] ], [ [[I1393423:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I1889422:%.*]] = phi i32 [ [[I1889]], [[BB145]] ], [ [[I1889420:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I82419:%.*]] = phi i32 [ [[I82]], [[BB145]] ], [ [[I82417:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I569416:%.*]] = phi i32 [ [[I569]], [[BB145]] ], [ [[I569414:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I3066413:%.*]] = phi i32 [ [[I3066]], [[BB145]] ], [ [[I3066411:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I3163410:%.*]] = phi i32 [ [[I3163]], [[BB145]] ], [ [[I3163408:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I4062407:%.*]] = phi i64 [ [[I4062]], [[BB145]] ], [ [[I4062405:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I10659404:%.*]] = phi i64 [ [[I10659]], [[BB145]] ], [ [[I10659403:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I10857402:%.*]] = phi ptr [ [[I10857]], [[BB145]] ], [ [[I10857401:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I11155400:%.*]] = phi ptr [ [[I11155]], [[BB145]] ], [ [[I11155399:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I11254398:%.*]] = phi ptr [ [[I11254]], [[BB145]] ], [ [[I11254397:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I11353396:%.*]] = phi i32 [ [[I11353]], [[BB145]] ], [ [[I11353395:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I1047394:%.*]] = phi i32 [ [[I1047]], [[BB145]] ], [ [[I1047392:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I156384:%.*]] = phi ptr [ [[I156]], [[BB145]] ], [ [[I156383:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I148382:%.*]] = phi ptr [ [[I148]], [[BB145]] ], [ [[I148381:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I153380:%.*]] = phi i1 [ [[I153]], [[BB145]] ], [ [[I153379:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I146378:%.*]] = phi i32 [ [[I146]], [[BB145]] ], [ [[I146377:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I142376:%.*]] = phi ptr [ [[I142]], [[BB145]] ], [ [[I142375:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I160:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I298:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I161:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I297:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I162:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I296:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I163:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I295:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I164:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I294:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I165:%.*]] = phi i32 [ 0, [[BB145]] ], [ [[I299:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I166:%.*]] = add nsw i32 [[I165]], [[I146378]]
; CHECK-NEXT:    [[I167:%.*]] = sext i32 [[I166]] to i64
; CHECK-NEXT:    [[I168:%.*]] = getelementptr inbounds i32, ptr [[I11254398]], i64 [[I167]]
; CHECK-NEXT:    [[I169:%.*]] = load i32, ptr [[I168]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I170:%.*]] = getelementptr inbounds double, ptr [[I10857402]], i64 [[I167]]
; CHECK-NEXT:    [[I171:%.*]] = load double, ptr [[I170]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    switch i32 [[I11353396]], label [[CACHESTORE2:%.*]] [
; CHECK-NEXT:      i32 1, label [[CACHESTORE1:%.*]]
; CHECK-NEXT:      i32 0, label [[BB197:%.*]]
; CHECK-NEXT:    ]
; CHECK:       CacheStore1:
; CHECK-NEXT:    [[TMP11:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP12:%.*]] = load ptr, ptr [[TMP11]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR324:%.*]] = getelementptr inbounds i32, ptr [[TMP12]], i32 1
; CHECK-NEXT:    [[CACHEIDX325:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR324]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP13:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP14:%.*]] = load ptr, ptr [[TMP13]], align 8
; CHECK-NEXT:    [[TMP15:%.*]] = getelementptr inbounds ptr, ptr [[TMP14]], i32 1
; CHECK-NEXT:    [[CACHE_OUT_PTR326:%.*]] = load ptr, ptr [[TMP15]], align 8
; CHECK-NEXT:    [[CACHECELL327:%.*]] = getelementptr inbounds [[CACHE_CELL1:%.*]], ptr [[CACHE_OUT_PTR326]], i32 [[CACHEIDX325]]
; CHECK-NEXT:    [[I142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 0
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 2
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 3
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 4
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156_CACHEIDX]], align 8
; CHECK-NEXT:    [[I171_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 5
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 6
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 7
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 8
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 9
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 10
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 11
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 12
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 14
; CHECK-NEXT:    store i32 1, ptr [[I11353_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146_CACHEIDX]], align 8
; CHECK-NEXT:    br label [[THREADEXIT323]]
; CHECK:       CacheRemat1:
; CHECK-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP17:%.*]] = load ptr, ptr [[TMP16]], align 8
; CHECK-NEXT:    [[TMP18:%.*]] = getelementptr inbounds ptr, ptr [[TMP17]], i32 4
; CHECK-NEXT:    [[CACHE_IN_PTR332:%.*]] = load ptr, ptr [[TMP18]], align 8
; CHECK-NEXT:    [[CACHECELL333:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHE_IN_PTR332]], i32 [[GTID328]]
; CHECK-NEXT:    [[I142_CACHEIDX334:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 0
; CHECK-NEXT:    [[I142_CACHE:%.*]] = load ptr, ptr [[I142_CACHEIDX334]], align 8
; CHECK-NEXT:    [[I146_CACHEIDX335:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 1
; CHECK-NEXT:    [[I146_CACHE:%.*]] = load i32, ptr [[I146_CACHEIDX335]], align 4
; CHECK-NEXT:    [[I153_CACHEIDX336:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 2
; CHECK-NEXT:    [[I153_CACHE:%.*]] = load i1, ptr [[I153_CACHEIDX336]], align 1
; CHECK-NEXT:    [[I148_CACHEIDX337:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 3
; CHECK-NEXT:    [[I148_CACHE:%.*]] = load ptr, ptr [[I148_CACHEIDX337]], align 8
; CHECK-NEXT:    [[I156_CACHEIDX338:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 4
; CHECK-NEXT:    [[I156_CACHE:%.*]] = load ptr, ptr [[I156_CACHEIDX338]], align 8
; CHECK-NEXT:    [[I171_CACHEIDX339:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 5
; CHECK-NEXT:    [[I171_CACHE:%.*]] = load double, ptr [[I171_CACHEIDX339]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX340:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 6
; CHECK-NEXT:    [[I169_CACHE:%.*]] = load i32, ptr [[I169_CACHEIDX340]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX341:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 7
; CHECK-NEXT:    [[I165_CACHE:%.*]] = load i32, ptr [[I165_CACHEIDX341]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX342:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 8
; CHECK-NEXT:    [[I164_CACHE:%.*]] = load double, ptr [[I164_CACHEIDX342]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX343:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 9
; CHECK-NEXT:    [[I163_CACHE:%.*]] = load double, ptr [[I163_CACHEIDX343]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX344:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 10
; CHECK-NEXT:    [[I162_CACHE:%.*]] = load double, ptr [[I162_CACHEIDX344]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX345:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 11
; CHECK-NEXT:    [[I161_CACHE:%.*]] = load double, ptr [[I161_CACHEIDX345]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX346:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 12
; CHECK-NEXT:    [[I160_CACHE:%.*]] = load double, ptr [[I160_CACHEIDX346]], align 8
; CHECK-NEXT:    [[I1047_CACHEIDX347:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 13
; CHECK-NEXT:    [[I1047_CACHE:%.*]] = load i32, ptr [[I1047_CACHEIDX347]], align 4
; CHECK-NEXT:    [[I11353_CACHEIDX348:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 14
; CHECK-NEXT:    [[I11353_CACHE:%.*]] = load i32, ptr [[I11353_CACHEIDX348]], align 4
; CHECK-NEXT:    [[I11254_CACHEIDX349:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 15
; CHECK-NEXT:    [[I11254_CACHE:%.*]] = load ptr, ptr [[I11254_CACHEIDX349]], align 8
; CHECK-NEXT:    [[I11155_CACHEIDX350:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 16
; CHECK-NEXT:    [[I11155_CACHE:%.*]] = load ptr, ptr [[I11155_CACHEIDX350]], align 8
; CHECK-NEXT:    [[I10857_CACHEIDX351:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 17
; CHECK-NEXT:    [[I10857_CACHE:%.*]] = load ptr, ptr [[I10857_CACHEIDX351]], align 8
; CHECK-NEXT:    [[I10659_CACHEIDX352:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 18
; CHECK-NEXT:    [[I10659_CACHE:%.*]] = load i64, ptr [[I10659_CACHEIDX352]], align 8
; CHECK-NEXT:    [[I4062_CACHEIDX353:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 19
; CHECK-NEXT:    [[I4062_CACHE:%.*]] = load i64, ptr [[I4062_CACHEIDX353]], align 8
; CHECK-NEXT:    [[I3163_CACHEIDX354:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 20
; CHECK-NEXT:    [[I3163_CACHE:%.*]] = load i32, ptr [[I3163_CACHEIDX354]], align 4
; CHECK-NEXT:    [[I3066_CACHEIDX355:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 21
; CHECK-NEXT:    [[I3066_CACHE:%.*]] = load i32, ptr [[I3066_CACHEIDX355]], align 4
; CHECK-NEXT:    [[I569_CACHEIDX356:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 22
; CHECK-NEXT:    [[I569_CACHE:%.*]] = load i32, ptr [[I569_CACHEIDX356]], align 4
; CHECK-NEXT:    [[I82_CACHEIDX357:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 23
; CHECK-NEXT:    [[I82_CACHE:%.*]] = load i32, ptr [[I82_CACHEIDX357]], align 4
; CHECK-NEXT:    [[I1889_CACHEIDX358:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 24
; CHECK-NEXT:    [[I1889_CACHE:%.*]] = load i32, ptr [[I1889_CACHEIDX358]], align 4
; CHECK-NEXT:    [[I1393_CACHEIDX359:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 25
; CHECK-NEXT:    [[I1393_CACHE:%.*]] = load i32, ptr [[I1393_CACHEIDX359]], align 4
; CHECK-NEXT:    [[I497_CACHEIDX360:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 26
; CHECK-NEXT:    [[I497_CACHE:%.*]] = load ptr, ptr [[I497_CACHEIDX360]], align 8
; CHECK-NEXT:    [[I19102_CACHEIDX361:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 27
; CHECK-NEXT:    [[I19102_CACHE:%.*]] = load ptr, ptr [[I19102_CACHEIDX361]], align 8
; CHECK-NEXT:    [[I20106_CACHEIDX362:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 28
; CHECK-NEXT:    [[I20106_CACHE:%.*]] = load ptr, ptr [[I20106_CACHEIDX362]], align 8
; CHECK-NEXT:    [[I26110_CACHEIDX363:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 29
; CHECK-NEXT:    [[I26110_CACHE:%.*]] = load ptr, ptr [[I26110_CACHEIDX363]], align 8
; CHECK-NEXT:    [[I27114_CACHEIDX364:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 30
; CHECK-NEXT:    [[I27114_CACHE:%.*]] = load ptr, ptr [[I27114_CACHEIDX364]], align 8
; CHECK-NEXT:    [[I75117_CACHEIDX365:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 31
; CHECK-NEXT:    [[I75117_CACHE:%.*]] = load double, ptr [[I75117_CACHEIDX365]], align 8
; CHECK-NEXT:    [[I41118_CACHEIDX366:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 32
; CHECK-NEXT:    [[I41118_CACHE:%.*]] = load i32, ptr [[I41118_CACHEIDX366]], align 4
; CHECK-NEXT:    [[I32119_CACHEIDX367:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 33
; CHECK-NEXT:    [[I32119_CACHE:%.*]] = load i64, ptr [[I32119_CACHEIDX367]], align 8
; CHECK-NEXT:    [[I6121_CACHEIDX368:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 34
; CHECK-NEXT:    [[I6121_CACHE:%.*]] = load i32, ptr [[I6121_CACHEIDX368]], align 4
; CHECK-NEXT:    [[I21126_CACHEIDX369:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 35
; CHECK-NEXT:    [[I21126_CACHE:%.*]] = load ptr, ptr [[I21126_CACHEIDX369]], align 8
; CHECK-NEXT:    [[I22130_CACHEIDX370:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 36
; CHECK-NEXT:    [[I22130_CACHE:%.*]] = load ptr, ptr [[I22130_CACHEIDX370]], align 8
; CHECK-NEXT:    [[I23134_CACHEIDX371:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 37
; CHECK-NEXT:    [[I23134_CACHE:%.*]] = load ptr, ptr [[I23134_CACHEIDX371]], align 8
; CHECK-NEXT:    [[I24138_CACHEIDX372:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 38
; CHECK-NEXT:    [[I24138_CACHE:%.*]] = load ptr, ptr [[I24138_CACHEIDX372]], align 8
; CHECK-NEXT:    [[I25142_CACHEIDX373:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 39
; CHECK-NEXT:    [[I25142_CACHE:%.*]] = load ptr, ptr [[I25142_CACHEIDX373]], align 8
; CHECK-NEXT:    [[I28146_CACHEIDX374:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL333]], i32 0, i32 40
; CHECK-NEXT:    [[I28146_CACHE:%.*]] = load ptr, ptr [[I28146_CACHEIDX374]], align 8
; CHECK-NEXT:    [[I149_RECOMPUTE:%.*]] = add i64 [[I10659_CACHE]], -1
; CHECK-NEXT:    [[I150_RECOMPUTE:%.*]] = icmp sgt i64 [[I10659_CACHE]], 2
; CHECK-NEXT:    [[I157_RECOMPUTE:%.*]] = trunc i64 [[I10659_CACHE]] to i32
; CHECK-NEXT:    [[I158_RECOMPUTE:%.*]] = add i32 [[I157_RECOMPUTE]], -1
; CHECK-NEXT:    [[I173:%.*]] = sext i32 [[I169_CACHE]] to i64
; CHECK-NEXT:    [[I174:%.*]] = mul nsw i64 [[I10659_CACHE]], [[I173]]
; CHECK-NEXT:    [[I175:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT:%.*]], ptr [[I11155_CACHE]], i64 [[I174]]
; CHECK-NEXT:    br i1 [[I150_RECOMPUTE]], label [[BB176:%.*]], label [[BB189:%.*]]
; CHECK:       bb176:
; CHECK-NEXT:    [[I177:%.*]] = phi i64 [ [[I149_RECOMPUTE]], [[CACHEREMAT1]] ], [ [[I187:%.*]], [[BB176]] ]
; CHECK-NEXT:    [[I178:%.*]] = phi i64 [ 0, [[CACHEREMAT1]] ], [ [[I186:%.*]], [[BB176]] ]
; CHECK-NEXT:    [[I179:%.*]] = phi i64 [ [[I149_RECOMPUTE]], [[CACHEREMAT1]] ], [ [[I185:%.*]], [[BB176]] ]
; CHECK-NEXT:    [[I180:%.*]] = lshr i64 [[I177]], 1
; CHECK-NEXT:    [[I181:%.*]] = add nuw nsw i64 [[I180]], [[I178]]
; CHECK-NEXT:    [[I182:%.*]] = getelementptr inbounds [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I175]], i64 [[I181]]
; CHECK-NEXT:    [[I183:%.*]] = load double, ptr [[I182]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I184:%.*]] = fcmp ogt double [[I183]], [[I75117_CACHE]]
; CHECK-NEXT:    [[I185]] = select i1 [[I184]], i64 [[I181]], i64 [[I179]]
; CHECK-NEXT:    [[I186]] = select i1 [[I184]], i64 [[I178]], i64 [[I181]]
; CHECK-NEXT:    [[I187]] = sub nsw i64 [[I185]], [[I186]]
; CHECK-NEXT:    [[I188:%.*]] = icmp sgt i64 [[I187]], 1
; CHECK-NEXT:    br i1 [[I188]], label [[BB176]], label [[BB189]]
; CHECK:       bb189:
; CHECK-NEXT:    [[I190:%.*]] = phi i64 [ 0, [[CACHEREMAT1]] ], [ [[I186]], [[BB176]] ]
; CHECK-NEXT:    [[I191:%.*]] = icmp eq i64 [[I190]], [[I149_RECOMPUTE]]
; CHECK-NEXT:    br i1 [[I191]], label [[BB192:%.*]], label [[BB195:%.*]]
; CHECK:       bb192:
; CHECK-NEXT:    [[I193:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I175]], i64 [[I149_RECOMPUTE]]
; CHECK-NEXT:    [[I194:%.*]] = getelementptr i8, ptr [[I193]], i64 -48
; CHECK-NEXT:    br label [[BB255]]
; CHECK:       bb195:
; CHECK-NEXT:    [[I196:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I175]], i64 [[I190]]
; CHECK-NEXT:    br label [[BB255]]
; CHECK:       bb197:
; CHECK-NEXT:    [[I198:%.*]] = sext i32 [[I169]] to i64
; CHECK-NEXT:    [[I199:%.*]] = getelementptr i32, ptr [[I148382]], i64 [[I198]]
; CHECK-NEXT:    [[I200:%.*]] = load i32, ptr [[I199]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I201:%.*]] = sext i32 [[I200]] to i64
; CHECK-NEXT:    [[I202:%.*]] = icmp eq i64 [[I149471]], [[I201]]
; CHECK-NEXT:    [[I203:%.*]] = mul nsw i64 [[I10659404]], [[I198]]
; CHECK-NEXT:    [[I204:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I11155400]], i64 [[I203]]
; CHECK-NEXT:    [[I205:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I204]], i64 [[I201]]
; CHECK-NEXT:    [[I206:%.*]] = select i1 [[I202]], i64 -48, i64 0
; CHECK-NEXT:    [[I207:%.*]] = getelementptr i8, ptr [[I205]], i64 [[I206]]
; CHECK-NEXT:    br label [[BB255]]
; CHECK:       CacheStore2:
; CHECK-NEXT:    [[TMP19:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP20:%.*]] = load ptr, ptr [[TMP19]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR913:%.*]] = getelementptr inbounds i32, ptr [[TMP20]], i32 2
; CHECK-NEXT:    [[CACHEIDX914:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR913]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP21:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP22:%.*]] = load ptr, ptr [[TMP21]], align 8
; CHECK-NEXT:    [[TMP23:%.*]] = getelementptr inbounds ptr, ptr [[TMP22]], i32 2
; CHECK-NEXT:    [[CACHE_OUT_PTR915:%.*]] = load ptr, ptr [[TMP23]], align 8
; CHECK-NEXT:    [[CACHECELL916:%.*]] = getelementptr inbounds [[CACHE_CELL2:%.*]], ptr [[CACHE_OUT_PTR915]], i32 [[CACHEIDX914]]
; CHECK-NEXT:    [[I171_CACHEIDX917:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 0
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX917]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX918:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX918]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX919:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX919]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX920:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 3
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX920]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX921:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 4
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX921]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX922:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 5
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX922]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX923:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 6
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX923]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX924:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 7
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX924]], align 8
; CHECK-NEXT:    [[I142376_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142376_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146378_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 9
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146378_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153380_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 10
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153380_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148382_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 11
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148382_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156384_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 12
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156384_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047394_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047394_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353396_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I11353396]], ptr [[I11353396_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254398_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254398_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155400_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155400_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857402_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857402_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659404_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659404_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062407_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062407_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163410_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163410_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066413_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066413_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569416_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569416_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82419_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82419_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889422_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889422_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393425_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393425_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497428_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497428_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102431_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102431_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106434_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106434_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110437_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110437_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114440_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114440_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117442_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117442_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118445_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118445_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119448_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119448_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121451_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121451_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126454_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126454_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130457_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130457_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134460_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134460_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138463_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138463_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142466_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142466_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146469_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146469_CACHEIDX]], align 8
; CHECK-NEXT:    [[I149471_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 41
; CHECK-NEXT:    store i64 [[I149471]], ptr [[I149471_CACHEIDX]], align 8
; CHECK-NEXT:    [[I158473_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 42
; CHECK-NEXT:    store i32 [[I158473]], ptr [[I158473_CACHEIDX]], align 4
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb255:
; CHECK-NEXT:    [[I158472]] = phi i32 [ [[I158473]], [[BB197]] ], [ [[I158_RECOMPUTE]], [[BB195]] ], [ [[I158_RECOMPUTE]], [[BB192]] ]
; CHECK-NEXT:    [[I149470]] = phi i64 [ [[I149471]], [[BB197]] ], [ [[I149_RECOMPUTE]], [[BB195]] ], [ [[I149_RECOMPUTE]], [[BB192]] ]
; CHECK-NEXT:    [[I28146467]] = phi ptr [ [[I28146469]], [[BB197]] ], [ [[I28146_CACHE]], [[BB195]] ], [ [[I28146_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I25142464]] = phi ptr [ [[I25142466]], [[BB197]] ], [ [[I25142_CACHE]], [[BB195]] ], [ [[I25142_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I24138461]] = phi ptr [ [[I24138463]], [[BB197]] ], [ [[I24138_CACHE]], [[BB195]] ], [ [[I24138_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I23134458]] = phi ptr [ [[I23134460]], [[BB197]] ], [ [[I23134_CACHE]], [[BB195]] ], [ [[I23134_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I22130455]] = phi ptr [ [[I22130457]], [[BB197]] ], [ [[I22130_CACHE]], [[BB195]] ], [ [[I22130_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I21126452]] = phi ptr [ [[I21126454]], [[BB197]] ], [ [[I21126_CACHE]], [[BB195]] ], [ [[I21126_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I6121449]] = phi i32 [ [[I6121451]], [[BB197]] ], [ [[I6121_CACHE]], [[BB195]] ], [ [[I6121_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I32119446]] = phi i64 [ [[I32119448]], [[BB197]] ], [ [[I32119_CACHE]], [[BB195]] ], [ [[I32119_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I41118443]] = phi i32 [ [[I41118445]], [[BB197]] ], [ [[I41118_CACHE]], [[BB195]] ], [ [[I41118_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I75117441]] = phi double [ [[I75117442]], [[BB197]] ], [ [[I75117_CACHE]], [[BB195]] ], [ [[I75117_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I27114438]] = phi ptr [ [[I27114440]], [[BB197]] ], [ [[I27114_CACHE]], [[BB195]] ], [ [[I27114_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I26110435]] = phi ptr [ [[I26110437]], [[BB197]] ], [ [[I26110_CACHE]], [[BB195]] ], [ [[I26110_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I20106432]] = phi ptr [ [[I20106434]], [[BB197]] ], [ [[I20106_CACHE]], [[BB195]] ], [ [[I20106_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I19102429]] = phi ptr [ [[I19102431]], [[BB197]] ], [ [[I19102_CACHE]], [[BB195]] ], [ [[I19102_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I497426]] = phi ptr [ [[I497428]], [[BB197]] ], [ [[I497_CACHE]], [[BB195]] ], [ [[I497_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I1393423]] = phi i32 [ [[I1393425]], [[BB197]] ], [ [[I1393_CACHE]], [[BB195]] ], [ [[I1393_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I1889420]] = phi i32 [ [[I1889422]], [[BB197]] ], [ [[I1889_CACHE]], [[BB195]] ], [ [[I1889_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I82417]] = phi i32 [ [[I82419]], [[BB197]] ], [ [[I82_CACHE]], [[BB195]] ], [ [[I82_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I569414]] = phi i32 [ [[I569416]], [[BB197]] ], [ [[I569_CACHE]], [[BB195]] ], [ [[I569_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I3066411]] = phi i32 [ [[I3066413]], [[BB197]] ], [ [[I3066_CACHE]], [[BB195]] ], [ [[I3066_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I3163408]] = phi i32 [ [[I3163410]], [[BB197]] ], [ [[I3163_CACHE]], [[BB195]] ], [ [[I3163_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I4062405]] = phi i64 [ [[I4062407]], [[BB197]] ], [ [[I4062_CACHE]], [[BB195]] ], [ [[I4062_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I10659403]] = phi i64 [ [[I10659404]], [[BB197]] ], [ [[I10659_CACHE]], [[BB195]] ], [ [[I10659_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I10857401]] = phi ptr [ [[I10857402]], [[BB197]] ], [ [[I10857_CACHE]], [[BB195]] ], [ [[I10857_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I11155399]] = phi ptr [ [[I11155400]], [[BB197]] ], [ [[I11155_CACHE]], [[BB195]] ], [ [[I11155_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I11254397]] = phi ptr [ [[I11254398]], [[BB197]] ], [ [[I11254_CACHE]], [[BB195]] ], [ [[I11254_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I11353395]] = phi i32 [ 0, [[BB197]] ], [ [[I11353_CACHE]], [[BB195]] ], [ [[I11353_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I1047392]] = phi i32 [ [[I1047394]], [[BB197]] ], [ [[I1047_CACHE]], [[BB195]] ], [ [[I1047_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I160391:%.*]] = phi double [ [[I160]], [[BB197]] ], [ [[I160_CACHE]], [[BB195]] ], [ [[I160_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I161390:%.*]] = phi double [ [[I161]], [[BB197]] ], [ [[I161_CACHE]], [[BB195]] ], [ [[I161_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I162389:%.*]] = phi double [ [[I162]], [[BB197]] ], [ [[I162_CACHE]], [[BB195]] ], [ [[I162_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I163388:%.*]] = phi double [ [[I163]], [[BB197]] ], [ [[I163_CACHE]], [[BB195]] ], [ [[I163_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I164387:%.*]] = phi double [ [[I164]], [[BB197]] ], [ [[I164_CACHE]], [[BB195]] ], [ [[I164_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I165386:%.*]] = phi i32 [ [[I165]], [[BB197]] ], [ [[I165_CACHE]], [[BB195]] ], [ [[I165_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I171385:%.*]] = phi double [ [[I171]], [[BB197]] ], [ [[I171_CACHE]], [[BB195]] ], [ [[I171_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I156383]] = phi ptr [ [[I156384]], [[BB197]] ], [ [[I156_CACHE]], [[BB195]] ], [ [[I156_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I148381]] = phi ptr [ [[I148382]], [[BB197]] ], [ [[I148_CACHE]], [[BB195]] ], [ [[I148_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I153379]] = phi i1 [ [[I153380]], [[BB197]] ], [ [[I153_CACHE]], [[BB195]] ], [ [[I153_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I146377]] = phi i32 [ [[I146378]], [[BB197]] ], [ [[I146_CACHE]], [[BB195]] ], [ [[I146_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I142375]] = phi ptr [ [[I142376]], [[BB197]] ], [ [[I142_CACHE]], [[BB195]] ], [ [[I142_CACHE]], [[BB192]] ]
; CHECK-NEXT:    [[I256:%.*]] = phi ptr [ [[I194]], [[BB192]] ], [ [[I196]], [[BB195]] ], [ [[I207]], [[BB197]] ]
; CHECK-NEXT:    [[I257:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 48
; CHECK-NEXT:    [[I258:%.*]] = load double, ptr [[I257]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I259:%.*]] = fsub double [[I258]], [[I75117441]]
; CHECK-NEXT:    [[I260:%.*]] = load double, ptr [[I256]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I261:%.*]] = fsub double [[I258]], [[I260]]
; CHECK-NEXT:    [[I262:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 56
; CHECK-NEXT:    [[I263:%.*]] = load double, ptr [[I262]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I264:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 8
; CHECK-NEXT:    [[I265:%.*]] = load double, ptr [[I264]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I266:%.*]] = fsub double [[I263]], [[I265]]
; CHECK-NEXT:    [[I267:%.*]] = fneg double [[I259]]
; CHECK-NEXT:    [[I268:%.*]] = fdiv double [[I267]], [[I261]]
; CHECK-NEXT:    [[I269:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I266]], double [[I263]])
; CHECK-NEXT:    [[I270:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 64
; CHECK-NEXT:    [[I271:%.*]] = load double, ptr [[I270]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I272:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 16
; CHECK-NEXT:    [[I273:%.*]] = load double, ptr [[I272]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I274:%.*]] = fsub double [[I271]], [[I273]]
; CHECK-NEXT:    [[I275:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I274]], double [[I271]])
; CHECK-NEXT:    [[I276:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 72
; CHECK-NEXT:    [[I277:%.*]] = load double, ptr [[I276]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I278:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 24
; CHECK-NEXT:    [[I279:%.*]] = load double, ptr [[I278]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I280:%.*]] = fsub double [[I277]], [[I279]]
; CHECK-NEXT:    [[I281:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I280]], double [[I277]])
; CHECK-NEXT:    [[I282:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 80
; CHECK-NEXT:    [[I283:%.*]] = load double, ptr [[I282]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I284:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 32
; CHECK-NEXT:    [[I285:%.*]] = load double, ptr [[I284]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I286:%.*]] = fsub double [[I283]], [[I285]]
; CHECK-NEXT:    [[I287:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I286]], double [[I283]])
; CHECK-NEXT:    [[I288:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 88
; CHECK-NEXT:    [[I289:%.*]] = load double, ptr [[I288]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I290:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 40
; CHECK-NEXT:    [[I291:%.*]] = load double, ptr [[I290]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I292:%.*]] = fsub double [[I289]], [[I291]]
; CHECK-NEXT:    [[I293:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I292]], double [[I289]])
; CHECK-NEXT:    [[I294]] = tail call double @llvm.fmuladd.f64(double [[I269]], double [[I171385]], double [[I164387]])
; CHECK-NEXT:    [[I295]] = tail call double @llvm.fmuladd.f64(double [[I275]], double [[I171385]], double [[I163388]])
; CHECK-NEXT:    [[I296]] = tail call double @llvm.fmuladd.f64(double [[I281]], double [[I171385]], double [[I162389]])
; CHECK-NEXT:    [[I297]] = tail call double @llvm.fmuladd.f64(double [[I287]], double [[I171385]], double [[I161390]])
; CHECK-NEXT:    [[I298]] = tail call double @llvm.fmuladd.f64(double [[I293]], double [[I171385]], double [[I160391]])
; CHECK-NEXT:    [[I299]] = add nuw nsw i32 [[I165386]], 1
; CHECK-NEXT:    [[I300:%.*]] = load i32, ptr [[I142375]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I301:%.*]] = icmp slt i32 [[I299]], [[I300]]
; CHECK-NEXT:    br i1 [[I301]], label [[BB159]], label [[BB302]]
; CHECK:       bb302:
; CHECK-NEXT:    [[I28146468]] = phi ptr [ [[I28146]], [[BB139]] ], [ [[I28146467]], [[BB255]] ]
; CHECK-NEXT:    [[I25142465]] = phi ptr [ [[I25142]], [[BB139]] ], [ [[I25142464]], [[BB255]] ]
; CHECK-NEXT:    [[I24138462]] = phi ptr [ [[I24138]], [[BB139]] ], [ [[I24138461]], [[BB255]] ]
; CHECK-NEXT:    [[I23134459]] = phi ptr [ [[I23134]], [[BB139]] ], [ [[I23134458]], [[BB255]] ]
; CHECK-NEXT:    [[I22130456]] = phi ptr [ [[I22130]], [[BB139]] ], [ [[I22130455]], [[BB255]] ]
; CHECK-NEXT:    [[I21126453]] = phi ptr [ [[I21126]], [[BB139]] ], [ [[I21126452]], [[BB255]] ]
; CHECK-NEXT:    [[I6121450]] = phi i32 [ [[I6121]], [[BB139]] ], [ [[I6121449]], [[BB255]] ]
; CHECK-NEXT:    [[I32119447]] = phi i64 [ [[I32119]], [[BB139]] ], [ [[I32119446]], [[BB255]] ]
; CHECK-NEXT:    [[I41118444:%.*]] = phi i32 [ [[I41118]], [[BB139]] ], [ [[I41118443]], [[BB255]] ]
; CHECK-NEXT:    [[I27114439]] = phi ptr [ [[I27114]], [[BB139]] ], [ [[I27114438]], [[BB255]] ]
; CHECK-NEXT:    [[I26110436]] = phi ptr [ [[I26110]], [[BB139]] ], [ [[I26110435]], [[BB255]] ]
; CHECK-NEXT:    [[I20106433]] = phi ptr [ [[I20106]], [[BB139]] ], [ [[I20106432]], [[BB255]] ]
; CHECK-NEXT:    [[I19102430]] = phi ptr [ [[I19102]], [[BB139]] ], [ [[I19102429]], [[BB255]] ]
; CHECK-NEXT:    [[I497427]] = phi ptr [ [[I497]], [[BB139]] ], [ [[I497426]], [[BB255]] ]
; CHECK-NEXT:    [[I1393424]] = phi i32 [ [[I1393]], [[BB139]] ], [ [[I1393423]], [[BB255]] ]
; CHECK-NEXT:    [[I1889421]] = phi i32 [ [[I1889]], [[BB139]] ], [ [[I1889420]], [[BB255]] ]
; CHECK-NEXT:    [[I82418]] = phi i32 [ [[I82]], [[BB139]] ], [ [[I82417]], [[BB255]] ]
; CHECK-NEXT:    [[I569415]] = phi i32 [ [[I569]], [[BB139]] ], [ [[I569414]], [[BB255]] ]
; CHECK-NEXT:    [[I3066412]] = phi i32 [ [[I3066]], [[BB139]] ], [ [[I3066411]], [[BB255]] ]
; CHECK-NEXT:    [[I3163409]] = phi i32 [ [[I3163]], [[BB139]] ], [ [[I3163408]], [[BB255]] ]
; CHECK-NEXT:    [[I4062406:%.*]] = phi i64 [ [[I4062]], [[BB139]] ], [ [[I4062405]], [[BB255]] ]
; CHECK-NEXT:    [[I1047393]] = phi i32 [ [[I1047]], [[BB139]] ], [ [[I1047392]], [[BB255]] ]
; CHECK-NEXT:    [[I303:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I294]], [[BB255]] ]
; CHECK-NEXT:    [[I304:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I295]], [[BB255]] ]
; CHECK-NEXT:    [[I305:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I296]], [[BB255]] ]
; CHECK-NEXT:    [[I306:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I297]], [[BB255]] ]
; CHECK-NEXT:    [[I307:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I298]], [[BB255]] ]
; CHECK-NEXT:    [[I308:%.*]] = fcmp ogt double [[I303]], -1.000000e+00
; CHECK-NEXT:    [[I309:%.*]] = select i1 [[I308]], double [[I303]], double -1.000000e+00
; CHECK-NEXT:    [[I310:%.*]] = fcmp ogt double [[I304]], [[I309]]
; CHECK-NEXT:    [[I311:%.*]] = select i1 [[I310]], double [[I304]], double [[I309]]
; CHECK-NEXT:    [[I312:%.*]] = fcmp ogt double [[I305]], [[I311]]
; CHECK-NEXT:    [[I313:%.*]] = select i1 [[I312]], double [[I305]], double [[I311]]
; CHECK-NEXT:    [[I314:%.*]] = fcmp ogt double [[I306]], [[I313]]
; CHECK-NEXT:    [[I315:%.*]] = select i1 [[I314]], double [[I306]], double [[I313]]
; CHECK-NEXT:    [[I316:%.*]] = select i1 [[I310]], i64 2, i64 1
; CHECK-NEXT:    [[I317:%.*]] = fcmp ogt double [[I307]], [[I315]]
; CHECK-NEXT:    [[I318:%.*]] = select i1 [[I312]], i64 3, i64 [[I316]]
; CHECK-NEXT:    [[I319:%.*]] = select i1 [[I314]], i64 4, i64 [[I318]]
; CHECK-NEXT:    [[I320:%.*]] = select i1 [[I317]], i64 5, i64 [[I319]]
; CHECK-NEXT:    [[I321:%.*]] = getelementptr inbounds i64, ptr [[ARG3]], i64 [[I4062406]]
; CHECK-NEXT:    store i64 [[I320]], ptr [[I321]], align 8, !tbaa [[TBAA49]]
; CHECK-NEXT:    [[I322:%.*]] = add nsw i32 [[I1889421]], [[I41118444]]
; CHECK-NEXT:    [[I323]] = sext i32 [[I322]] to i64
; CHECK-NEXT:    [[I324:%.*]] = icmp ugt i64 [[I323]], [[I32119447]]
; CHECK-NEXT:    br i1 [[I324]], label [[BB325]], label [[BB39]]
; CHECK:       bb325:
; CHECK-NEXT:    [[I28147:%.*]] = phi ptr [ [[I28147_BB29474]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325:%.*]] ], [ [[I28147_BB29474]], [[BB35]] ], [ [[I28146468]], [[BB302]] ]
; CHECK-NEXT:    [[I25143:%.*]] = phi ptr [ [[I25143_BB29475]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I25143_BB29475]], [[BB35]] ], [ [[I25142465]], [[BB302]] ]
; CHECK-NEXT:    [[I24139:%.*]] = phi ptr [ [[I24139_BB29476]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I24139_BB29476]], [[BB35]] ], [ [[I24138462]], [[BB302]] ]
; CHECK-NEXT:    [[I23135:%.*]] = phi ptr [ [[I23135_BB29477]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I23135_BB29477]], [[BB35]] ], [ [[I23134459]], [[BB302]] ]
; CHECK-NEXT:    [[I22131:%.*]] = phi ptr [ [[I22131_BB29478]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I22131_BB29478]], [[BB35]] ], [ [[I22130456]], [[BB302]] ]
; CHECK-NEXT:    [[I21127:%.*]] = phi ptr [ [[I21127_BB29479]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I21127_BB29479]], [[BB35]] ], [ [[I21126453]], [[BB302]] ]
; CHECK-NEXT:    [[I6122:%.*]] = phi i32 [ [[I6122_BB29480]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I6122_BB29480]], [[BB35]] ], [ [[I6121450]], [[BB302]] ]
; CHECK-NEXT:    [[I27115:%.*]] = phi ptr [ [[I27115_BB29481]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I27115_BB29481]], [[BB35]] ], [ [[I27114439]], [[BB302]] ]
; CHECK-NEXT:    [[I26111:%.*]] = phi ptr [ [[I26111_BB29482]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I26111_BB29482]], [[BB35]] ], [ [[I26110436]], [[BB302]] ]
; CHECK-NEXT:    [[I20107:%.*]] = phi ptr [ [[I20107_BB29483]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I20107_BB29483]], [[BB35]] ], [ [[I20106433]], [[BB302]] ]
; CHECK-NEXT:    [[I19103:%.*]] = phi ptr [ [[I19103_BB29484]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I19103_BB29484]], [[BB35]] ], [ [[I19102430]], [[BB302]] ]
; CHECK-NEXT:    [[I498:%.*]] = phi ptr [ [[I498_BB29485]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I498_BB29485]], [[BB35]] ], [ [[I497427]], [[BB302]] ]
; CHECK-NEXT:    [[I1395:%.*]] = phi i32 [ [[I1395_BB29486]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1395_BB29486]], [[BB35]] ], [ [[I1393424]], [[BB302]] ]
; CHECK-NEXT:    [[I1890:%.*]] = phi i32 [ [[I1890_BB29487]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1890_BB29487]], [[BB35]] ], [ [[I1889421]], [[BB302]] ]
; CHECK-NEXT:    [[I84:%.*]] = phi i32 [ [[I84_BB29488]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I84_BB29488]], [[BB35]] ], [ [[I82418]], [[BB302]] ]
; CHECK-NEXT:    [[I570:%.*]] = phi i32 [ [[I570_BB29489]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I570_BB29489]], [[BB35]] ], [ [[I569415]], [[BB302]] ]
; CHECK-NEXT:    [[I3067:%.*]] = phi i32 [ [[I328_BB29491]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I328_BB29491]], [[BB35]] ], [ [[I3066412]], [[BB302]] ]
; CHECK-NEXT:    [[I3164:%.*]] = phi i32 [ [[I326_BB29492]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I326_BB29492]], [[BB35]] ], [ [[I3163409]], [[BB302]] ]
; CHECK-NEXT:    [[I1048:%.*]] = phi i32 [ [[I1048_BB29490]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1048_BB29490]], [[BB35]] ], [ [[I1047393]], [[BB302]] ]
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I326:%.*]] = add nsw i32 [[I3164]], [[I1395]]
; CHECK-NEXT:    [[I327:%.*]] = add nsw i32 [[I3067]], [[I1395]]
; CHECK-NEXT:    [[I328:%.*]] = tail call i32 @llvm.smin.i32(i32 [[I327]], i32 [[I6122]])
; CHECK-NEXT:    [[I329:%.*]] = icmp slt i32 [[I326]], [[I570]]
; CHECK-NEXT:    br i1 [[I329]], label [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]], label [[BB330:%.*]]
; CHECK:       bb29.from.bb29.from.bb29.from.bb325:
; CHECK-NEXT:    [[I326_BB29492]] = phi i32 [ [[I326]], [[BB325]] ]
; CHECK-NEXT:    [[I328_BB29491]] = phi i32 [ [[I328]], [[BB325]] ]
; CHECK-NEXT:    [[I1048_BB29490]] = phi i32 [ [[I1048]], [[BB325]] ]
; CHECK-NEXT:    [[I570_BB29489]] = phi i32 [ [[I570]], [[BB325]] ]
; CHECK-NEXT:    [[I84_BB29488]] = phi i32 [ [[I84]], [[BB325]] ]
; CHECK-NEXT:    [[I1890_BB29487]] = phi i32 [ [[I1890]], [[BB325]] ]
; CHECK-NEXT:    [[I1395_BB29486]] = phi i32 [ [[I1395]], [[BB325]] ]
; CHECK-NEXT:    [[I498_BB29485]] = phi ptr [ [[I498]], [[BB325]] ]
; CHECK-NEXT:    [[I19103_BB29484]] = phi ptr [ [[I19103]], [[BB325]] ]
; CHECK-NEXT:    [[I20107_BB29483]] = phi ptr [ [[I20107]], [[BB325]] ]
; CHECK-NEXT:    [[I26111_BB29482]] = phi ptr [ [[I26111]], [[BB325]] ]
; CHECK-NEXT:    [[I27115_BB29481]] = phi ptr [ [[I27115]], [[BB325]] ]
; CHECK-NEXT:    [[I6122_BB29480]] = phi i32 [ [[I6122]], [[BB325]] ]
; CHECK-NEXT:    [[I21127_BB29479]] = phi ptr [ [[I21127]], [[BB325]] ]
; CHECK-NEXT:    [[I22131_BB29478]] = phi ptr [ [[I22131]], [[BB325]] ]
; CHECK-NEXT:    [[I23135_BB29477]] = phi ptr [ [[I23135]], [[BB325]] ]
; CHECK-NEXT:    [[I24139_BB29476]] = phi ptr [ [[I24139]], [[BB325]] ]
; CHECK-NEXT:    [[I25143_BB29475]] = phi ptr [ [[I25143]], [[BB325]] ]
; CHECK-NEXT:    [[I28147_BB29474]] = phi ptr [ [[I28147]], [[BB325]] ]
; CHECK-NEXT:    [[I32]] = zext i32 [[I328_BB29491]] to i64
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I33:%.*]] = load i32, ptr [[I498_BB29485]], align 8, !tbaa [[TBAA19]]
; CHECK-NEXT:    [[I34:%.*]] = icmp sgt i32 [[I33]], 0
; CHECK-NEXT:    br i1 [[I34]], label [[BB35]], label [[BB325]]
; CHECK:       bb330:
; CHECK-NEXT:    ret void
; CHECK:       ThreadExit323:
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
;
;
; CHECK-LABEL: define weak_odr protected void @__omp_offloading_run_event_based_simulation_contd_2(
; CHECK-SAME: ptr noalias noundef [[ARG:%.*]], ptr noundef nonnull align 8 dereferenceable(64) [[ARG1:%.*]], ptr noundef nonnull align 8 dereferenceable(112) [[ARG2:%.*]], ptr noundef [[ARG3:%.*]]) local_unnamed_addr #[[ATTR3]] {
; CHECK-NEXT:  ContDispatchBB:
; CHECK-NEXT:    [[TMP0:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
; CHECK-NEXT:    [[TMP1:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
; CHECK-NEXT:    [[TMP2:%.*]] = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
; CHECK-NEXT:    [[TMP3:%.*]] = mul i32 [[TMP1]], [[TMP2]]
; CHECK-NEXT:    [[GTID925:%.*]] = add i32 [[TMP0]], [[TMP3]]
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP5:%.*]] = load ptr, ptr [[TMP4]], align 8
; CHECK-NEXT:    [[CONTCOUNT_IN_PTR926:%.*]] = getelementptr inbounds i32, ptr [[TMP5]], i32 3
; CHECK-NEXT:    [[CONTCOUNT_IN927:%.*]] = load i32, ptr [[CONTCOUNT_IN_PTR926]], align 4
; CHECK-NEXT:    [[MASKTHREAD928:%.*]] = icmp ult i32 [[GTID925]], [[CONTCOUNT_IN927]]
; CHECK-NEXT:    br i1 [[MASKTHREAD928]], label [[CACHEREMAT2:%.*]], label [[THREADEXIT912:%.*]]
; CHECK:       bb35:
; CHECK-NEXT:    [[I36:%.*]] = add nsw i32 [[I326_BB29492:%.*]], [[I84_BB29488:%.*]]
; CHECK-NEXT:    [[I37:%.*]] = sext i32 [[I36]] to i64
; CHECK-NEXT:    [[I38:%.*]] = icmp ugt i64 [[I37]], [[I32:%.*]]
; CHECK-NEXT:    br i1 [[I38]], label [[BB325:%.*]], label [[BB39:%.*]]
; CHECK:       bb39:
; CHECK-NEXT:    [[I28148:%.*]] = phi ptr [ [[I28147_BB29474:%.*]], [[BB35:%.*]] ], [ [[I28146468:%.*]], [[BB302:%.*]] ]
; CHECK-NEXT:    [[I25144:%.*]] = phi ptr [ [[I25143_BB29475:%.*]], [[BB35]] ], [ [[I25142465:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I24140:%.*]] = phi ptr [ [[I24139_BB29476:%.*]], [[BB35]] ], [ [[I24138462:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I23136:%.*]] = phi ptr [ [[I23135_BB29477:%.*]], [[BB35]] ], [ [[I23134459:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I22132:%.*]] = phi ptr [ [[I22131_BB29478:%.*]], [[BB35]] ], [ [[I22130456:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I21128:%.*]] = phi ptr [ [[I21127_BB29479:%.*]], [[BB35]] ], [ [[I21126453:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I6123:%.*]] = phi i32 [ [[I6122_BB29480:%.*]], [[BB35]] ], [ [[I6121450:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I32120:%.*]] = phi i64 [ [[I32]], [[BB35]] ], [ [[I32119447:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I27116:%.*]] = phi ptr [ [[I27115_BB29481:%.*]], [[BB35]] ], [ [[I27114439:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I26112:%.*]] = phi ptr [ [[I26111_BB29482:%.*]], [[BB35]] ], [ [[I26110436:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I20108:%.*]] = phi ptr [ [[I20107_BB29483:%.*]], [[BB35]] ], [ [[I20106433:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I19104:%.*]] = phi ptr [ [[I19103_BB29484:%.*]], [[BB35]] ], [ [[I19102430:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I499:%.*]] = phi ptr [ [[I498_BB29485:%.*]], [[BB35]] ], [ [[I497427:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1396:%.*]] = phi i32 [ [[I1395_BB29486:%.*]], [[BB35]] ], [ [[I1393424:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1891:%.*]] = phi i32 [ [[I1890_BB29487:%.*]], [[BB35]] ], [ [[I1889421:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I86:%.*]] = phi i32 [ [[I84_BB29488]], [[BB35]] ], [ [[I82418:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I571:%.*]] = phi i32 [ [[I570_BB29489:%.*]], [[BB35]] ], [ [[I569415:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3068:%.*]] = phi i32 [ [[I328_BB29491:%.*]], [[BB35]] ], [ [[I3066412:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I3165:%.*]] = phi i32 [ [[I326_BB29492]], [[BB35]] ], [ [[I3163409:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I1049:%.*]] = phi i32 [ [[I1048_BB29490:%.*]], [[BB35]] ], [ [[I1047393:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I40:%.*]] = phi i64 [ [[I37]], [[BB35]] ], [ [[I323:%.*]], [[BB302]] ]
; CHECK-NEXT:    [[I41:%.*]] = trunc i64 [[I40]] to i32
; CHECK-NEXT:    [[I42:%.*]] = shl nsw i32 [[I41]], 1
; CHECK-NEXT:    [[I43:%.*]] = sext i32 [[I42]] to i64
; CHECK-NEXT:    [[I44:%.*]] = and i64 [[I43]], 9223372036854775806
; CHECK-NEXT:    [[I45:%.*]] = icmp eq i64 [[I44]], 0
; CHECK-NEXT:    br i1 [[I45]], label [[BB69:%.*]], label [[BB46:%.*]]
; CHECK:       bb46:
; CHECK-NEXT:    [[I47:%.*]] = phi i64 [ 0, [[BB39]] ], [ [[I58:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I48:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I57:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I49:%.*]] = phi i64 [ 1, [[BB39]] ], [ [[I60:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I50:%.*]] = phi i64 [ 2806196910506780709, [[BB39]] ], [ [[I61:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I51:%.*]] = phi i64 [ [[I44]], [[BB39]] ], [ [[I62:%.*]], [[BB46]] ]
; CHECK-NEXT:    [[I52:%.*]] = and i64 [[I51]], 1
; CHECK-NEXT:    [[I53:%.*]] = icmp eq i64 [[I52]], 0
; CHECK-NEXT:    [[I54:%.*]] = mul i64 [[I50]], [[I47]]
; CHECK-NEXT:    [[I55:%.*]] = add i64 [[I54]], [[I49]]
; CHECK-NEXT:    [[I56:%.*]] = select i1 [[I53]], i64 1, i64 [[I50]]
; CHECK-NEXT:    [[I57]] = mul i64 [[I56]], [[I48]]
; CHECK-NEXT:    [[I58]] = select i1 [[I53]], i64 [[I47]], i64 [[I55]]
; CHECK-NEXT:    [[I59:%.*]] = add i64 [[I50]], 1
; CHECK-NEXT:    [[I60]] = mul i64 [[I59]], [[I49]]
; CHECK-NEXT:    [[I61]] = mul i64 [[I50]], [[I50]]
; CHECK-NEXT:    [[I62]] = lshr i64 [[I51]], 1
; CHECK-NEXT:    [[I63:%.*]] = icmp ult i64 [[I51]], 2
; CHECK-NEXT:    br i1 [[I63]], label [[BB64:%.*]], label [[BB46]]
; CHECK:       bb64:
; CHECK-NEXT:    [[I67:%.*]] = mul i64 [[I57]], 1070
; CHECK-NEXT:    [[I68:%.*]] = add i64 [[I67]], [[I58]]
; CHECK-NEXT:    br label [[BB69]]
; CHECK:       bb69:
; CHECK-NEXT:    [[I70:%.*]] = phi i64 [ [[I68]], [[BB64]] ], [ 1070, [[BB39]] ]
; CHECK-NEXT:    [[I71:%.*]] = mul i64 [[I70]], 2806196910506780709
; CHECK-NEXT:    [[I72:%.*]] = add i64 [[I71]], 1
; CHECK-NEXT:    [[I73:%.*]] = and i64 [[I72]], 9223372036854775807
; CHECK-NEXT:    [[I74:%.*]] = uitofp i64 [[I73]] to double
; CHECK-NEXT:    [[I75:%.*]] = fmul double [[I74]], 0x3C00000000000000
; CHECK-NEXT:    [[I76:%.*]] = mul i64 [[I72]], 2806196910506780709
; CHECK-NEXT:    [[I77:%.*]] = add i64 [[I76]], 1
; CHECK-NEXT:    [[I78:%.*]] = and i64 [[I77]], 9223372036854775807
; CHECK-NEXT:    [[I79:%.*]] = uitofp i64 [[I78]] to double
; CHECK-NEXT:    [[I80:%.*]] = fmul double [[I79]], 0x3C00000000000000
; CHECK-NEXT:    [[I81:%.*]] = fcmp uge double [[I80]], 5.200000e-02
; CHECK-NEXT:    br i1 [[I81]], label [[BB82:%.*]], label [[BB103:%.*]]
; CHECK:       bb82:
; CHECK-NEXT:    [[I83:%.*]] = fcmp uge double [[I80]], 3.270000e-01
; CHECK-NEXT:    br i1 [[I83]], label [[BB84:%.*]], label [[BB103]]
; CHECK:       bb84:
; CHECK-NEXT:    [[I85:%.*]] = fcmp uge double [[I80]], 4.610000e-01
; CHECK-NEXT:    br i1 [[I85]], label [[BB86:%.*]], label [[BB103]]
; CHECK:       bb86:
; CHECK-NEXT:    [[I87:%.*]] = fcmp uge double [[I80]], 0x3FE3AE147AE147AF
; CHECK-NEXT:    br i1 [[I87]], label [[BB88:%.*]], label [[BB103]]
; CHECK:       bb88:
; CHECK-NEXT:    [[I89:%.*]] = fcmp uge double [[I80]], 6.790000e-01
; CHECK-NEXT:    br i1 [[I89]], label [[BB90:%.*]], label [[BB103]]
; CHECK:       bb90:
; CHECK-NEXT:    [[I91:%.*]] = fcmp uge double [[I80]], 0x3FE7D70A3D70A3D8
; CHECK-NEXT:    br i1 [[I91]], label [[BB92:%.*]], label [[BB103]]
; CHECK:       bb92:
; CHECK-NEXT:    [[I93:%.*]] = fcmp uge double [[I80]], 8.000000e-01
; CHECK-NEXT:    br i1 [[I93]], label [[BB94:%.*]], label [[BB103]]
; CHECK:       bb94:
; CHECK-NEXT:    [[I95:%.*]] = fcmp uge double [[I80]], 8.080000e-01
; CHECK-NEXT:    br i1 [[I95]], label [[BB96:%.*]], label [[BB103]]
; CHECK:       bb96:
; CHECK-NEXT:    [[I97:%.*]] = fcmp uge double [[I80]], 0x3FEA5604189374BD
; CHECK-NEXT:    br i1 [[I97]], label [[BB98:%.*]], label [[BB103]]
; CHECK:       bb98:
; CHECK-NEXT:    [[I99:%.*]] = fcmp uge double [[I80]], 0x3FEB22D0E560418A
; CHECK-NEXT:    br i1 [[I99]], label [[BB100:%.*]], label [[BB103]]
; CHECK:       bb100:
; CHECK-NEXT:    [[I101:%.*]] = fcmp uge double [[I80]], 0x3FEB8D4FDF3B645B
; CHECK-NEXT:    br i1 [[I101]], label [[BB103_FROM_BB103_FROM_BB103_FROM_BB102:%.*]], label [[BB103]]
; CHECK:       bb103.from.bb103.from.bb103.from.bb102:
; CHECK-NEXT:    br label [[BB103]]
; CHECK:       bb103:
; CHECK-NEXT:    [[I104:%.*]] = phi i32 [ 0, [[BB103_FROM_BB103_FROM_BB103_FROM_BB102]] ], [ 1, [[BB69]] ], [ 2, [[BB82]] ], [ 3, [[BB84]] ], [ 4, [[BB86]] ], [ 5, [[BB88]] ], [ 6, [[BB90]] ], [ 7, [[BB92]] ], [ 8, [[BB94]] ], [ 9, [[BB96]] ], [ 10, [[BB98]] ], [ 11, [[BB100]] ]
; CHECK-NEXT:    [[I105:%.*]] = load i64, ptr [[I19104]], align 8, !tbaa [[TBAA27]]
; CHECK-NEXT:    [[I106:%.*]] = load i64, ptr [[I20108]], align 8, !tbaa [[TBAA28]]
; CHECK-NEXT:    [[I107:%.*]] = load ptr, ptr [[ARG2]], align 8, !tbaa [[TBAA29]]
; CHECK-NEXT:    [[I108:%.*]] = load ptr, ptr [[I21128]], align 8, !tbaa [[TBAA31]]
; CHECK-NEXT:    [[I109:%.*]] = load ptr, ptr [[I22132]], align 8, !tbaa [[TBAA32]]
; CHECK-NEXT:    [[I110:%.*]] = load ptr, ptr [[I23136]], align 8, !tbaa [[TBAA33]]
; CHECK-NEXT:    [[I111:%.*]] = load ptr, ptr [[I24140]], align 8, !tbaa [[TBAA34]]
; CHECK-NEXT:    [[I112:%.*]] = load ptr, ptr [[I25144]], align 8, !tbaa [[TBAA35]]
; CHECK-NEXT:    [[I113:%.*]] = load i32, ptr [[I26112]], align 8, !tbaa [[TBAA36]]
; CHECK-NEXT:    [[I114:%.*]] = load i32, ptr [[I27116]], align 4, !tbaa [[TBAA37]]
; CHECK-NEXT:    [[I115:%.*]] = load i32, ptr [[I28148]], align 4, !tbaa [[TBAA38]]
; CHECK-NEXT:    switch i32 [[I113]], label [[BB139:%.*]] [
; CHECK-NEXT:      i32 0, label [[BB116:%.*]]
; CHECK-NEXT:      i32 2, label [[CACHESTORE0:%.*]]
; CHECK-NEXT:    ]
; CHECK:       bb116:
; CHECK-NEXT:    [[I117:%.*]] = mul nsw i64 [[I106]], [[I105]]
; CHECK-NEXT:    [[I118:%.*]] = icmp sgt i64 [[I117]], 2
; CHECK-NEXT:    br i1 [[I118]], label [[BB119:%.*]], label [[BB139]]
; CHECK:       bb119:
; CHECK-NEXT:    [[I120:%.*]] = add nsw i64 [[I117]], -1
; CHECK-NEXT:    br label [[BB121:%.*]]
; CHECK:       bb121:
; CHECK-NEXT:    [[I122:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I132:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I123:%.*]] = phi i64 [ 0, [[BB119]] ], [ [[I131:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I124:%.*]] = phi i64 [ [[I120]], [[BB119]] ], [ [[I130:%.*]], [[BB121]] ]
; CHECK-NEXT:    [[I125:%.*]] = lshr i64 [[I122]], 1
; CHECK-NEXT:    [[I126:%.*]] = add nuw nsw i64 [[I125]], [[I123]]
; CHECK-NEXT:    [[I127:%.*]] = getelementptr inbounds double, ptr [[I109]], i64 [[I126]]
; CHECK-NEXT:    [[I128:%.*]] = load double, ptr [[I127]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    [[I129:%.*]] = fcmp ogt double [[I128]], [[I75]]
; CHECK-NEXT:    [[I130]] = select i1 [[I129]], i64 [[I126]], i64 [[I124]]
; CHECK-NEXT:    [[I131]] = select i1 [[I129]], i64 [[I123]], i64 [[I126]]
; CHECK-NEXT:    [[I132]] = sub nsw i64 [[I130]], [[I131]]
; CHECK-NEXT:    [[I133:%.*]] = icmp sgt i64 [[I132]], 1
; CHECK-NEXT:    br i1 [[I133]], label [[BB121]], label [[BB139]]
; CHECK:       CacheStore0:
; CHECK-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP7:%.*]] = load ptr, ptr [[TMP6]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR:%.*]] = getelementptr inbounds i32, ptr [[TMP7]], i32 0
; CHECK-NEXT:    [[CACHEIDX:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP8:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_0]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP9:%.*]] = load ptr, ptr [[TMP8]], align 8
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds ptr, ptr [[TMP9]], i32 0
; CHECK-NEXT:    [[CACHE_OUT_PTR:%.*]] = load ptr, ptr [[TMP10]], align 8
; CHECK-NEXT:    [[CACHECELL:%.*]] = getelementptr inbounds [[CACHE_CELL0:%.*]], ptr [[CACHE_OUT_PTR]], i32 [[CACHEIDX]]
; CHECK-NEXT:    [[I10_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 0
; CHECK-NEXT:    store i32 [[I1049]], ptr [[I10_CACHEIDX]], align 4
; CHECK-NEXT:    [[I70_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 1
; CHECK-NEXT:    store i64 [[I70]], ptr [[I70_CACHEIDX]], align 8
; CHECK-NEXT:    [[I115_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I115]], ptr [[I115_CACHEIDX]], align 4
; CHECK-NEXT:    [[I114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 3
; CHECK-NEXT:    store i32 [[I114]], ptr [[I114_CACHEIDX]], align 4
; CHECK-NEXT:    [[I113_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 4
; CHECK-NEXT:    store i32 2, ptr [[I113_CACHEIDX]], align 4
; CHECK-NEXT:    [[I112_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 5
; CHECK-NEXT:    store ptr [[I112]], ptr [[I112_CACHEIDX]], align 8
; CHECK-NEXT:    [[I111_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 6
; CHECK-NEXT:    store ptr [[I111]], ptr [[I111_CACHEIDX]], align 8
; CHECK-NEXT:    [[I110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 7
; CHECK-NEXT:    store ptr [[I110]], ptr [[I110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I108_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I108]], ptr [[I108_CACHEIDX]], align 8
; CHECK-NEXT:    [[I107_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 9
; CHECK-NEXT:    store ptr [[I107]], ptr [[I107_CACHEIDX]], align 8
; CHECK-NEXT:    [[I106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 10
; CHECK-NEXT:    store i64 [[I106]], ptr [[I106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I105_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 11
; CHECK-NEXT:    store i64 [[I105]], ptr [[I105_CACHEIDX]], align 8
; CHECK-NEXT:    [[I104_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 12
; CHECK-NEXT:    store i32 [[I104]], ptr [[I104_CACHEIDX]], align 4
; CHECK-NEXT:    [[I40_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 13
; CHECK-NEXT:    store i64 [[I40]], ptr [[I40_CACHEIDX]], align 8
; CHECK-NEXT:    [[I31_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I3165]], ptr [[I31_CACHEIDX]], align 4
; CHECK-NEXT:    [[I30_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 15
; CHECK-NEXT:    store i32 [[I3068]], ptr [[I30_CACHEIDX]], align 4
; CHECK-NEXT:    [[I5_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 16
; CHECK-NEXT:    store i32 [[I571]], ptr [[I5_CACHEIDX]], align 4
; CHECK-NEXT:    [[I_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 17
; CHECK-NEXT:    store i32 [[I86]], ptr [[I_CACHEIDX]], align 4
; CHECK-NEXT:    [[I18_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL0]], ptr [[CACHECELL]], i32 0, i32 18
; CHECK-NEXT:    store i32 [[I1891]], ptr [[I18_CACHEIDX]], align 4
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb139:
; CHECK-NEXT:    [[I28146:%.*]] = phi ptr [ [[I28148]], [[BB103]] ], [ [[I28148]], [[BB116]] ], [ [[I28148]], [[BB121]] ]
; CHECK-NEXT:    [[I25142:%.*]] = phi ptr [ [[I25144]], [[BB103]] ], [ [[I25144]], [[BB116]] ], [ [[I25144]], [[BB121]] ]
; CHECK-NEXT:    [[I24138:%.*]] = phi ptr [ [[I24140]], [[BB103]] ], [ [[I24140]], [[BB116]] ], [ [[I24140]], [[BB121]] ]
; CHECK-NEXT:    [[I23134:%.*]] = phi ptr [ [[I23136]], [[BB103]] ], [ [[I23136]], [[BB116]] ], [ [[I23136]], [[BB121]] ]
; CHECK-NEXT:    [[I22130:%.*]] = phi ptr [ [[I22132]], [[BB103]] ], [ [[I22132]], [[BB116]] ], [ [[I22132]], [[BB121]] ]
; CHECK-NEXT:    [[I21126:%.*]] = phi ptr [ [[I21128]], [[BB103]] ], [ [[I21128]], [[BB116]] ], [ [[I21128]], [[BB121]] ]
; CHECK-NEXT:    [[I6121:%.*]] = phi i32 [ [[I6123]], [[BB103]] ], [ [[I6123]], [[BB116]] ], [ [[I6123]], [[BB121]] ]
; CHECK-NEXT:    [[I32119:%.*]] = phi i64 [ [[I32120]], [[BB103]] ], [ [[I32120]], [[BB116]] ], [ [[I32120]], [[BB121]] ]
; CHECK-NEXT:    [[I41118:%.*]] = phi i32 [ [[I41]], [[BB103]] ], [ [[I41]], [[BB116]] ], [ [[I41]], [[BB121]] ]
; CHECK-NEXT:    [[I75117:%.*]] = phi double [ [[I75]], [[BB103]] ], [ [[I75]], [[BB116]] ], [ [[I75]], [[BB121]] ]
; CHECK-NEXT:    [[I27114:%.*]] = phi ptr [ [[I27116]], [[BB103]] ], [ [[I27116]], [[BB116]] ], [ [[I27116]], [[BB121]] ]
; CHECK-NEXT:    [[I26110:%.*]] = phi ptr [ [[I26112]], [[BB103]] ], [ [[I26112]], [[BB116]] ], [ [[I26112]], [[BB121]] ]
; CHECK-NEXT:    [[I20106:%.*]] = phi ptr [ [[I20108]], [[BB103]] ], [ [[I20108]], [[BB116]] ], [ [[I20108]], [[BB121]] ]
; CHECK-NEXT:    [[I19102:%.*]] = phi ptr [ [[I19104]], [[BB103]] ], [ [[I19104]], [[BB116]] ], [ [[I19104]], [[BB121]] ]
; CHECK-NEXT:    [[I497:%.*]] = phi ptr [ [[I499]], [[BB103]] ], [ [[I499]], [[BB116]] ], [ [[I499]], [[BB121]] ]
; CHECK-NEXT:    [[I1393:%.*]] = phi i32 [ [[I1396]], [[BB103]] ], [ [[I1396]], [[BB116]] ], [ [[I1396]], [[BB121]] ]
; CHECK-NEXT:    [[I1889:%.*]] = phi i32 [ [[I1891]], [[BB103]] ], [ [[I1891]], [[BB116]] ], [ [[I1891]], [[BB121]] ]
; CHECK-NEXT:    [[I82:%.*]] = phi i32 [ [[I86]], [[BB103]] ], [ [[I86]], [[BB116]] ], [ [[I86]], [[BB121]] ]
; CHECK-NEXT:    [[I569:%.*]] = phi i32 [ [[I571]], [[BB103]] ], [ [[I571]], [[BB116]] ], [ [[I571]], [[BB121]] ]
; CHECK-NEXT:    [[I3066:%.*]] = phi i32 [ [[I3068]], [[BB103]] ], [ [[I3068]], [[BB116]] ], [ [[I3068]], [[BB121]] ]
; CHECK-NEXT:    [[I3163:%.*]] = phi i32 [ [[I3165]], [[BB103]] ], [ [[I3165]], [[BB116]] ], [ [[I3165]], [[BB121]] ]
; CHECK-NEXT:    [[I4062:%.*]] = phi i64 [ [[I40]], [[BB103]] ], [ [[I40]], [[BB116]] ], [ [[I40]], [[BB121]] ]
; CHECK-NEXT:    [[I10461:%.*]] = phi i32 [ [[I104]], [[BB103]] ], [ [[I104]], [[BB116]] ], [ [[I104]], [[BB121]] ]
; CHECK-NEXT:    [[I10560:%.*]] = phi i64 [ [[I105]], [[BB103]] ], [ [[I105]], [[BB116]] ], [ [[I105]], [[BB121]] ]
; CHECK-NEXT:    [[I10659:%.*]] = phi i64 [ [[I106]], [[BB103]] ], [ [[I106]], [[BB116]] ], [ [[I106]], [[BB121]] ]
; CHECK-NEXT:    [[I10758:%.*]] = phi ptr [ [[I107]], [[BB103]] ], [ [[I107]], [[BB116]] ], [ [[I107]], [[BB121]] ]
; CHECK-NEXT:    [[I10857:%.*]] = phi ptr [ [[I108]], [[BB103]] ], [ [[I108]], [[BB116]] ], [ [[I108]], [[BB121]] ]
; CHECK-NEXT:    [[I11056:%.*]] = phi ptr [ [[I110]], [[BB103]] ], [ [[I110]], [[BB116]] ], [ [[I110]], [[BB121]] ]
; CHECK-NEXT:    [[I11155:%.*]] = phi ptr [ [[I111]], [[BB103]] ], [ [[I111]], [[BB116]] ], [ [[I111]], [[BB121]] ]
; CHECK-NEXT:    [[I11254:%.*]] = phi ptr [ [[I112]], [[BB103]] ], [ [[I112]], [[BB116]] ], [ [[I112]], [[BB121]] ]
; CHECK-NEXT:    [[I11353:%.*]] = phi i32 [ [[I113]], [[BB103]] ], [ 0, [[BB116]] ], [ 0, [[BB121]] ]
; CHECK-NEXT:    [[I11452:%.*]] = phi i32 [ [[I114]], [[BB103]] ], [ [[I114]], [[BB116]] ], [ [[I114]], [[BB121]] ]
; CHECK-NEXT:    [[I11551:%.*]] = phi i32 [ [[I115]], [[BB103]] ], [ [[I115]], [[BB116]] ], [ [[I115]], [[BB121]] ]
; CHECK-NEXT:    [[I1047:%.*]] = phi i32 [ [[I1049]], [[BB103]] ], [ [[I1049]], [[BB116]] ], [ [[I1049]], [[BB121]] ]
; CHECK-NEXT:    [[I140:%.*]] = phi i64 [ -1, [[BB103]] ], [ 0, [[BB116]] ], [ [[I131]], [[BB121]] ]
; CHECK-NEXT:    [[I141:%.*]] = zext nneg i32 [[I10461]] to i64
; CHECK-NEXT:    [[I142:%.*]] = getelementptr inbounds i32, ptr [[I10758]], i64 [[I141]]
; CHECK-NEXT:    [[I143:%.*]] = load i32, ptr [[I142]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I144:%.*]] = icmp sgt i32 [[I143]], 0
; CHECK-NEXT:    br i1 [[I144]], label [[BB145:%.*]], label [[BB302]]
; CHECK:       bb145:
; CHECK-NEXT:    [[I146:%.*]] = mul nsw i32 [[I11551]], [[I10461]]
; CHECK-NEXT:    [[I147:%.*]] = mul nsw i64 [[I140]], [[I10560]]
; CHECK-NEXT:    [[I148:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I147]]
; CHECK-NEXT:    [[I149:%.*]] = add i64 [[I10659]], -1
; CHECK-NEXT:    [[I150:%.*]] = icmp sgt i64 [[I10659]], 2
; CHECK-NEXT:    [[I151:%.*]] = add nsw i32 [[I11452]], -1
; CHECK-NEXT:    [[I152:%.*]] = sext i32 [[I151]] to i64
; CHECK-NEXT:    [[I153:%.*]] = icmp eq i64 [[I140]], [[I152]]
; CHECK-NEXT:    [[I154:%.*]] = add nsw i64 [[I140]], 1
; CHECK-NEXT:    [[I155:%.*]] = mul nsw i64 [[I154]], [[I10560]]
; CHECK-NEXT:    [[I156:%.*]] = getelementptr i32, ptr [[I11056]], i64 [[I155]]
; CHECK-NEXT:    [[I157:%.*]] = trunc i64 [[I10659]] to i32
; CHECK-NEXT:    [[I158:%.*]] = add i32 [[I157]], -1
; CHECK-NEXT:    br label [[BB159:%.*]]
; CHECK:       bb159:
; CHECK-NEXT:    [[I158473:%.*]] = phi i32 [ [[I158]], [[BB145]] ], [ [[I158472:%.*]], [[BB255:%.*]] ]
; CHECK-NEXT:    [[I149471:%.*]] = phi i64 [ [[I149]], [[BB145]] ], [ [[I149470:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I28146469:%.*]] = phi ptr [ [[I28146]], [[BB145]] ], [ [[I28146467:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I25142466:%.*]] = phi ptr [ [[I25142]], [[BB145]] ], [ [[I25142464:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I24138463:%.*]] = phi ptr [ [[I24138]], [[BB145]] ], [ [[I24138461:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I23134460:%.*]] = phi ptr [ [[I23134]], [[BB145]] ], [ [[I23134458:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I22130457:%.*]] = phi ptr [ [[I22130]], [[BB145]] ], [ [[I22130455:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I21126454:%.*]] = phi ptr [ [[I21126]], [[BB145]] ], [ [[I21126452:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I6121451:%.*]] = phi i32 [ [[I6121]], [[BB145]] ], [ [[I6121449:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I32119448:%.*]] = phi i64 [ [[I32119]], [[BB145]] ], [ [[I32119446:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I41118445:%.*]] = phi i32 [ [[I41118]], [[BB145]] ], [ [[I41118443:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I75117442:%.*]] = phi double [ [[I75117]], [[BB145]] ], [ [[I75117441:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I27114440:%.*]] = phi ptr [ [[I27114]], [[BB145]] ], [ [[I27114438:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I26110437:%.*]] = phi ptr [ [[I26110]], [[BB145]] ], [ [[I26110435:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I20106434:%.*]] = phi ptr [ [[I20106]], [[BB145]] ], [ [[I20106432:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I19102431:%.*]] = phi ptr [ [[I19102]], [[BB145]] ], [ [[I19102429:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I497428:%.*]] = phi ptr [ [[I497]], [[BB145]] ], [ [[I497426:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I1393425:%.*]] = phi i32 [ [[I1393]], [[BB145]] ], [ [[I1393423:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I1889422:%.*]] = phi i32 [ [[I1889]], [[BB145]] ], [ [[I1889420:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I82419:%.*]] = phi i32 [ [[I82]], [[BB145]] ], [ [[I82417:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I569416:%.*]] = phi i32 [ [[I569]], [[BB145]] ], [ [[I569414:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I3066413:%.*]] = phi i32 [ [[I3066]], [[BB145]] ], [ [[I3066411:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I3163410:%.*]] = phi i32 [ [[I3163]], [[BB145]] ], [ [[I3163408:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I4062407:%.*]] = phi i64 [ [[I4062]], [[BB145]] ], [ [[I4062405:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I10659404:%.*]] = phi i64 [ [[I10659]], [[BB145]] ], [ [[I10659403:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I10857402:%.*]] = phi ptr [ [[I10857]], [[BB145]] ], [ [[I10857401:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I11155400:%.*]] = phi ptr [ [[I11155]], [[BB145]] ], [ [[I11155399:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I11254398:%.*]] = phi ptr [ [[I11254]], [[BB145]] ], [ [[I11254397:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I11353396:%.*]] = phi i32 [ [[I11353]], [[BB145]] ], [ [[I11353395:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I1047394:%.*]] = phi i32 [ [[I1047]], [[BB145]] ], [ [[I1047392:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I156384:%.*]] = phi ptr [ [[I156]], [[BB145]] ], [ [[I156383:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I148382:%.*]] = phi ptr [ [[I148]], [[BB145]] ], [ [[I148381:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I153380:%.*]] = phi i1 [ [[I153]], [[BB145]] ], [ [[I153379:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I146378:%.*]] = phi i32 [ [[I146]], [[BB145]] ], [ [[I146377:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I142376:%.*]] = phi ptr [ [[I142]], [[BB145]] ], [ [[I142375:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I160:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I298:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I161:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I297:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I162:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I296:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I163:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I295:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I164:%.*]] = phi double [ 0.000000e+00, [[BB145]] ], [ [[I294:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I165:%.*]] = phi i32 [ 0, [[BB145]] ], [ [[I299:%.*]], [[BB255]] ]
; CHECK-NEXT:    [[I166:%.*]] = add nsw i32 [[I165]], [[I146378]]
; CHECK-NEXT:    [[I167:%.*]] = sext i32 [[I166]] to i64
; CHECK-NEXT:    [[I168:%.*]] = getelementptr inbounds i32, ptr [[I11254398]], i64 [[I167]]
; CHECK-NEXT:    [[I169:%.*]] = load i32, ptr [[I168]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I170:%.*]] = getelementptr inbounds double, ptr [[I10857402]], i64 [[I167]]
; CHECK-NEXT:    [[I171:%.*]] = load double, ptr [[I170]], align 8, !tbaa [[TBAA39]]
; CHECK-NEXT:    switch i32 [[I11353396]], label [[CACHESTORE2:%.*]] [
; CHECK-NEXT:      i32 1, label [[CACHESTORE1:%.*]]
; CHECK-NEXT:      i32 0, label [[BB197:%.*]]
; CHECK-NEXT:    ]
; CHECK:       CacheStore1:
; CHECK-NEXT:    [[TMP11:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1:%.*]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP12:%.*]] = load ptr, ptr [[TMP11]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR324:%.*]] = getelementptr inbounds i32, ptr [[TMP12]], i32 1
; CHECK-NEXT:    [[CACHEIDX325:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR324]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP13:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_1]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP14:%.*]] = load ptr, ptr [[TMP13]], align 8
; CHECK-NEXT:    [[TMP15:%.*]] = getelementptr inbounds ptr, ptr [[TMP14]], i32 1
; CHECK-NEXT:    [[CACHE_OUT_PTR326:%.*]] = load ptr, ptr [[TMP15]], align 8
; CHECK-NEXT:    [[CACHECELL327:%.*]] = getelementptr inbounds [[CACHE_CELL1:%.*]], ptr [[CACHE_OUT_PTR326]], i32 [[CACHEIDX325]]
; CHECK-NEXT:    [[I142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 0
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 2
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 3
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 4
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156_CACHEIDX]], align 8
; CHECK-NEXT:    [[I171_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 5
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 6
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 7
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 8
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 9
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 10
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 11
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 12
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 14
; CHECK-NEXT:    store i32 1, ptr [[I11353_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL1]], ptr [[CACHECELL327]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146_CACHEIDX]], align 8
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
; CHECK:       bb197:
; CHECK-NEXT:    [[I198:%.*]] = sext i32 [[I169]] to i64
; CHECK-NEXT:    [[I199:%.*]] = getelementptr i32, ptr [[I148382]], i64 [[I198]]
; CHECK-NEXT:    [[I200:%.*]] = load i32, ptr [[I199]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I201:%.*]] = sext i32 [[I200]] to i64
; CHECK-NEXT:    [[I202:%.*]] = icmp eq i64 [[I149471]], [[I201]]
; CHECK-NEXT:    [[I203:%.*]] = mul nsw i64 [[I10659404]], [[I198]]
; CHECK-NEXT:    [[I204:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT:%.*]], ptr [[I11155400]], i64 [[I203]]
; CHECK-NEXT:    [[I205:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I204]], i64 [[I201]]
; CHECK-NEXT:    [[I206:%.*]] = select i1 [[I202]], i64 -48, i64 0
; CHECK-NEXT:    [[I207:%.*]] = getelementptr i8, ptr [[I205]], i64 [[I206]]
; CHECK-NEXT:    br label [[BB255]]
; CHECK:       CacheStore2:
; CHECK-NEXT:    [[TMP16:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2]], ptr [[ARG]], i32 0, i32 3
; CHECK-NEXT:    [[TMP17:%.*]] = load ptr, ptr [[TMP16]], align 8
; CHECK-NEXT:    [[CONTCOUNT_PTR913:%.*]] = getelementptr inbounds i32, ptr [[TMP17]], i32 2
; CHECK-NEXT:    [[CACHEIDX914:%.*]] = atomicrmw add ptr [[CONTCOUNT_PTR913]], i32 1 monotonic, align 4
; CHECK-NEXT:    [[TMP18:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP19:%.*]] = load ptr, ptr [[TMP18]], align 8
; CHECK-NEXT:    [[TMP20:%.*]] = getelementptr inbounds ptr, ptr [[TMP19]], i32 2
; CHECK-NEXT:    [[CACHE_OUT_PTR915:%.*]] = load ptr, ptr [[TMP20]], align 8
; CHECK-NEXT:    [[CACHECELL916:%.*]] = getelementptr inbounds [[CACHE_CELL2:%.*]], ptr [[CACHE_OUT_PTR915]], i32 [[CACHEIDX914]]
; CHECK-NEXT:    [[I171_CACHEIDX917:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 0
; CHECK-NEXT:    store double [[I171]], ptr [[I171_CACHEIDX917]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX918:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 1
; CHECK-NEXT:    store i32 [[I169]], ptr [[I169_CACHEIDX918]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX919:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 2
; CHECK-NEXT:    store i32 [[I165]], ptr [[I165_CACHEIDX919]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX920:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 3
; CHECK-NEXT:    store double [[I164]], ptr [[I164_CACHEIDX920]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX921:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 4
; CHECK-NEXT:    store double [[I163]], ptr [[I163_CACHEIDX921]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX922:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 5
; CHECK-NEXT:    store double [[I162]], ptr [[I162_CACHEIDX922]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX923:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 6
; CHECK-NEXT:    store double [[I161]], ptr [[I161_CACHEIDX923]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX924:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 7
; CHECK-NEXT:    store double [[I160]], ptr [[I160_CACHEIDX924]], align 8
; CHECK-NEXT:    [[I142376_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 8
; CHECK-NEXT:    store ptr [[I142376]], ptr [[I142376_CACHEIDX]], align 8
; CHECK-NEXT:    [[I146378_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 9
; CHECK-NEXT:    store i32 [[I146378]], ptr [[I146378_CACHEIDX]], align 4
; CHECK-NEXT:    [[I153380_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 10
; CHECK-NEXT:    store i1 [[I153380]], ptr [[I153380_CACHEIDX]], align 1
; CHECK-NEXT:    [[I148382_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 11
; CHECK-NEXT:    store ptr [[I148382]], ptr [[I148382_CACHEIDX]], align 8
; CHECK-NEXT:    [[I156384_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 12
; CHECK-NEXT:    store ptr [[I156384]], ptr [[I156384_CACHEIDX]], align 8
; CHECK-NEXT:    [[I1047394_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 13
; CHECK-NEXT:    store i32 [[I1047394]], ptr [[I1047394_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11353396_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 14
; CHECK-NEXT:    store i32 [[I11353396]], ptr [[I11353396_CACHEIDX]], align 4
; CHECK-NEXT:    [[I11254398_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 15
; CHECK-NEXT:    store ptr [[I11254398]], ptr [[I11254398_CACHEIDX]], align 8
; CHECK-NEXT:    [[I11155400_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 16
; CHECK-NEXT:    store ptr [[I11155400]], ptr [[I11155400_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10857402_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 17
; CHECK-NEXT:    store ptr [[I10857402]], ptr [[I10857402_CACHEIDX]], align 8
; CHECK-NEXT:    [[I10659404_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 18
; CHECK-NEXT:    store i64 [[I10659404]], ptr [[I10659404_CACHEIDX]], align 8
; CHECK-NEXT:    [[I4062407_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 19
; CHECK-NEXT:    store i64 [[I4062407]], ptr [[I4062407_CACHEIDX]], align 8
; CHECK-NEXT:    [[I3163410_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 20
; CHECK-NEXT:    store i32 [[I3163410]], ptr [[I3163410_CACHEIDX]], align 4
; CHECK-NEXT:    [[I3066413_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 21
; CHECK-NEXT:    store i32 [[I3066413]], ptr [[I3066413_CACHEIDX]], align 4
; CHECK-NEXT:    [[I569416_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 22
; CHECK-NEXT:    store i32 [[I569416]], ptr [[I569416_CACHEIDX]], align 4
; CHECK-NEXT:    [[I82419_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 23
; CHECK-NEXT:    store i32 [[I82419]], ptr [[I82419_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1889422_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 24
; CHECK-NEXT:    store i32 [[I1889422]], ptr [[I1889422_CACHEIDX]], align 4
; CHECK-NEXT:    [[I1393425_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 25
; CHECK-NEXT:    store i32 [[I1393425]], ptr [[I1393425_CACHEIDX]], align 4
; CHECK-NEXT:    [[I497428_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 26
; CHECK-NEXT:    store ptr [[I497428]], ptr [[I497428_CACHEIDX]], align 8
; CHECK-NEXT:    [[I19102431_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 27
; CHECK-NEXT:    store ptr [[I19102431]], ptr [[I19102431_CACHEIDX]], align 8
; CHECK-NEXT:    [[I20106434_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 28
; CHECK-NEXT:    store ptr [[I20106434]], ptr [[I20106434_CACHEIDX]], align 8
; CHECK-NEXT:    [[I26110437_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 29
; CHECK-NEXT:    store ptr [[I26110437]], ptr [[I26110437_CACHEIDX]], align 8
; CHECK-NEXT:    [[I27114440_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 30
; CHECK-NEXT:    store ptr [[I27114440]], ptr [[I27114440_CACHEIDX]], align 8
; CHECK-NEXT:    [[I75117442_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 31
; CHECK-NEXT:    store double [[I75117442]], ptr [[I75117442_CACHEIDX]], align 8
; CHECK-NEXT:    [[I41118445_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 32
; CHECK-NEXT:    store i32 [[I41118445]], ptr [[I41118445_CACHEIDX]], align 4
; CHECK-NEXT:    [[I32119448_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 33
; CHECK-NEXT:    store i64 [[I32119448]], ptr [[I32119448_CACHEIDX]], align 8
; CHECK-NEXT:    [[I6121451_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 34
; CHECK-NEXT:    store i32 [[I6121451]], ptr [[I6121451_CACHEIDX]], align 4
; CHECK-NEXT:    [[I21126454_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 35
; CHECK-NEXT:    store ptr [[I21126454]], ptr [[I21126454_CACHEIDX]], align 8
; CHECK-NEXT:    [[I22130457_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 36
; CHECK-NEXT:    store ptr [[I22130457]], ptr [[I22130457_CACHEIDX]], align 8
; CHECK-NEXT:    [[I23134460_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 37
; CHECK-NEXT:    store ptr [[I23134460]], ptr [[I23134460_CACHEIDX]], align 8
; CHECK-NEXT:    [[I24138463_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 38
; CHECK-NEXT:    store ptr [[I24138463]], ptr [[I24138463_CACHEIDX]], align 8
; CHECK-NEXT:    [[I25142466_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 39
; CHECK-NEXT:    store ptr [[I25142466]], ptr [[I25142466_CACHEIDX]], align 8
; CHECK-NEXT:    [[I28146469_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 40
; CHECK-NEXT:    store ptr [[I28146469]], ptr [[I28146469_CACHEIDX]], align 8
; CHECK-NEXT:    [[I149471_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 41
; CHECK-NEXT:    store i64 [[I149471]], ptr [[I149471_CACHEIDX]], align 8
; CHECK-NEXT:    [[I158473_CACHEIDX:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL916]], i32 0, i32 42
; CHECK-NEXT:    store i32 [[I158473]], ptr [[I158473_CACHEIDX]], align 4
; CHECK-NEXT:    br label [[THREADEXIT912]]
; CHECK:       CacheRemat2:
; CHECK-NEXT:    [[TMP21:%.*]] = getelementptr inbounds [[STRUCT_KERNELLAUNCHENVIRONMENTTY_2]], ptr [[ARG]], i32 0, i32 4
; CHECK-NEXT:    [[TMP22:%.*]] = load ptr, ptr [[TMP21]], align 8
; CHECK-NEXT:    [[TMP23:%.*]] = getelementptr inbounds ptr, ptr [[TMP22]], i32 5
; CHECK-NEXT:    [[CACHE_IN_PTR929:%.*]] = load ptr, ptr [[TMP23]], align 8
; CHECK-NEXT:    [[CACHECELL930:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHE_IN_PTR929]], i32 [[GTID925]]
; CHECK-NEXT:    [[I171_CACHEIDX931:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 0
; CHECK-NEXT:    [[I171_CACHE932:%.*]] = load double, ptr [[I171_CACHEIDX931]], align 8
; CHECK-NEXT:    [[I169_CACHEIDX933:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 1
; CHECK-NEXT:    [[I169_CACHE934:%.*]] = load i32, ptr [[I169_CACHEIDX933]], align 4
; CHECK-NEXT:    [[I165_CACHEIDX935:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 2
; CHECK-NEXT:    [[I165_CACHE936:%.*]] = load i32, ptr [[I165_CACHEIDX935]], align 4
; CHECK-NEXT:    [[I164_CACHEIDX937:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 3
; CHECK-NEXT:    [[I164_CACHE938:%.*]] = load double, ptr [[I164_CACHEIDX937]], align 8
; CHECK-NEXT:    [[I163_CACHEIDX939:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 4
; CHECK-NEXT:    [[I163_CACHE940:%.*]] = load double, ptr [[I163_CACHEIDX939]], align 8
; CHECK-NEXT:    [[I162_CACHEIDX941:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 5
; CHECK-NEXT:    [[I162_CACHE942:%.*]] = load double, ptr [[I162_CACHEIDX941]], align 8
; CHECK-NEXT:    [[I161_CACHEIDX943:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 6
; CHECK-NEXT:    [[I161_CACHE944:%.*]] = load double, ptr [[I161_CACHEIDX943]], align 8
; CHECK-NEXT:    [[I160_CACHEIDX945:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 7
; CHECK-NEXT:    [[I160_CACHE946:%.*]] = load double, ptr [[I160_CACHEIDX945]], align 8
; CHECK-NEXT:    [[I142376_CACHEIDX947:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 8
; CHECK-NEXT:    [[I142376_CACHE:%.*]] = load ptr, ptr [[I142376_CACHEIDX947]], align 8
; CHECK-NEXT:    [[I146378_CACHEIDX948:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 9
; CHECK-NEXT:    [[I146378_CACHE:%.*]] = load i32, ptr [[I146378_CACHEIDX948]], align 4
; CHECK-NEXT:    [[I153380_CACHEIDX949:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 10
; CHECK-NEXT:    [[I153380_CACHE:%.*]] = load i1, ptr [[I153380_CACHEIDX949]], align 1
; CHECK-NEXT:    [[I148382_CACHEIDX950:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 11
; CHECK-NEXT:    [[I148382_CACHE:%.*]] = load ptr, ptr [[I148382_CACHEIDX950]], align 8
; CHECK-NEXT:    [[I156384_CACHEIDX951:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 12
; CHECK-NEXT:    [[I156384_CACHE:%.*]] = load ptr, ptr [[I156384_CACHEIDX951]], align 8
; CHECK-NEXT:    [[I1047394_CACHEIDX952:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 13
; CHECK-NEXT:    [[I1047394_CACHE:%.*]] = load i32, ptr [[I1047394_CACHEIDX952]], align 4
; CHECK-NEXT:    [[I11353396_CACHEIDX953:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 14
; CHECK-NEXT:    [[I11353396_CACHE:%.*]] = load i32, ptr [[I11353396_CACHEIDX953]], align 4
; CHECK-NEXT:    [[I11254398_CACHEIDX954:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 15
; CHECK-NEXT:    [[I11254398_CACHE:%.*]] = load ptr, ptr [[I11254398_CACHEIDX954]], align 8
; CHECK-NEXT:    [[I11155400_CACHEIDX955:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 16
; CHECK-NEXT:    [[I11155400_CACHE:%.*]] = load ptr, ptr [[I11155400_CACHEIDX955]], align 8
; CHECK-NEXT:    [[I10857402_CACHEIDX956:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 17
; CHECK-NEXT:    [[I10857402_CACHE:%.*]] = load ptr, ptr [[I10857402_CACHEIDX956]], align 8
; CHECK-NEXT:    [[I10659404_CACHEIDX957:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 18
; CHECK-NEXT:    [[I10659404_CACHE:%.*]] = load i64, ptr [[I10659404_CACHEIDX957]], align 8
; CHECK-NEXT:    [[I4062407_CACHEIDX958:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 19
; CHECK-NEXT:    [[I4062407_CACHE:%.*]] = load i64, ptr [[I4062407_CACHEIDX958]], align 8
; CHECK-NEXT:    [[I3163410_CACHEIDX959:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 20
; CHECK-NEXT:    [[I3163410_CACHE:%.*]] = load i32, ptr [[I3163410_CACHEIDX959]], align 4
; CHECK-NEXT:    [[I3066413_CACHEIDX960:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 21
; CHECK-NEXT:    [[I3066413_CACHE:%.*]] = load i32, ptr [[I3066413_CACHEIDX960]], align 4
; CHECK-NEXT:    [[I569416_CACHEIDX961:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 22
; CHECK-NEXT:    [[I569416_CACHE:%.*]] = load i32, ptr [[I569416_CACHEIDX961]], align 4
; CHECK-NEXT:    [[I82419_CACHEIDX962:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 23
; CHECK-NEXT:    [[I82419_CACHE:%.*]] = load i32, ptr [[I82419_CACHEIDX962]], align 4
; CHECK-NEXT:    [[I1889422_CACHEIDX963:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 24
; CHECK-NEXT:    [[I1889422_CACHE:%.*]] = load i32, ptr [[I1889422_CACHEIDX963]], align 4
; CHECK-NEXT:    [[I1393425_CACHEIDX964:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 25
; CHECK-NEXT:    [[I1393425_CACHE:%.*]] = load i32, ptr [[I1393425_CACHEIDX964]], align 4
; CHECK-NEXT:    [[I497428_CACHEIDX965:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 26
; CHECK-NEXT:    [[I497428_CACHE:%.*]] = load ptr, ptr [[I497428_CACHEIDX965]], align 8
; CHECK-NEXT:    [[I19102431_CACHEIDX966:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 27
; CHECK-NEXT:    [[I19102431_CACHE:%.*]] = load ptr, ptr [[I19102431_CACHEIDX966]], align 8
; CHECK-NEXT:    [[I20106434_CACHEIDX967:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 28
; CHECK-NEXT:    [[I20106434_CACHE:%.*]] = load ptr, ptr [[I20106434_CACHEIDX967]], align 8
; CHECK-NEXT:    [[I26110437_CACHEIDX968:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 29
; CHECK-NEXT:    [[I26110437_CACHE:%.*]] = load ptr, ptr [[I26110437_CACHEIDX968]], align 8
; CHECK-NEXT:    [[I27114440_CACHEIDX969:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 30
; CHECK-NEXT:    [[I27114440_CACHE:%.*]] = load ptr, ptr [[I27114440_CACHEIDX969]], align 8
; CHECK-NEXT:    [[I75117442_CACHEIDX970:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 31
; CHECK-NEXT:    [[I75117442_CACHE:%.*]] = load double, ptr [[I75117442_CACHEIDX970]], align 8
; CHECK-NEXT:    [[I41118445_CACHEIDX971:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 32
; CHECK-NEXT:    [[I41118445_CACHE:%.*]] = load i32, ptr [[I41118445_CACHEIDX971]], align 4
; CHECK-NEXT:    [[I32119448_CACHEIDX972:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 33
; CHECK-NEXT:    [[I32119448_CACHE:%.*]] = load i64, ptr [[I32119448_CACHEIDX972]], align 8
; CHECK-NEXT:    [[I6121451_CACHEIDX973:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 34
; CHECK-NEXT:    [[I6121451_CACHE:%.*]] = load i32, ptr [[I6121451_CACHEIDX973]], align 4
; CHECK-NEXT:    [[I21126454_CACHEIDX974:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 35
; CHECK-NEXT:    [[I21126454_CACHE:%.*]] = load ptr, ptr [[I21126454_CACHEIDX974]], align 8
; CHECK-NEXT:    [[I22130457_CACHEIDX975:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 36
; CHECK-NEXT:    [[I22130457_CACHE:%.*]] = load ptr, ptr [[I22130457_CACHEIDX975]], align 8
; CHECK-NEXT:    [[I23134460_CACHEIDX976:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 37
; CHECK-NEXT:    [[I23134460_CACHE:%.*]] = load ptr, ptr [[I23134460_CACHEIDX976]], align 8
; CHECK-NEXT:    [[I24138463_CACHEIDX977:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 38
; CHECK-NEXT:    [[I24138463_CACHE:%.*]] = load ptr, ptr [[I24138463_CACHEIDX977]], align 8
; CHECK-NEXT:    [[I25142466_CACHEIDX978:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 39
; CHECK-NEXT:    [[I25142466_CACHE:%.*]] = load ptr, ptr [[I25142466_CACHEIDX978]], align 8
; CHECK-NEXT:    [[I28146469_CACHEIDX979:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 40
; CHECK-NEXT:    [[I28146469_CACHE:%.*]] = load ptr, ptr [[I28146469_CACHEIDX979]], align 8
; CHECK-NEXT:    [[I149471_CACHEIDX980:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 41
; CHECK-NEXT:    [[I149471_CACHE:%.*]] = load i64, ptr [[I149471_CACHEIDX980]], align 8
; CHECK-NEXT:    [[I158473_CACHEIDX981:%.*]] = getelementptr inbounds [[CACHE_CELL2]], ptr [[CACHECELL930]], i32 0, i32 42
; CHECK-NEXT:    [[I158473_CACHE:%.*]] = load i32, ptr [[I158473_CACHEIDX981]], align 4
; CHECK-NEXT:    [[I209:%.*]] = sext i32 [[I169_CACHE934]] to i64
; CHECK-NEXT:    [[I210:%.*]] = getelementptr i32, ptr [[I148382_CACHE]], i64 [[I209]]
; CHECK-NEXT:    [[I211:%.*]] = load i32, ptr [[I210]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    br i1 [[I153380_CACHE]], label [[BB216:%.*]], label [[BB212:%.*]]
; CHECK:       bb212:
; CHECK-NEXT:    [[I213:%.*]] = getelementptr i32, ptr [[I156384_CACHE]], i64 [[I209]]
; CHECK-NEXT:    [[I214:%.*]] = load i32, ptr [[I213]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I215:%.*]] = add nsw i32 [[I214]], 1
; CHECK-NEXT:    br label [[BB216]]
; CHECK:       bb216:
; CHECK-NEXT:    [[I217:%.*]] = phi i32 [ [[I215]], [[BB212]] ], [ [[I158473_CACHE]], [[CACHEREMAT2]] ]
; CHECK-NEXT:    [[I218:%.*]] = mul nsw i64 [[I10659404_CACHE]], [[I209]]
; CHECK-NEXT:    [[I219:%.*]] = sext i32 [[I211]] to i64
; CHECK-NEXT:    [[I220:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I11155400_CACHE]], i64 [[I218]]
; CHECK-NEXT:    [[I221:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I220]], i64 [[I219]]
; CHECK-NEXT:    [[I222:%.*]] = load double, ptr [[I221]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I223:%.*]] = sext i32 [[I217]] to i64
; CHECK-NEXT:    [[I224:%.*]] = fcmp ult double [[I222]], [[I75117442_CACHE]]
; CHECK-NEXT:    br i1 [[I224]], label [[BB225:%.*]], label [[BB245:%.*]]
; CHECK:       bb225:
; CHECK-NEXT:    [[I226:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I220]], i64 [[I223]]
; CHECK-NEXT:    [[I227:%.*]] = load double, ptr [[I226]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I228:%.*]] = fcmp ugt double [[I227]], [[I75117442_CACHE]]
; CHECK-NEXT:    br i1 [[I228]], label [[BB229:%.*]], label [[BB245]]
; CHECK:       bb229:
; CHECK-NEXT:    [[I230:%.*]] = sub nsw i64 [[I223]], [[I219]]
; CHECK-NEXT:    [[I231:%.*]] = icmp sgt i64 [[I230]], 1
; CHECK-NEXT:    br i1 [[I231]], label [[BB232:%.*]], label [[BB245]]
; CHECK:       bb232:
; CHECK-NEXT:    [[I233:%.*]] = phi i64 [ [[I230]], [[BB229]] ], [ [[I243:%.*]], [[BB232]] ]
; CHECK-NEXT:    [[I234:%.*]] = phi i64 [ [[I219]], [[BB229]] ], [ [[I242:%.*]], [[BB232]] ]
; CHECK-NEXT:    [[I235:%.*]] = phi i64 [ [[I223]], [[BB229]] ], [ [[I241:%.*]], [[BB232]] ]
; CHECK-NEXT:    [[I236:%.*]] = lshr i64 [[I233]], 1
; CHECK-NEXT:    [[I237:%.*]] = add nsw i64 [[I236]], [[I234]]
; CHECK-NEXT:    [[I238:%.*]] = getelementptr inbounds [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I220]], i64 [[I237]]
; CHECK-NEXT:    [[I239:%.*]] = load double, ptr [[I238]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I240:%.*]] = fcmp ogt double [[I239]], [[I75117442_CACHE]]
; CHECK-NEXT:    [[I241]] = select i1 [[I240]], i64 [[I237]], i64 [[I235]]
; CHECK-NEXT:    [[I242]] = select i1 [[I240]], i64 [[I234]], i64 [[I237]]
; CHECK-NEXT:    [[I243]] = sub nsw i64 [[I241]], [[I242]]
; CHECK-NEXT:    [[I244:%.*]] = icmp sgt i64 [[I243]], 1
; CHECK-NEXT:    br i1 [[I244]], label [[BB232]], label [[BB245]]
; CHECK:       bb245:
; CHECK-NEXT:    [[I246:%.*]] = phi i64 [ 0, [[BB216]] ], [ [[I149471_CACHE]], [[BB225]] ], [ [[I219]], [[BB229]] ], [ [[I242]], [[BB232]] ]
; CHECK-NEXT:    [[I247:%.*]] = shl i64 [[I246]], 32
; CHECK-NEXT:    [[I248:%.*]] = ashr exact i64 [[I247]], 32
; CHECK-NEXT:    [[I249:%.*]] = icmp eq i64 [[I248]], [[I149471_CACHE]]
; CHECK-NEXT:    br i1 [[I249]], label [[BB250:%.*]], label [[BB253:%.*]]
; CHECK:       bb250:
; CHECK-NEXT:    [[I251:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I220]], i64 [[I149471_CACHE]]
; CHECK-NEXT:    [[I252:%.*]] = getelementptr i8, ptr [[I251]], i64 -48
; CHECK-NEXT:    br label [[BB255]]
; CHECK:       bb253:
; CHECK-NEXT:    [[I254:%.*]] = getelementptr [[STRUCT_NUCLIDEGRIDPOINT]], ptr [[I220]], i64 [[I248]]
; CHECK-NEXT:    br label [[BB255]]
; CHECK:       bb255:
; CHECK-NEXT:    [[I158472]] = phi i32 [ [[I158473_CACHE]], [[BB253]] ], [ [[I158473_CACHE]], [[BB250]] ], [ [[I158473]], [[BB197]] ]
; CHECK-NEXT:    [[I149470]] = phi i64 [ [[I149471_CACHE]], [[BB253]] ], [ [[I149471_CACHE]], [[BB250]] ], [ [[I149471]], [[BB197]] ]
; CHECK-NEXT:    [[I28146467]] = phi ptr [ [[I28146469_CACHE]], [[BB253]] ], [ [[I28146469_CACHE]], [[BB250]] ], [ [[I28146469]], [[BB197]] ]
; CHECK-NEXT:    [[I25142464]] = phi ptr [ [[I25142466_CACHE]], [[BB253]] ], [ [[I25142466_CACHE]], [[BB250]] ], [ [[I25142466]], [[BB197]] ]
; CHECK-NEXT:    [[I24138461]] = phi ptr [ [[I24138463_CACHE]], [[BB253]] ], [ [[I24138463_CACHE]], [[BB250]] ], [ [[I24138463]], [[BB197]] ]
; CHECK-NEXT:    [[I23134458]] = phi ptr [ [[I23134460_CACHE]], [[BB253]] ], [ [[I23134460_CACHE]], [[BB250]] ], [ [[I23134460]], [[BB197]] ]
; CHECK-NEXT:    [[I22130455]] = phi ptr [ [[I22130457_CACHE]], [[BB253]] ], [ [[I22130457_CACHE]], [[BB250]] ], [ [[I22130457]], [[BB197]] ]
; CHECK-NEXT:    [[I21126452]] = phi ptr [ [[I21126454_CACHE]], [[BB253]] ], [ [[I21126454_CACHE]], [[BB250]] ], [ [[I21126454]], [[BB197]] ]
; CHECK-NEXT:    [[I6121449]] = phi i32 [ [[I6121451_CACHE]], [[BB253]] ], [ [[I6121451_CACHE]], [[BB250]] ], [ [[I6121451]], [[BB197]] ]
; CHECK-NEXT:    [[I32119446]] = phi i64 [ [[I32119448_CACHE]], [[BB253]] ], [ [[I32119448_CACHE]], [[BB250]] ], [ [[I32119448]], [[BB197]] ]
; CHECK-NEXT:    [[I41118443]] = phi i32 [ [[I41118445_CACHE]], [[BB253]] ], [ [[I41118445_CACHE]], [[BB250]] ], [ [[I41118445]], [[BB197]] ]
; CHECK-NEXT:    [[I75117441]] = phi double [ [[I75117442_CACHE]], [[BB253]] ], [ [[I75117442_CACHE]], [[BB250]] ], [ [[I75117442]], [[BB197]] ]
; CHECK-NEXT:    [[I27114438]] = phi ptr [ [[I27114440_CACHE]], [[BB253]] ], [ [[I27114440_CACHE]], [[BB250]] ], [ [[I27114440]], [[BB197]] ]
; CHECK-NEXT:    [[I26110435]] = phi ptr [ [[I26110437_CACHE]], [[BB253]] ], [ [[I26110437_CACHE]], [[BB250]] ], [ [[I26110437]], [[BB197]] ]
; CHECK-NEXT:    [[I20106432]] = phi ptr [ [[I20106434_CACHE]], [[BB253]] ], [ [[I20106434_CACHE]], [[BB250]] ], [ [[I20106434]], [[BB197]] ]
; CHECK-NEXT:    [[I19102429]] = phi ptr [ [[I19102431_CACHE]], [[BB253]] ], [ [[I19102431_CACHE]], [[BB250]] ], [ [[I19102431]], [[BB197]] ]
; CHECK-NEXT:    [[I497426]] = phi ptr [ [[I497428_CACHE]], [[BB253]] ], [ [[I497428_CACHE]], [[BB250]] ], [ [[I497428]], [[BB197]] ]
; CHECK-NEXT:    [[I1393423]] = phi i32 [ [[I1393425_CACHE]], [[BB253]] ], [ [[I1393425_CACHE]], [[BB250]] ], [ [[I1393425]], [[BB197]] ]
; CHECK-NEXT:    [[I1889420]] = phi i32 [ [[I1889422_CACHE]], [[BB253]] ], [ [[I1889422_CACHE]], [[BB250]] ], [ [[I1889422]], [[BB197]] ]
; CHECK-NEXT:    [[I82417]] = phi i32 [ [[I82419_CACHE]], [[BB253]] ], [ [[I82419_CACHE]], [[BB250]] ], [ [[I82419]], [[BB197]] ]
; CHECK-NEXT:    [[I569414]] = phi i32 [ [[I569416_CACHE]], [[BB253]] ], [ [[I569416_CACHE]], [[BB250]] ], [ [[I569416]], [[BB197]] ]
; CHECK-NEXT:    [[I3066411]] = phi i32 [ [[I3066413_CACHE]], [[BB253]] ], [ [[I3066413_CACHE]], [[BB250]] ], [ [[I3066413]], [[BB197]] ]
; CHECK-NEXT:    [[I3163408]] = phi i32 [ [[I3163410_CACHE]], [[BB253]] ], [ [[I3163410_CACHE]], [[BB250]] ], [ [[I3163410]], [[BB197]] ]
; CHECK-NEXT:    [[I4062405]] = phi i64 [ [[I4062407_CACHE]], [[BB253]] ], [ [[I4062407_CACHE]], [[BB250]] ], [ [[I4062407]], [[BB197]] ]
; CHECK-NEXT:    [[I10659403]] = phi i64 [ [[I10659404_CACHE]], [[BB253]] ], [ [[I10659404_CACHE]], [[BB250]] ], [ [[I10659404]], [[BB197]] ]
; CHECK-NEXT:    [[I10857401]] = phi ptr [ [[I10857402_CACHE]], [[BB253]] ], [ [[I10857402_CACHE]], [[BB250]] ], [ [[I10857402]], [[BB197]] ]
; CHECK-NEXT:    [[I11155399]] = phi ptr [ [[I11155400_CACHE]], [[BB253]] ], [ [[I11155400_CACHE]], [[BB250]] ], [ [[I11155400]], [[BB197]] ]
; CHECK-NEXT:    [[I11254397]] = phi ptr [ [[I11254398_CACHE]], [[BB253]] ], [ [[I11254398_CACHE]], [[BB250]] ], [ [[I11254398]], [[BB197]] ]
; CHECK-NEXT:    [[I11353395]] = phi i32 [ [[I11353396_CACHE]], [[BB253]] ], [ [[I11353396_CACHE]], [[BB250]] ], [ 0, [[BB197]] ]
; CHECK-NEXT:    [[I1047392]] = phi i32 [ [[I1047394_CACHE]], [[BB253]] ], [ [[I1047394_CACHE]], [[BB250]] ], [ [[I1047394]], [[BB197]] ]
; CHECK-NEXT:    [[I160391:%.*]] = phi double [ [[I160_CACHE946]], [[BB253]] ], [ [[I160_CACHE946]], [[BB250]] ], [ [[I160]], [[BB197]] ]
; CHECK-NEXT:    [[I161390:%.*]] = phi double [ [[I161_CACHE944]], [[BB253]] ], [ [[I161_CACHE944]], [[BB250]] ], [ [[I161]], [[BB197]] ]
; CHECK-NEXT:    [[I162389:%.*]] = phi double [ [[I162_CACHE942]], [[BB253]] ], [ [[I162_CACHE942]], [[BB250]] ], [ [[I162]], [[BB197]] ]
; CHECK-NEXT:    [[I163388:%.*]] = phi double [ [[I163_CACHE940]], [[BB253]] ], [ [[I163_CACHE940]], [[BB250]] ], [ [[I163]], [[BB197]] ]
; CHECK-NEXT:    [[I164387:%.*]] = phi double [ [[I164_CACHE938]], [[BB253]] ], [ [[I164_CACHE938]], [[BB250]] ], [ [[I164]], [[BB197]] ]
; CHECK-NEXT:    [[I165386:%.*]] = phi i32 [ [[I165_CACHE936]], [[BB253]] ], [ [[I165_CACHE936]], [[BB250]] ], [ [[I165]], [[BB197]] ]
; CHECK-NEXT:    [[I171385:%.*]] = phi double [ [[I171_CACHE932]], [[BB253]] ], [ [[I171_CACHE932]], [[BB250]] ], [ [[I171]], [[BB197]] ]
; CHECK-NEXT:    [[I156383]] = phi ptr [ [[I156384_CACHE]], [[BB253]] ], [ [[I156384_CACHE]], [[BB250]] ], [ [[I156384]], [[BB197]] ]
; CHECK-NEXT:    [[I148381]] = phi ptr [ [[I148382_CACHE]], [[BB253]] ], [ [[I148382_CACHE]], [[BB250]] ], [ [[I148382]], [[BB197]] ]
; CHECK-NEXT:    [[I153379]] = phi i1 [ [[I153380_CACHE]], [[BB253]] ], [ [[I153380_CACHE]], [[BB250]] ], [ [[I153380]], [[BB197]] ]
; CHECK-NEXT:    [[I146377]] = phi i32 [ [[I146378_CACHE]], [[BB253]] ], [ [[I146378_CACHE]], [[BB250]] ], [ [[I146378]], [[BB197]] ]
; CHECK-NEXT:    [[I142375]] = phi ptr [ [[I142376_CACHE]], [[BB253]] ], [ [[I142376_CACHE]], [[BB250]] ], [ [[I142376]], [[BB197]] ]
; CHECK-NEXT:    [[I256:%.*]] = phi ptr [ [[I252]], [[BB250]] ], [ [[I254]], [[BB253]] ], [ [[I207]], [[BB197]] ]
; CHECK-NEXT:    [[I257:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 48
; CHECK-NEXT:    [[I258:%.*]] = load double, ptr [[I257]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I259:%.*]] = fsub double [[I258]], [[I75117441]]
; CHECK-NEXT:    [[I260:%.*]] = load double, ptr [[I256]], align 8, !tbaa [[TBAA42]]
; CHECK-NEXT:    [[I261:%.*]] = fsub double [[I258]], [[I260]]
; CHECK-NEXT:    [[I262:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 56
; CHECK-NEXT:    [[I263:%.*]] = load double, ptr [[I262]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I264:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 8
; CHECK-NEXT:    [[I265:%.*]] = load double, ptr [[I264]], align 8, !tbaa [[TBAA44]]
; CHECK-NEXT:    [[I266:%.*]] = fsub double [[I263]], [[I265]]
; CHECK-NEXT:    [[I267:%.*]] = fneg double [[I259]]
; CHECK-NEXT:    [[I268:%.*]] = fdiv double [[I267]], [[I261]]
; CHECK-NEXT:    [[I269:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I266]], double [[I263]])
; CHECK-NEXT:    [[I270:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 64
; CHECK-NEXT:    [[I271:%.*]] = load double, ptr [[I270]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I272:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 16
; CHECK-NEXT:    [[I273:%.*]] = load double, ptr [[I272]], align 8, !tbaa [[TBAA45]]
; CHECK-NEXT:    [[I274:%.*]] = fsub double [[I271]], [[I273]]
; CHECK-NEXT:    [[I275:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I274]], double [[I271]])
; CHECK-NEXT:    [[I276:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 72
; CHECK-NEXT:    [[I277:%.*]] = load double, ptr [[I276]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I278:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 24
; CHECK-NEXT:    [[I279:%.*]] = load double, ptr [[I278]], align 8, !tbaa [[TBAA46]]
; CHECK-NEXT:    [[I280:%.*]] = fsub double [[I277]], [[I279]]
; CHECK-NEXT:    [[I281:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I280]], double [[I277]])
; CHECK-NEXT:    [[I282:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 80
; CHECK-NEXT:    [[I283:%.*]] = load double, ptr [[I282]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I284:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 32
; CHECK-NEXT:    [[I285:%.*]] = load double, ptr [[I284]], align 8, !tbaa [[TBAA47]]
; CHECK-NEXT:    [[I286:%.*]] = fsub double [[I283]], [[I285]]
; CHECK-NEXT:    [[I287:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I286]], double [[I283]])
; CHECK-NEXT:    [[I288:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 88
; CHECK-NEXT:    [[I289:%.*]] = load double, ptr [[I288]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I290:%.*]] = getelementptr inbounds i8, ptr [[I256]], i64 40
; CHECK-NEXT:    [[I291:%.*]] = load double, ptr [[I290]], align 8, !tbaa [[TBAA48]]
; CHECK-NEXT:    [[I292:%.*]] = fsub double [[I289]], [[I291]]
; CHECK-NEXT:    [[I293:%.*]] = tail call double @llvm.fmuladd.f64(double [[I268]], double [[I292]], double [[I289]])
; CHECK-NEXT:    [[I294]] = tail call double @llvm.fmuladd.f64(double [[I269]], double [[I171385]], double [[I164387]])
; CHECK-NEXT:    [[I295]] = tail call double @llvm.fmuladd.f64(double [[I275]], double [[I171385]], double [[I163388]])
; CHECK-NEXT:    [[I296]] = tail call double @llvm.fmuladd.f64(double [[I281]], double [[I171385]], double [[I162389]])
; CHECK-NEXT:    [[I297]] = tail call double @llvm.fmuladd.f64(double [[I287]], double [[I171385]], double [[I161390]])
; CHECK-NEXT:    [[I298]] = tail call double @llvm.fmuladd.f64(double [[I293]], double [[I171385]], double [[I160391]])
; CHECK-NEXT:    [[I299]] = add nuw nsw i32 [[I165386]], 1
; CHECK-NEXT:    [[I300:%.*]] = load i32, ptr [[I142375]], align 4, !tbaa [[TBAA41]]
; CHECK-NEXT:    [[I301:%.*]] = icmp slt i32 [[I299]], [[I300]]
; CHECK-NEXT:    br i1 [[I301]], label [[BB159]], label [[BB302]]
; CHECK:       bb302:
; CHECK-NEXT:    [[I28146468]] = phi ptr [ [[I28146]], [[BB139]] ], [ [[I28146467]], [[BB255]] ]
; CHECK-NEXT:    [[I25142465]] = phi ptr [ [[I25142]], [[BB139]] ], [ [[I25142464]], [[BB255]] ]
; CHECK-NEXT:    [[I24138462]] = phi ptr [ [[I24138]], [[BB139]] ], [ [[I24138461]], [[BB255]] ]
; CHECK-NEXT:    [[I23134459]] = phi ptr [ [[I23134]], [[BB139]] ], [ [[I23134458]], [[BB255]] ]
; CHECK-NEXT:    [[I22130456]] = phi ptr [ [[I22130]], [[BB139]] ], [ [[I22130455]], [[BB255]] ]
; CHECK-NEXT:    [[I21126453]] = phi ptr [ [[I21126]], [[BB139]] ], [ [[I21126452]], [[BB255]] ]
; CHECK-NEXT:    [[I6121450]] = phi i32 [ [[I6121]], [[BB139]] ], [ [[I6121449]], [[BB255]] ]
; CHECK-NEXT:    [[I32119447]] = phi i64 [ [[I32119]], [[BB139]] ], [ [[I32119446]], [[BB255]] ]
; CHECK-NEXT:    [[I41118444:%.*]] = phi i32 [ [[I41118]], [[BB139]] ], [ [[I41118443]], [[BB255]] ]
; CHECK-NEXT:    [[I27114439]] = phi ptr [ [[I27114]], [[BB139]] ], [ [[I27114438]], [[BB255]] ]
; CHECK-NEXT:    [[I26110436]] = phi ptr [ [[I26110]], [[BB139]] ], [ [[I26110435]], [[BB255]] ]
; CHECK-NEXT:    [[I20106433]] = phi ptr [ [[I20106]], [[BB139]] ], [ [[I20106432]], [[BB255]] ]
; CHECK-NEXT:    [[I19102430]] = phi ptr [ [[I19102]], [[BB139]] ], [ [[I19102429]], [[BB255]] ]
; CHECK-NEXT:    [[I497427]] = phi ptr [ [[I497]], [[BB139]] ], [ [[I497426]], [[BB255]] ]
; CHECK-NEXT:    [[I1393424]] = phi i32 [ [[I1393]], [[BB139]] ], [ [[I1393423]], [[BB255]] ]
; CHECK-NEXT:    [[I1889421]] = phi i32 [ [[I1889]], [[BB139]] ], [ [[I1889420]], [[BB255]] ]
; CHECK-NEXT:    [[I82418]] = phi i32 [ [[I82]], [[BB139]] ], [ [[I82417]], [[BB255]] ]
; CHECK-NEXT:    [[I569415]] = phi i32 [ [[I569]], [[BB139]] ], [ [[I569414]], [[BB255]] ]
; CHECK-NEXT:    [[I3066412]] = phi i32 [ [[I3066]], [[BB139]] ], [ [[I3066411]], [[BB255]] ]
; CHECK-NEXT:    [[I3163409]] = phi i32 [ [[I3163]], [[BB139]] ], [ [[I3163408]], [[BB255]] ]
; CHECK-NEXT:    [[I4062406:%.*]] = phi i64 [ [[I4062]], [[BB139]] ], [ [[I4062405]], [[BB255]] ]
; CHECK-NEXT:    [[I1047393]] = phi i32 [ [[I1047]], [[BB139]] ], [ [[I1047392]], [[BB255]] ]
; CHECK-NEXT:    [[I303:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I294]], [[BB255]] ]
; CHECK-NEXT:    [[I304:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I295]], [[BB255]] ]
; CHECK-NEXT:    [[I305:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I296]], [[BB255]] ]
; CHECK-NEXT:    [[I306:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I297]], [[BB255]] ]
; CHECK-NEXT:    [[I307:%.*]] = phi double [ 0.000000e+00, [[BB139]] ], [ [[I298]], [[BB255]] ]
; CHECK-NEXT:    [[I308:%.*]] = fcmp ogt double [[I303]], -1.000000e+00
; CHECK-NEXT:    [[I309:%.*]] = select i1 [[I308]], double [[I303]], double -1.000000e+00
; CHECK-NEXT:    [[I310:%.*]] = fcmp ogt double [[I304]], [[I309]]
; CHECK-NEXT:    [[I311:%.*]] = select i1 [[I310]], double [[I304]], double [[I309]]
; CHECK-NEXT:    [[I312:%.*]] = fcmp ogt double [[I305]], [[I311]]
; CHECK-NEXT:    [[I313:%.*]] = select i1 [[I312]], double [[I305]], double [[I311]]
; CHECK-NEXT:    [[I314:%.*]] = fcmp ogt double [[I306]], [[I313]]
; CHECK-NEXT:    [[I315:%.*]] = select i1 [[I314]], double [[I306]], double [[I313]]
; CHECK-NEXT:    [[I316:%.*]] = select i1 [[I310]], i64 2, i64 1
; CHECK-NEXT:    [[I317:%.*]] = fcmp ogt double [[I307]], [[I315]]
; CHECK-NEXT:    [[I318:%.*]] = select i1 [[I312]], i64 3, i64 [[I316]]
; CHECK-NEXT:    [[I319:%.*]] = select i1 [[I314]], i64 4, i64 [[I318]]
; CHECK-NEXT:    [[I320:%.*]] = select i1 [[I317]], i64 5, i64 [[I319]]
; CHECK-NEXT:    [[I321:%.*]] = getelementptr inbounds i64, ptr [[ARG3]], i64 [[I4062406]]
; CHECK-NEXT:    store i64 [[I320]], ptr [[I321]], align 8, !tbaa [[TBAA49]]
; CHECK-NEXT:    [[I322:%.*]] = add nsw i32 [[I1889421]], [[I41118444]]
; CHECK-NEXT:    [[I323]] = sext i32 [[I322]] to i64
; CHECK-NEXT:    [[I324:%.*]] = icmp ugt i64 [[I323]], [[I32119447]]
; CHECK-NEXT:    br i1 [[I324]], label [[BB325]], label [[BB39]]
; CHECK:       bb325:
; CHECK-NEXT:    [[I28147:%.*]] = phi ptr [ [[I28147_BB29474]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325:%.*]] ], [ [[I28147_BB29474]], [[BB35]] ], [ [[I28146468]], [[BB302]] ]
; CHECK-NEXT:    [[I25143:%.*]] = phi ptr [ [[I25143_BB29475]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I25143_BB29475]], [[BB35]] ], [ [[I25142465]], [[BB302]] ]
; CHECK-NEXT:    [[I24139:%.*]] = phi ptr [ [[I24139_BB29476]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I24139_BB29476]], [[BB35]] ], [ [[I24138462]], [[BB302]] ]
; CHECK-NEXT:    [[I23135:%.*]] = phi ptr [ [[I23135_BB29477]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I23135_BB29477]], [[BB35]] ], [ [[I23134459]], [[BB302]] ]
; CHECK-NEXT:    [[I22131:%.*]] = phi ptr [ [[I22131_BB29478]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I22131_BB29478]], [[BB35]] ], [ [[I22130456]], [[BB302]] ]
; CHECK-NEXT:    [[I21127:%.*]] = phi ptr [ [[I21127_BB29479]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I21127_BB29479]], [[BB35]] ], [ [[I21126453]], [[BB302]] ]
; CHECK-NEXT:    [[I6122:%.*]] = phi i32 [ [[I6122_BB29480]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I6122_BB29480]], [[BB35]] ], [ [[I6121450]], [[BB302]] ]
; CHECK-NEXT:    [[I27115:%.*]] = phi ptr [ [[I27115_BB29481]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I27115_BB29481]], [[BB35]] ], [ [[I27114439]], [[BB302]] ]
; CHECK-NEXT:    [[I26111:%.*]] = phi ptr [ [[I26111_BB29482]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I26111_BB29482]], [[BB35]] ], [ [[I26110436]], [[BB302]] ]
; CHECK-NEXT:    [[I20107:%.*]] = phi ptr [ [[I20107_BB29483]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I20107_BB29483]], [[BB35]] ], [ [[I20106433]], [[BB302]] ]
; CHECK-NEXT:    [[I19103:%.*]] = phi ptr [ [[I19103_BB29484]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I19103_BB29484]], [[BB35]] ], [ [[I19102430]], [[BB302]] ]
; CHECK-NEXT:    [[I498:%.*]] = phi ptr [ [[I498_BB29485]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I498_BB29485]], [[BB35]] ], [ [[I497427]], [[BB302]] ]
; CHECK-NEXT:    [[I1395:%.*]] = phi i32 [ [[I1395_BB29486]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1395_BB29486]], [[BB35]] ], [ [[I1393424]], [[BB302]] ]
; CHECK-NEXT:    [[I1890:%.*]] = phi i32 [ [[I1890_BB29487]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1890_BB29487]], [[BB35]] ], [ [[I1889421]], [[BB302]] ]
; CHECK-NEXT:    [[I84:%.*]] = phi i32 [ [[I84_BB29488]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I84_BB29488]], [[BB35]] ], [ [[I82418]], [[BB302]] ]
; CHECK-NEXT:    [[I570:%.*]] = phi i32 [ [[I570_BB29489]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I570_BB29489]], [[BB35]] ], [ [[I569415]], [[BB302]] ]
; CHECK-NEXT:    [[I3067:%.*]] = phi i32 [ [[I328_BB29491]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I328_BB29491]], [[BB35]] ], [ [[I3066412]], [[BB302]] ]
; CHECK-NEXT:    [[I3164:%.*]] = phi i32 [ [[I326_BB29492]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I326_BB29492]], [[BB35]] ], [ [[I3163409]], [[BB302]] ]
; CHECK-NEXT:    [[I1048:%.*]] = phi i32 [ [[I1048_BB29490]], [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]] ], [ [[I1048_BB29490]], [[BB35]] ], [ [[I1047393]], [[BB302]] ]
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I326:%.*]] = add nsw i32 [[I3164]], [[I1395]]
; CHECK-NEXT:    [[I327:%.*]] = add nsw i32 [[I3067]], [[I1395]]
; CHECK-NEXT:    [[I328:%.*]] = tail call i32 @llvm.smin.i32(i32 [[I327]], i32 [[I6122]])
; CHECK-NEXT:    [[I329:%.*]] = icmp slt i32 [[I326]], [[I570]]
; CHECK-NEXT:    br i1 [[I329]], label [[BB29_FROM_BB29_FROM_BB29_FROM_BB325]], label [[BB330:%.*]]
; CHECK:       bb29.from.bb29.from.bb29.from.bb325:
; CHECK-NEXT:    [[I326_BB29492]] = phi i32 [ [[I326]], [[BB325]] ]
; CHECK-NEXT:    [[I328_BB29491]] = phi i32 [ [[I328]], [[BB325]] ]
; CHECK-NEXT:    [[I1048_BB29490]] = phi i32 [ [[I1048]], [[BB325]] ]
; CHECK-NEXT:    [[I570_BB29489]] = phi i32 [ [[I570]], [[BB325]] ]
; CHECK-NEXT:    [[I84_BB29488]] = phi i32 [ [[I84]], [[BB325]] ]
; CHECK-NEXT:    [[I1890_BB29487]] = phi i32 [ [[I1890]], [[BB325]] ]
; CHECK-NEXT:    [[I1395_BB29486]] = phi i32 [ [[I1395]], [[BB325]] ]
; CHECK-NEXT:    [[I498_BB29485]] = phi ptr [ [[I498]], [[BB325]] ]
; CHECK-NEXT:    [[I19103_BB29484]] = phi ptr [ [[I19103]], [[BB325]] ]
; CHECK-NEXT:    [[I20107_BB29483]] = phi ptr [ [[I20107]], [[BB325]] ]
; CHECK-NEXT:    [[I26111_BB29482]] = phi ptr [ [[I26111]], [[BB325]] ]
; CHECK-NEXT:    [[I27115_BB29481]] = phi ptr [ [[I27115]], [[BB325]] ]
; CHECK-NEXT:    [[I6122_BB29480]] = phi i32 [ [[I6122]], [[BB325]] ]
; CHECK-NEXT:    [[I21127_BB29479]] = phi ptr [ [[I21127]], [[BB325]] ]
; CHECK-NEXT:    [[I22131_BB29478]] = phi ptr [ [[I22131]], [[BB325]] ]
; CHECK-NEXT:    [[I23135_BB29477]] = phi ptr [ [[I23135]], [[BB325]] ]
; CHECK-NEXT:    [[I24139_BB29476]] = phi ptr [ [[I24139]], [[BB325]] ]
; CHECK-NEXT:    [[I25143_BB29475]] = phi ptr [ [[I25143]], [[BB325]] ]
; CHECK-NEXT:    [[I28147_BB29474]] = phi ptr [ [[I28147]], [[BB325]] ]
; CHECK-NEXT:    [[I32]] = zext i32 [[I328_BB29491]] to i64
; CHECK-NEXT:    tail call void @llvm.nvvm.barrier0() #[[ATTR9]]
; CHECK-NEXT:    [[I33:%.*]] = load i32, ptr [[I498_BB29485]], align 8, !tbaa [[TBAA19]]
; CHECK-NEXT:    [[I34:%.*]] = icmp sgt i32 [[I33]], 0
; CHECK-NEXT:    br i1 [[I34]], label [[BB35]], label [[BB325]]
; CHECK:       bb330:
; CHECK-NEXT:    ret void
; CHECK:       ThreadExit912:
; CHECK-NEXT:    call void asm sideeffect "exit
; CHECK-NEXT:    unreachable
;
;.
; CHECK: [[RNG17]] = !{i32 1, i32 0}
; CHECK: [[RNG18]] = !{i32 0, i32 -1}
; CHECK: [[TBAA19]] = !{[[META20:![0-9]+]], [[META21:![0-9]+]], i64 24}
; CHECK: [[META20]] = !{!"", [[META21]], i64 0, [[META24:![0-9]+]], i64 8, [[META24]], i64 16, [[META21]], i64 24, [[META25:![0-9]+]], i64 32, [[META21]], i64 40, [[META21]], i64 44, [[META21]], i64 48, [[META21]], i64 52, [[META21]], i64 56, [[META21]], i64 60}
; CHECK: [[META21]] = !{!"int", [[META22:![0-9]+]], i64 0}
; CHECK: [[META22]] = !{!"omnipotent char", [[META23:![0-9]+]], i64 0}
; CHECK: [[META23]] = !{!"Simple C/C++ TBAA"}
; CHECK: [[META24]] = !{!"long", [[META22]], i64 0}
; CHECK: [[META25]] = !{!"any pointer", [[META22]], i64 0}
; CHECK: [[RNG26]] = !{i32 -2147483648, i32 2147483647}
; CHECK: [[TBAA27]] = !{[[META20]], [[META24]], i64 8}
; CHECK: [[TBAA28]] = !{[[META20]], [[META24]], i64 16}
; CHECK: [[TBAA29]] = !{[[META30:![0-9]+]], [[META25]], i64 0}
; CHECK: [[META30]] = !{!"", [[META25]], i64 0, [[META25]], i64 8, [[META25]], i64 16, [[META25]], i64 24, [[META25]], i64 32, [[META25]], i64 40, [[META21]], i64 48, [[META21]], i64 52, [[META21]], i64 56, [[META21]], i64 60, [[META24]], i64 64, [[META21]], i64 72, [[META21]], i64 76, [[META25]], i64 80, [[META21]], i64 88, [[META25]], i64 96, [[META21]], i64 104}
; CHECK: [[TBAA31]] = !{[[META30]], [[META25]], i64 8}
; CHECK: [[TBAA32]] = !{[[META30]], [[META25]], i64 24}
; CHECK: [[TBAA33]] = !{[[META30]], [[META25]], i64 32}
; CHECK: [[TBAA34]] = !{[[META30]], [[META25]], i64 40}
; CHECK: [[TBAA35]] = !{[[META30]], [[META25]], i64 16}
; CHECK: [[TBAA36]] = !{[[META20]], [[META21]], i64 40}
; CHECK: [[TBAA37]] = !{[[META20]], [[META21]], i64 44}
; CHECK: [[TBAA38]] = !{[[META30]], [[META21]], i64 76}
; CHECK: [[TBAA39]] = !{[[META40:![0-9]+]], [[META40]], i64 0}
; CHECK: [[META40]] = !{!"double", [[META22]], i64 0}
; CHECK: [[TBAA41]] = !{[[META21]], [[META21]], i64 0}
; CHECK: [[TBAA42]] = !{[[META43:![0-9]+]], [[META40]], i64 0}
; CHECK: [[META43]] = !{!"", [[META40]], i64 0, [[META40]], i64 8, [[META40]], i64 16, [[META40]], i64 24, [[META40]], i64 32, [[META40]], i64 40}
; CHECK: [[TBAA44]] = !{[[META43]], [[META40]], i64 8}
; CHECK: [[TBAA45]] = !{[[META43]], [[META40]], i64 16}
; CHECK: [[TBAA46]] = !{[[META43]], [[META40]], i64 24}
; CHECK: [[TBAA47]] = !{[[META43]], [[META40]], i64 32}
; CHECK: [[TBAA48]] = !{[[META43]], [[META40]], i64 40}
; CHECK: [[TBAA49]] = !{[[META50:![0-9]+]], [[META50]], i64 0}
; CHECK: [[META50]] = !{!"long long", [[META22]], i64 0}
;.
